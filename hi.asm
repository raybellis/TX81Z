;****************************************************
;* A09 Assembler options			    *
;****************************************************

	IF	&VERSION < $012C
		ERR	"Incompatible assembler version - 1.44 or higher required"
	ENDIF

                        OPT     H03,NCL,NOW,EXP

FILCHR                  TEXT    $FF
BANK			TEXT	HI

			INCLUDE	"inc/hw.asm"
			INCLUDE	"inc/ram.asm"
			INCLUDE "inc/constants.asm"
			INCLUDE "inc/macros.asm"

;****************************************************
;* Used Labels					    *
;****************************************************

; CPU RAM

M0041			EQU	$0041
M0045			EQU	$0045
M0048			EQU	$0048
M0049			EQU	$0049
M0050			EQU	$0050
M0053			EQU	$0053
M0054			EQU	$0054
M0056			EQU	$0056
M0057			EQU	$0057
M0058			EQU	$0058
M0059			EQU	$0059
M005A			EQU	$005A
M005B			EQU	$005B
M006B			EQU	$006B
M006C			EQU	$006C
M006D			EQU	$006D
M006E			EQU	$006E
M006F			EQU	$006F
M0070			EQU	$0070
M0071			EQU	$0071
M0072			EQU	$0072
M0073			EQU	$0073
M0074			EQU	$0074
M0076			EQU	$0076
M0077			EQU	$0077
M0079			EQU	$0079
M007B			EQU	$007B
M007C			EQU	$007C
M007D			EQU	$007D
M007E			EQU	$007E
M0080			EQU	$0080
M0081			EQU	$0081
M0082			EQU	$0082
M0083			EQU	$0083
M0084			EQU	$0084
M0085			EQU	$0085
M0086			EQU	$0086
M0088			EQU	$0088
M0089			EQU	$0089
M008C			EQU	$008C
M008D			EQU	$008D
M008E			EQU	$008E
M0090			EQU	$0090
M0091			EQU	$0091
M0092			EQU	$0092
M0093			EQU	$0093
M0095			EQU	$0095
M0097			EQU	$0097
M0098			EQU	$0098
M009A			EQU	$009A
M009F			EQU	$009F
M00A0			EQU	$00A0
M00A1			EQU	$00A1
M00A2			EQU	$00A2
M00A3			EQU	$00A3
M00A4			EQU	$00A4
M00A5			EQU	$00A5
M00A6			EQU	$00A6
M00AD			EQU	$00AD
M00AE			EQU	$00AE
M00AF			EQU	$00AF
M00B0			EQU	$00B0
M00B2			EQU	$00B2
M00B3			EQU	$00B3
M00BF			EQU	$00BF
M00C0			EQU	$00C0
M00C1			EQU	$00C1
M00C2			EQU	$00C2
M00C3			EQU	$00C3
M00C8			EQU	$00C8
M00C9			EQU	$00C9
M00CB			EQU	$00CB
M00CC			EQU	$00CC
M00CE			EQU	$00CE
M00DA			EQU	$00DA
M00DC			EQU	$00DC
M00DF			EQU	$00DF
M00E0			EQU	$00E0
M00E1			EQU	$00E1
M00E2			EQU	$00E2
M00E3			EQU	$00E3
M00E5			EQU	$00E5
M00E7			EQU	$00E7
M00EF			EQU	$00EF
M00F0			EQU	$00F0
M00F1			EQU	$00F1
M00F2			EQU	$00F2
M00F3			EQU	$00F3
M00F4			EQU	$00F4
M00F5			EQU	$00F5
M00F6			EQU	$00F6
M00FE			EQU	$00FE

;-------	 System RAM

M69C1			EQU	$69C1
M6A19			EQU	$6A19

;-------

M7570			EQU	$7570
M7751			EQU	$7751
M7752			EQU	$7752
M7753			EQU	$7753
M7754			EQU	$7754
M7755			EQU	$7755
M775B			EQU	$775B
M775C			EQU	$775C
M775D			EQU	$775D
M775F			EQU	$775F
M7761			EQU	$7761
M7763			EQU	$7763
M7765			EQU	$7765
M7766			EQU	$7766
M7767			EQU	$7767
M776A			EQU	$776A
M776B			EQU	$776B
M776D			EQU	$776D
M776F			EQU	$776F
M7772			EQU	$7772
M7773			EQU	$7773
M7774			EQU	$7774
M7775			EQU	$7775
M7776			EQU	$7776
M7777			EQU	$7777
M7778			EQU	$7778
M7779			EQU	$7779
M777A			EQU	$777A
M777C			EQU	$777C
M777D			EQU	$777D
M777F			EQU	$777F
M7780			EQU	$7780
M7781			EQU	$7781
M7783			EQU	$7783
M7784			EQU	$7784
M7786			EQU	$7786
M7787			EQU	$7787
M7788			EQU	$7788
M7789			EQU	$7789
M778A			EQU	$778A
M778C			EQU	$778C
M778D			EQU	$778D
M778E			EQU	$778E
M778F			EQU	$778F
M7790			EQU	$7790
M7794			EQU	$7794
M7795			EQU	$7795
M7796			EQU	$7796
M77A6			EQU	$77A6
M77B6			EQU	$77B6
M77C6			EQU	$77C6
M780E			EQU	$780E
M781E			EQU	$781E
M782E			EQU	$782E
M7836			EQU	$7836
M7846			EQU	$7846
M784E			EQU	$784E
M784F			EQU	$784F
M7850			EQU	$7850
M7851			EQU	$7851
M7852			EQU	$7852
M7853			EQU	$7853
M7873			EQU	$7873
M7893			EQU	$7893
M78A3			EQU	$78A3
M78C3			EQU	$78C3
M78D3			EQU	$78D3
M7913			EQU	$7913
M791B			EQU	$791B
M7923			EQU	$7923
M792B			EQU	$792B
M7933			EQU	$7933
M7937			EQU	$7937
M793B			EQU	$793B
M7942			EQU	$7942
M7943			EQU	$7943
M7CE3			EQU	$7CE3
M7CF1			EQU	$7CF1
M7CF3			EQU	$7CF3
M7D01			EQU	$7D01
M7D03			EQU	$7D03
M7D13			EQU	$7D13
M7D15			EQU	$7D15
M7D17			EQU	$7D17
M7D19			EQU	$7D19
M7D1B			EQU	$7D1B
M7D23			EQU	$7D23
M7D2B			EQU	$7D2B
M7D33			EQU	$7D33
M7D3B			EQU	$7D3B
M7D62			EQU	$7D62
M7D6A			EQU	$7D6A
M7D72			EQU	$7D72
M7D73			EQU	$7D73
M7D7B			EQU	$7D7B
M7D83			EQU	$7D83
M7D8A			EQU	$7D8A
M7DCB			EQU	$7DCB
M7EE9			EQU	$7EE9
M7EF1			EQU	$7EF1
M7EF9			EQU	$7EF9
M7F01			EQU	$7F01
M7F08			EQU	$7F08
M7F09			EQU	$7F09
M7F29			EQU	$7F29
M7F39			EQU	$7F39
M7F89			EQU	$7F89
M7F99			EQU	$7F99
M7F9A			EQU	$7F9A
M7FB2			EQU	$7FB2

;****************************************************
;* Program Code / Data Areas			    *
;****************************************************

			ORG	$8000

hdlr_RST		BANK_HI			; ensure we remain in the HI bank
			LDAA	#LED4|LED3|LED2|LED1|BANKSEL
			STAA	DDR6		; set P63-P67 to outputs
			BANK_HI			; make sure we're really in the HI bank
			JMP	RESET		; jump to real reset routine

hdlr_OCI		JSR	OCI
			RTI
			JSR	OCI		; entry point from LO bank
			BANK_SW			; return to LO bank
			RTI

hdlr_CMI		JSR	CMI
			RTI
			JSR	CMI		; entry point from LO bank
			BANK_SW			; return to LO bank
			RTI

hdlr_SIO		JSR	SIO
			RTI
			JSR	SIO		; entry point from LO bank
			BANK_SW			; return to LO bank
			RTI

hdlr_IRQ1		JSR	IRQ1
			RTI
			JSR	IRQ1		; entry point from LO bank
			BANK_SW			; return to LO bank
			RTI

			INCLUDE	"inc/xrom.asm"
			INCLUDE	"inc/init.asm"

;-------

			ORG	$8200

RESET			; disable interrupts
			SEI

			; enable internal RAM and MRDY on P52
			LDAA	#RAME|MRE
			STAA	RP5CR

			; initalise timers
			CLRA
			STAA	TCSR1
			STAA	TCSR2

			; timer 2 input = E clock / 128
			LDAA	#CKS10
			STAA	TCSR3

			; set initial stack pointer
			LDS	#STACK_TOP

			; set all LEDs off
			LDAA	#BANKSEL
			STAA	PORT6

			; P20 is an output (Cassette interface output)
			CLR	>PORT2
			LDAA	#CASS_OUT
			STAA	DDR2
			CLR	>PORT2

			; Initialise the YM2414 OPZ FM chip
			JSR	OPZ_INIT

			; clear CPU RAM from $40 - $ff
			LDX	#XROM
			LDAB	#$C0
			CLRA
1			STAA	,X
			INX
			DECB
			BNE	1B

			LDAA	#$FF
			STAA	NOTE_NUMBER_STOP
			JSR	MIDI_INIT
			JSR	LCD_INIT
			JSR	F_C548
			LDAA	M7772
			ANDA	#$04
			BEQ	2F
			JSR	F_B820
			JSR	LO_CALL_08
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE

			; reset timer 2 and set its match value to 72
			LDAA	#0
			STAA	T2CNT
			LDAA	#72
			STAA	TCONR

			; setup timer 2
			;
			; ECMI      -> counter match interrupt enabled
			; TOS = %00 -> timer output on P26 inhibited
			; CKS = %10 -> clock = FRC / 128
			;
			LDAA	#ECMI|T2E|TOS00|CKS10
			STAA	TCSR3

			; enable IRQ1 on P50 from the OPZ chip
			OIM	#IRQ1E,RP5CR

			; clear all condition code registers
			CLRA
			TAP

			BRA	LOOP

;
; vector of entry points exposed to the other ROM bank
;
XROM_VEC		FDB	HI_CALL_00
			FDB	HI_CALL_01
			FDB	HI_CALL_02
			FDB	HI_CALL_03
			FDB	HI_CALL_04		; no-op
			FDB	HI_CALL_05
			FDB	HI_CALL_06		; no-op
			FDB	MIDI_INIT_RX
			FDB	MIDI_INIT
			FDB	HI_CALL_09
			FDB	HI_CALL_0A		; no-op
			FDB	MIDI_SEND_SENSE
			FDB	MIDI_SEND
			FDB	HI_CALL_0D		; no-op
			FDB	SEND_SYSEX_VMEM_HDR
			FDB	HI_CALL_0F
			FDB	SEND_SYSEX_END
			FDB	CALC_EF2R_VALUE
			FDB	CLEAR_ACED
			FDB	HI_CALL_13
			FDB	HI_CALL_14
			FDB	HI_CALL_15
			FDB	HI_CALL_16
			FDB	READ_SWITCHES
			FDB	HI_CALL_18
			FDB	HI_CALL_19
			FDB	HI_CALL_1A
			FDB	HI_CALL_1B
			FDB	NOTE_STOP
			FDB	NOTE_START
XROM_VEC2		FDB	hdlr_RST

;-------
;
; main execution loop
;
LOOP			OIM	#ECMI,TCSR3
			LDAA	LOOP_COUNT	; increment loop count modulo 16
			INCA			; -
			ANDA	#$0F		; -
			STAA	LOOP_COUNT	; -
			BNE	1F		; -
			JSR	F_89F9		; called every 16 iterations
1			JSR	POLL
			JSR	POLL
			NOP
			BRA	LOOP

;-------
;
; start a note?
; B -> instrument number
;
NOTE_START		STAB	M00E0			; save instrument number
			LDX	#M00F6			; offset into table
			ABX				; -
			LDAA	,X			; value -> A
			BNE	1F			; if non-zero carry on
			JMP	18F			; otherwise exit
1			PSHA				; save A
			LDAB	NOTE_NUMBER		; get the saved note number
			JSR	TEST_NOTE_LIMIT		; check if it's in the instrument's range
			BCS	3F			; it is? carry on.
			PULA				; otherwise, restore A
2			JMP	18F			; and exit
3			LDX	#M7EE9
			LDAB	M00E0			; get instrument number
			ABX
			LDAA	,X
			STAA	M0053
			JSR	F_87CA
			LDAB	M7772
			ANDB	#$04
			BEQ	4F
			TST	PFM_EDIT_ASSIGN
			BEQ	4F
			PULA
			LDAA	M7EF9
			INCA
			BEQ	2B
			BRA	5F
4			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$3F,X
			PULA
			BEQ	5F
			JMP	F_8406
5			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAB	,X
			ASLB
			STAB	M00E1
			LDAB	$08,X
			ASLB
			STAB	M00E2
			LDAB	M0053
6			CMPB	M00E2
			BLS	7F
			LDAB	M00E1
7			LDX	#M7CE3
			ABX
			TIM	#%00000010,$01,X
			BNE	8F
			TIM	#%00000001,$01,X
			BEQ	11F
8			INCB
			INCB
			DECA
			BNE	6B
			LDX	M00E3
			LDAB	,X
			LDAA	#$FF
			STAA	,X
			CPX	M0079
			BNE	9F
			LDX	M0077
			BRA	10F
9			INX
10			STX	M00E3
			LDX	#M7CE3
			ABX
11			STAB	M0053
			LSRB
			STX	M00E1
			JSR	F_9169
			LDAB	M0053
			LSRB
			LDAA	#$08
			SEI
12			SPIN3
			OPZ_POLL
			OPZ_OUT_B
			CLI
			LDX	#M7F29
			LDAB	M00E0
			ASLB
			ABX
			LDD	,X
			PSHX
			LDX	M00E1
			STD	$20,X
			LDAB	M0053
			LSRB
			LDAA	NOTE_NUMBER
			JSR	F_890E
			LDX	M00E1
			STD	$10,X
			PULX
			STD	,X
			LDX	M00E1
			LDAA	NOTE_NUMBER
			LDAB	#$02
			ORAB	M0058
			STD	,X
			LDAB	M0053
			LDX	M00E5
			STAB	,X
			CPX	M0079
			BNE	15F
			LDX	M0077
			BRA	16F
15			INX
16			STX	M00E5
			BSR	F_83C0
			LDAA	M0053
			LSRA
			INCA
			LDX	#M7EE9
			LDAB	M00E0
			ABX
			CMPA	$10,X
			BLS	17F
			LDAA	$08,X
17			ASLA
			STAA	,X
			LDX	#M7F09
			LDAB	M00E0
			ASLB
			ABX
			LDD	M00E3
			STD	,X
			LDD	M00E5
			STD	$10,X
18			RTS

;-------

F_83C0			AIM	#~IRQ1E,RP5CR
			LDAA	M0053
			LSRA
			LDAB	M00F1
			STAB	M00F0
			LDAB	NOTE_NUMBER
			SUBB	#$0D
			JSR	F_A155
			LDAB	M0053
			LSRB
			JSR	F_8525
			LDAB	M0053
			LSRB
			LDAA	#$01
1			DECB
			BMI	2F
			ASLA
			BRA	1B
2			ORAA	M00EF
			STAA	M00EF
			LDAB	M0053
			LSRB
			LDX	#M7913
			ABX
			LDAA	#$40
			ORAA	,X
			ADDB	#$20
			SEI
3			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			RTS

;-------

F_8406			LDAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			STD	M00E1
			LDX	#M7F01
			LDAB	M00E0
			ABX
			LDAA	,X
			STAA	M005A
			LDX	M00E1
			TSTA
			BEQ	3F
			CMPA	M006C
			BEQ	2F
			LDAB	M006C
1			TST	,X
			BEQ	3F
			INX
			INX
			DECB
			BNE	1B
			RTS
2			JSR	F_84EB
			LDAA	NOTE_NUMBER
			LDAB	#$02
			ORAB	M0058
			STD	,X
			LDAB	M00E0
			LDAA	#$03
			BRA	4F
3			LDAA	NOTE_NUMBER
			LDAB	#$02
			ORAB	M0058
			STD	,X
			LDAA	M005A
			INCA
			STAA	M005A
			LDX	#M7F01
			LDAB	M00E0
			ABX
			STAA	,X
4			LDX	#M7EF1
			ABX
			LDAB	,X
			LDX	#M7CE3
			ASLB
			ABX
			LSRB
			CMPA	#$01
			BNE	6F
			PSHB
			PSHX
			JSR	F_9169
			PULX
			LDAA	#$08
			PULB
			PSHB
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_B
			CLI
			PSHX
			LDAA	NOTE_NUMBER
			JSR	F_890E
			PULX
			PSHX
			STD	$10,X
			PSHA
			PSHB
			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$41,X
			PULB
			PULA
			PULX
			BEQ	5F
			STD	$20,X
5			PULB
			ASLB
			STAB	M0053
			JSR	F_83C0
			RTS
6			CMPA	#$02
			BNE	10F
			LDAA	NOTE_NUMBER
			PSHX
			PSHB
			CLRB
			LDX	M00E1
			SUBD	,X
			BCC	7F
			CLRA
			BRA	8F
7			LDAA	#$01
8			LDX	#M005B
			LDAB	M00E0
			ABX
			STAA	,X
9			LDAA	NOTE_NUMBER
			STAA	$08,X
			PULB
			JSR	F_890E
			PULX
			STD	$10,X
			RTS
10			PSHX
			PSHB
			LDX	#M005B
			LDAB	M00E0
			ABX
			LDAA	,X
			BEQ	11F
			LDAA	NOTE_NUMBER
			SUBA	$08,X
			BCS	12F
			BRA	9B
11			LDAA	NOTE_NUMBER
			SUBA	$08,X
			BCC	12F
			BRA	9B
12			PULB
			PULX
			RTS

;-------

F_84EB			LDX	#M005B
			LDAB	M00E0
			ABX
			CLR	>M006B
			TST	,X
			BEQ	1F
			COM	>M006B
1			CLRB
2			PSHX
			LDX	M00E1
			ASLB
			ABX
			LSRB
			LDAA	,X
			PULX
			BEQ	5F
			TST	,X
			BNE	3F
			CMPA	M006B
			BCS	5F
			BRA	4F
3			CMPA	M006B
			BHI	5F
4			STAA	M006B
			STAB	M007B
5			INCB
			CMPB	M006C
			BNE	2B
			LDX	M00E1
			LDAB	M007B
			ASLB
			ABX
			RTS

;-------

F_8525			TBA
			PSHA
			LDX	#M7846
			ABX
			LDAB	,X
			ANDB	#$03
			CMPB	#$01
			BNE	1F
			LDAB	M7850
			BMI	3F
			LDX	#M782E
			ABX
			TST	,X
			BEQ	3F
			LDAB	#$10
			BRA	2F
1			CMPB	#$02
			BNE	4F
			LDAB	M7851
			BMI	3F
			LDX	#M782E
			ABX
			TST	,X
			BEQ	3F
			LDAB	#$20
2			ORAB	M7852
			LDAA	#$1B
			SEI
			OPZ_POLL
			OPZ_OUT_B
			CLI
3			PULB
			BRA	5F
4			PULB
			LDX	#M782E
			ABX
			TST	,X
			BEQ	5F
			LDX	#M7836
			ASLB
			ABX
			LDD	#$3FFF
			STD	,X
5			CLRB
			LDX	#M782E
			ABX
			TST	,X
			BEQ	6F
			LDX	#M7836
			ASLB
			ABX
			LDD	#$3FFF
			STD	,X
6			RTS

;-------
;
; stop a note?
;
NOTE_STOP		STAB	M00E0
			LDX	#M00F6
			ABX
			TST	,X
			BNE	1F
			JMP	10F
1			LDAB	NOTE_NUMBER_STOP
			JSR	TEST_NOTE_LIMIT
			BCS	2F
			JMP	10F
2			JSR	F_87CA
			LDAA	M7772
			ANDA	#$04
			BEQ	3F
			TST	PFM_EDIT_ASSIGN
			BNE	4F
3			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$3F,X
			BEQ	4F
			JMP	11F
4			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAA	,X
			TAB
			LDX	#M7CE3
			ASLB
			ABX
5			LDAB	NOTE_NUMBER_STOP
			CMPB	,X
			BNE	6F
			TIM	#%00000010,$01,X
			BEQ	6F
			LDAB	M0058
			EORB	$01,X
			ANDB	#$7C
			BEQ	F_85FA
6			INX
			INX
			PSHX
			LDX	#M7EF9
			LDAB	M00E0
			ABX
			CMPA	,X
			PULX
			BEQ	10F
			INCA
			BRA	5B

;-------

F_85FA			PSHX
			PSHB
			LDX	#M0049
			LDAB	M00E0
			ABX
			PULB
			TIM	#%10000000,$00,X
			PULX
			BNE	9F

F_8609			CLR	$01,X
			AIM	#~IRQ1E,RP5CR
			LDAB	#$08
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			PSHA
			BSR	F_8631
			PULA
			BSR	F_8664
			BRA	10F
9			OIM	#%00000001,$01,X
			AIM	#%11111101,$01,X
10			RTS

;-------

F_8631			AIM	#~IRQ1E,RP5CR
			LDAB	#$01
			PSHA
1			DECA
			BMI	2F
			ASLB
			BRA	1B
2			COMB
			ANDB	M00EF
			STAB	M00EF
			PULA
			TAB
			LDX	#M7913
			ABX
			LDAA	,X
			ANDA	#$BF
			ADDB	#$20
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			OIM	#IRQ1E,RP5CR
			RTS

;-------

F_8664			ASLA
			STAA	M0054
			LDX	M0077
1			LDAA	,X
			CMPA	M0054
			BEQ	2F
			CPX	M0079
			BEQ	10F
			INX
			BRA	1B
2			CPX	M00E3
			BEQ	7F
3			CPX	M0079
			BEQ	4F
			INX
			CPX	M00E5
			BEQ	5F
			DEX
			LDAA	$01,X
			STAA	,X
			INX
			BRA	3B
4			PSHX
			LDX	M00E5
			CPX	M0077
			PULX
			BEQ	6F
			PSHX
			LDX	M0077
			LDAA	,X
			PULX
			STAA	,X
			LDX	M0077
			BRA	3B
5			DEX
6			STX	M00E5
			LDAA	#$FF
			STAA	,X
			BRA	10F
7			LDAA	#$FF
			STAA	,X
			CPX	M0079
			BNE	8F
			LDX	M0077
			BRA	9F
8			INX
9			STX	M00E3
10			LDX	#M7F09
			LDAB	M00E0
			ASLB
			ABX
			LDD	M00E3
			STD	,X
			LDD	M00E5
			STD	$10,X
			RTS
11			LDX	#M7F01
			LDAB	M00E0
			ABX
			LDAA	,X
			STAA	M005A
			TSTA
			BLE	15F
			LDAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			STD	M00E1
			JSR	F_876B
			BCS	15F

;-------	fallthrough

F_86E4			LDAA	M005A
			DECA
			STAA	M005A
			PSHX
			LDX	#M7F01
			LDAB	M00E0
			ABX
			STAA	,X
			PULX
			BNE	F_8731
			LDX	M00E1
			PSHX
			LDX	#M0049
			LDAB	M00E0
			ABX
			TST	,X
			PULX
			BMI	14F

;-------	fallthrough

F_8703			CLR	$01,X
			AIM	#~IRQ1E,RP5CR
			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAB	,X
			LDAA	#$08
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_B
			CLI
			TBA
			JSR	F_8631
			BRA	15F
14			OIM	#%00000001,$01,X
			AIM	#%11111101,$01,X
15			RTS

;-------

F_8731			LDD	#$0000
			STD	,X
			JSR	F_8787
			PSHB
			PSHA
			PSHX
			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAB	,X
			PSHB
			JSR	F_890E
			STD	M00DC
			PULB
			LDX	#M7CF3
			ASLB
			ABX
			LDD	M00DC
			STD	,X
			PULX
			LDAA	M005A
			CMPA	#$01
			BNE	1F
			LDD	#$0000
			STD	,X
			LDX	M00E1
			PULA
			PULB
			STD	,X
			BRA	2F
1			PULA
			PULB
2			RTS

;-------

F_876B			LDAB	M006C
			LDX	M00E1
1			LDAA	,X
			CMPA	NOTE_NUMBER_STOP
			BNE	2F
			LDAA	M0058
			EORA	$01,X
			ANDA	#$7C
			BEQ	3F
2			INX
			INX
			DECB
			BNE	1B
			SEC
			BRA	4F
3			CLC
4			RTS

;-------

F_8787			LDX	M00E1
			STX	M0079
			LDX	#M005B
			LDAB	M00E0
			ABX
			CLR	$08,X
			CLRB
			TST	,X
			BNE	1F
			COM	$08,X
1			PSHX
			LDX	M0079
			LDAA	,X
			PULX
			BEQ	4F
			TST	,X
			BEQ	2F
			CMPA	$08,X
			BCS	4F
			BRA	3F
2			CMPA	$08,X
			BHI	4F
3			STAA	$08,X
			STAB	M007B
4			PSHX
			LDX	M0079
			INX
			INX
			STX	M0079
			PULX
			INCB
			CMPB	M006C
			BNE	1B
			LDX	M00E1
			LDAB	M007B
			ASLB
			ABX
			LDD	,X
			RTS

;-------

F_87CA			LDAB	M00E0
			LDX	#M7EF1
			ABX
			LDAB	,X
			BMI	1F
			PSHX
			LDX	#M00E7
			ABX
			STX	M0077
			PULX
			LDAB	$08,X
			BMI	1F
			LDX	#M00E7
			ABX
			STX	M0079
			LDX	#M7F09
			LDAB	M00E0
			ASLB
			ABX
			LDD	,X
			STD	M00E3
			LDD	$10,X
			STD	M00E5
			BRA	2F
1			LDX	#M00E7
			STX	M0077
			STX	M0079
			STX	M00E3
			STX	M00E5
2			RTS

;-------
;
; check if note B is in range of the current instrument
; sets C bit if it is (clear otherwise)
;
TEST_NOTE_LIMIT		LDAA	M7772
			ANDA	#$04
			BEQ	3F
			PSHB				; save B
			LDAA	M00E0			; calculate offset to
			LDAB	#12			; instrument data in
			MUL				; the performance edit
			LDX	#PFM_EDIT_BUF		; buffer
			ABX				; -> X
			PULB				; restore B
			LDAA	$05,X			; get high note limit
			CMPA	$04,X			; compare to low note limit
			BCC	1F
			CMPB	$04,X
			BCC	3F
			CMPB	$05,X
			BLS	3F
			BRA	2F
1			CMPB	$04,X
			BCS	2F
			CMPB	$05,X
			BLS	3F
2			CLC
			RTS
3			SEC
			RTS

;-------
;
; test note limit for note off?
;
F_8831			PSHA
			LDAA	M7772
			ANDA	#$04
			PULA
			BEQ	3F
			PSHB
			LDAB	#12
			MUL
			LDX	#PFM_EDIT_BUF
			ABX
			PULB
			LDAA	$05,X
			CMPA	$04,X
			BCC	1F
			CMPB	$04,X
			BCC	3F
			CMPB	$05,X
			BLS	3F
			BRA	2F
1			CMPB	$04,X
			BCS	2F
			CMPB	$05,X
			BLS	3F
2			CLC
			RTS
3			SEC
			RTS

;-------

F_885F			STAB	M00E0
			LDX	#M0041
			ABX
			LDAA	,X
			ANDA	#$80
			PSHX
			PSHA
			COMA
			ANDA	$08,X
			BEQ	5F
			JSR	F_87CA
			LDAA	M7772
			ANDA	#$04
			BEQ	1F
			TST	PFM_EDIT_ASSIGN
			BNE	2F
1			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$3F,X
			BEQ	2F
			JMP	6F
2			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAA	,X
			TAB
			LDX	#M7CE3
			ASLB
			ABX
3			TIM	#%00000001,$01,X
			BEQ	4F
			AIM	#~IRQ1E,RP5CR
			LDAB	#$08
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			CLR	$01,X
			PSHX
			PSHA
			JSR	F_8631
			PULA
			PSHA
			JSR	F_8664
			PULA
			PULX
4			INX
			INX
			PSHX
			LDX	#M7EF9
			LDAB	M00E0
			ABX
			CMPA	,X
			PULX
			BEQ	5F
			INCA
			BRA	3B
5			PULA
			PULX
			STAA	$08,X
			RTS
6			LDAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			XGDX
			TIM	#%00000001,$01,X
			BEQ	7F
			CLR	$01,X
			AIM	#~IRQ1E,RP5CR
			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAA	,X
			LDAB	#$08
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			JSR	F_8631
7			BRA	5B

;-------

F_890E			STAB	M00DC
			LDX	#M793B
			ABX
			LDAB	,X
			PSHB
			LDAB	M7772
			BITB	#$04
			BNE	1F
			JMP	13F
1			PULB				; inst number
			PSHA
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			PULA
			PSHX
			TST	$0B,X			; microtune enable (0/1)
			BEQ	5F
			LDAB	PFM_EDIT_MICTUN
			CMPB	#$01
			BNE	2F
			TAB
			ASLB
			LDX	#MICROTUNE_FULL
			ABX
			LDD	,X
			ASLB
			ASLB
			BRA	6F
2			TAB
			CLRA
3			SUBB	#$0C
			BMI	4F
			ADDA	M7F99
			BRA	3B
4			ADDB	#$0C
			LDX	#M7F9A
			ASLB
			ABX
			ADDA	,X
			LDAB	$01,X
			ASLB
			ASLB
			BRA	6F
5			CLRB
6			SUBA	#$0D
			STD	M008E
			LDAB	M00DC
			LDX	#M791B
			ABX
			ADDA	,X
7			BLT	9F
8			CMPA	#$60
			BCS	10F
			SUBA	#$0C
			BRA	8B
9			ADDA	#$0C
			BRA	7B
10			STAA	M008E
			PULX
			LDAA	#$9F
			LDAB	M008E
			SBA
			LSRA
			LSRA
			LDAB	$06,X
			SUBB	#$07
			BPL	11F
			NEGB
			MUL
			LSRD
			LSRD
			STD	M00DC
			LDD	M008E
			SUBD	M00DC
			BPL	12F
			CLRA
			BRA	12F
11			MUL
			LSRD
			LSRD
			STD	M00DC
			LDD	M008E
			ADDD	M00DC
			CMPA	#$60
			BCS	12F
			CLRA
12			RTS
13			PULB
			TST	M7F99
			BEQ	17F
			LDAB	M7789
			CMPB	#$02
			BEQ	16F
			TAB
			CLRA
14			SUBB	#$0C
			BMI	15F
			ADDA	M7F99
			BRA	14B
15			ADDB	#$0C
			LDX	#M7F9A
			ASLB
			ABX
			ADDA	,X
			LDAB	$01,X
			ASLB
			ASLB
			BRA	18F
16			TAB
			ASLB
			LDX	#MICROTUNE_FULL
			ABX
			LDD	,X
			ASLB
			ASLB
			BRA	18F
17			CLRB
18			SUBA	#$0D
			STD	M008E
			LDAB	M00DC
			LDX	#M791B
			ABX
			ADDA	,X
19			BLT	21F
20			CMPA	#$60
			BCS	22F
			SUBA	#$0C
			BRA	20B
21			ADDA	#$0C
			BRA	19B
22			STAA	M008E
			LDD	M008E
			RTS

;-------

F_89F9			JSR	READ_SWITCHES
			TSTB
			BEQ	F_8A08
			CLR	>M00CC
			CLR	>M0056
			CLR	>M0057

;-------	fallthrough

F_8A08			CMPB	#$03
			BCS	1F
			CMPB	#$04
			BEQ	1F
			LDAA	#$FF
			STAA	M7795
			CMPB	#$0A
			BCC	1F
			STAA	M7794
1			LDAA	M7772

			JSR	JMPOFF1
			FCB	C_8ADD - *
			FCB	$01
			FCB	C_8A39 - *
			FCB	$03
			FCB	C_8AC2 - *
			FCB	$08
			FCB	C_8ACA - *
			FCB	$0A
			FCB	2F - *
			FCB	$0C
			FCB	3F - *
			FCB	$0D
			FCB	2F - *
			FCB	$00

2			JMP	C_8B9E
3			JMP	C_8BB3
4			JMP	C_8BBB

C_8A39			CMPA	#$12
			BCC	17F

			JSR	JMPOFFA
			FCB	13F - *
			FCB	13F - *
			FCB	C_8A69 - *
			FCB	C_8ADD - *
			FCB	13F - *
			FCB	13F - *
			FCB	6F - *
			FCB	C_8ADD - *
			FCB	C_8ADD - *
			FCB	18F - *
			FCB	19F - *
			FCB	C_8ADD - *
			FCB	C_8ADD - *
			FCB	C_8ADD - *
			FCB	20F - *
			FCB	C_8ADD - *
			FCB	C_8ADD - *
			FCB	18F - *

6			DECB
			TST	M7795
			BMI	7F
			TSTB
			BNE	10F
			JSR	F_B88D
			BRA	10F
7			JSR	F_8D02
			TAB

;-------	fallthrough

F_8A64			JSR	F_B7C3
			BRA	4B

C_8A69			SUBB	#$01
			TST	M7795
			BMI	11F
			TSTB
			BNE	10F
			JSR	F_B83F
10			LDAA	#$FF
			STAA	M7795
			BRA	4B
11			JSR	F_8CCE
			TAB

;-------	fallthrough

F_8A81			JSR	F_B784
			BRA	4B

;-------

13			ANDA	#$18
			BNE	C_8ADD
			TST	M7794
			BMI	15F
			CMPB	#$01
			BNE	14F
			JSR	COPY_OPERATOR_EG
14			LDAA	#$FF
			STAA	M7794
			BRA	4B
15			JSR	F_B931
			BCS	16F
			JSR	F_BC2A
			BCS	4B
			BRA	C_8ADD
16			TST	>M00CE
			BEQ	4B
			CLR	>M00CE
17			BRA	C_8ADD
18			JSR	F_B8E3
			BRA	22F
19			JSR	F_B862
			BRA	22F
20			JSR	F_B884
			BRA	22F
C_8AC2			SUBB	#$03
			JSR	F_AF7B
22			JMP	C_8BBB
C_8ACA			SUBB	#$08
			CMPA	#$07
			BCC	C_8ADD
			CLR	>M00A4

			JSR	JMPOFFA
			FCB	27F - *
			FCB	27F - *
			FCB	37F - *
			FCB	34F - *
			FCB	25F - *
			FCB	26F - *
			FCB	C_8ADD - *

C_8ADD			JMP	44F
25			JMP	39F
26			JMP	38F
27			LDAA	M7788
			BEQ	33F
			CMPA	#$01
			BEQ	31F
			CMPA	#$02
			BHI	C_8ADD
			LDAA	M7774
			CMPA	#$1C
			BNE	30F
			LDAA	M7789
			BEQ	30F
			CMPA	#$02
			BEQ	29F
			TST	M778C
			BEQ	28F
			JSR	F_8C90
			LDAB	M7774
			BRA	36F
28			COMB
			ANDB	#$01
			LDAA	#$0A
			STAA	DPTR
			LDAA	M778A
			JSR	F_8D0C
			STAA	M778A
			BRA	32F
29			JSR	F_8C64
			BCS	32F
30			JSR	F_8C42
			BRA	32F
31			LDAA	M7789
			PSHA
			JSR	F_8C06
			JSR	F_8BC2
			PULA
			JSR	F_8D48
32			LDAB	M7774
			BRA	36F
33			LDAA	M7772
			CMPA	#$01
			BEQ	35F
			LDAA	#$14
			STAA	SPTR
			LDAA	#$1E
			STAA	DPTR
			LDAA	M7774
			JSR	F_8CA9
			TAB
			BRA	36F
34			JMP	C_8BBB
35			LDAA	#$0A
			STAA	DPTR
			CLR	>SPTR
			LDAA	M7774
			JSR	F_8CA9
			TAB
			JSR	F_8DB2
36			JSR	F_B1DD
			BRA	C_8BBB
37			JSR	F_8CE7
			TAB
			JSR	F_B784
			BRA	C_8BBB
38			LDAA	#$35
			STAA	DPTR
			LDAA	#$28
			STAA	SPTR
			LDAA	M7774
			JSR	F_8CA9
			TAB
			JSR	F_8D1D
			BRA	36B
39			LDAA	#$3E
			STAA	DPTR
			LDAA	#$3C
			STAA	SPTR
			LDAA	M7774
			JSR	F_8CA9
			TAB
			BRA	36B
C_8B9E			TST	M7790
			BEQ	41F
			CMPB	#$0C
			BCC	44F
			SUBB	#$0A
			JSR	F_8DCD
			BRA	C_8BBB
41			JSR	F_AB9E
			BRA	C_8BBB
C_8BB3			COM	M7790
			BEQ	C_8BBB
			CLR	>M009A
C_8BBB			JSR	F_C95A
			JSR	F_C972
44			RTS

;-------

F_8BC2			LDAA	M7774
			CMPA	#$04
			BEQ	3F
			CMPA	#$15
			BNE	5F
			LDAA	M7789
			TSTB
			BEQ	1F
			CMPA	#$08
			BNE	5F
			BRA	2F
1			CMPA	#$0A
			BNE	5F
2			TST	SYS_SYSAVL
			BNE	5F
			JSR	F_8C06
			JSR	F_8C06
			JSR	F_8C06
			BRA	5F
3			PSHB
			JSR	F_B6A8
			TSTB
			BNE	4F
			TAB				; B <- A (operator number)
			LDAA	#$05			; get per-op ACED pointer
			JSR	GET_OP_PTR_BA		; -
			TST	$57,X			; check fixed frequency flag
			BNE	4F
			PULB
			JSR	F_8C06
			BRA	5F
4			PULB
5			RTS

;-------

F_8C06			LDAA	M7789
			CMPA	M778D
			BHI	2F
			TSTB
			BNE	1F
			DECA
			BPL	3F
			BRA	2F
1			INCA
			CMPA	M778D
			BLS	3F
2			CLR	M7788
			CLR	M7789
			LDAA	#$01
			STAA	M00A4
			LDAA	M7774
			CMPA	#$19
			BCS	4F
			CMPA	#$1C
			BCC	4F
			PSHB
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE
			PULB
			BRA	4F
3			STAA	M7789
4			RTS

;-------

F_8C42			LDAA	M778A
			CMPA	M778E
			BHI	2F
			TSTB
			BNE	1F
			DECA
			BPL	3F
			BRA	2F
1			INCA
			CMPA	M778E
			BLS	3F
2			LDAA	#$01
			STAA	M7788
			STAA	M00A4
			CLRA
3			STAA	M778A
			RTS

;-------

F_8C64			PSHB
			LDX	#M7CE3
			LDAB	#$08
1			TIM	#%00000010,$01,X
			BNE	3F
			INX
			INX
			DECB
			BNE	1B
			LDX	#M7F39
			LDAB	M006C
2			TIM	#%00000010,$01,X
			BNE	3F
			INX
			INX
			DECB
			BNE	2B
			CLC
			BRA	4F
3			LDAA	,X
			ANDA	#$7F
			STAA	M778A
			SEC
4			PULB
			RTS

;-------

F_8C90			LDAA	M778F
			TSTB
			BEQ	1F
			INCA
			CMPA	#$0C
			BCS	2F
			CLRA
			BRA	2F
1			DECA
			CMPA	#$0C
			BCS	2F
			LDAA	#$0B
2			STAA	M778F
			RTS

;------

F_8CA9			CMPA	DPTR
			BHI	2F
			TSTB
			BNE	3F
			DECA
			TST	>SPTR
			BEQ	1F
			CMPA	SPTR
			BCC	4F
			LDAA	SPTR
			BRA	4F
1			CMPA	DPTR
			BCS	4F
2			LDAA	SPTR
			BRA	4F
3			INCA
			CMPA	DPTR
			BLS	4F
			LDAA	DPTR
4			RTS

;-------

F_8CCE			LDAA	M7773
			TSTB
			BEQ	1F
			DECA
			BRA	2F
1			INCA
2			ANDA	#$1F
			LDAB	M7773
			ANDB	#$E0
			ABA
			CMPA	#$A0
			BCS	3F
			LDAA	#$80
3			RTS

;-------

F_8CE7			LDAA	M7773
			TSTB
			BNE	1F
			SUBA	#$20
			CMPA	#$A0
			BCS	2F
			ANDA	#$1F
			ADDA	#$80
			BRA	2F
1			ADDA	#$20
			CMPA	#$A0
			BCS	2F
			ANDA	#$1F
2			RTS

;-------

F_8D02			LDAA	#$17
			STAA	DPTR
			LDAA	M7779
			JMP	F_8D0C

;-------

F_8D0C			TSTB
			BEQ	1F
			DECA
			BPL	2F
			LDAA	DPTR
			BRA	2F
1			INCA
			CMPA	DPTR
			BLS	2F
			CLRA
2			RTS

;-------

F_8D1D			CMPB	#$33
			BNE	1F
			LDAA	M778C
			ADDA	#$02
			CMPA	#$0A
			BCS	3F
			LDAA	#$09
			BRA	3F
1			CMPB	#$35
			BNE	2F
			CLRA
			BRA	3F
2			LDAA	M7774
			CMPA	#$33
			BNE	4F
			LDAA	M778C
			SUBA	#$02
			BPL	3F
			CLRA
3			STAA	M778C
4			RTS

;-------

F_8D48			PSHB
			TST	M7788
			BEQ	3F
			LDAB	M7774
			CMPB	#$03
			BNE	6F
			CMPA	#$01
			BNE	1F
			LDAA	M7789
			BEQ	4F
			LDAA	M778C
			CMPA	#$05
			BCC	4F
			DECA
			BPL	2F
			CLRA
			BRA	2F
1			LDAA	M7789
			BEQ	4F
			CMPA	#$01
			BNE	5F
			LDAA	M778C
			CMPA	#$04
			BCC	4F
			INCA
2			STAA	M778C
3			PULB
			RTS
4			CLRA
			BRA	2B
5			LDAA	M778C
			CMPA	#$04
			BCS	3B
			BRA	4B
6			CMPB	#$04
			BNE	7F
			LDAA	M7789
			BEQ	4B
			CMPA	#$03
			BEQ	4B
			CMPA	#$06
			BEQ	4B
			CMPA	#$09
			BEQ	4B
			LDAA	#$01
			BRA	2B
7			CMPB	#$07
			BNE	8F
			BRA	5B
8			CMPB	#$09
			BNE	3B
			BRA	5B

;-------

F_8DB2			TSTB
			BEQ	2F
			CMPB	#$05
			BEQ	1F
			CMPB	#$06
			BEQ	1F
			CMPB	#$08
			BNE	3F
1			LDAA	M778C
			CMPA	#$04
			BCS	3F
2			CLRA
			STAA	M778C
3			RTS

;-------

F_8DCD			CMPA	#$09
			BEQ	1F
			CMPA	#$11
			BNE	2F
1			JMP	29F
2			CMPA	#$07
			BCC	3F

			JSR	JMPOFFA
			FCB	C_8DEA - *
			FCB	C_8E38 - *
			FCB	3F - *
			FCB	3F - *
			FCB	C_8E2E - *
			FCB	C_8EBB - *
			FCB	4F - *

3			RTS
4			JMP	C_8EF6
C_8DEA			LDAA	M776B
			ANDA	#$F7
			STAA	M776B
			LDAA	M7774
			CMPA	#$1F
			BNE	6F
			JMP	21F
6			CMPA	#$1B
			BNE	7F
			LDAA	M7788
			CMPA	#$02
			BNE	3B
			BRA	14F
7			CMPA	#$1C
			BNE	3B
			LDAA	M7788
			CMPA	#$02
			BNE	3B
			LDAA	M7789
			CMPA	#$01
			BEQ	8F
			CMPA	#$03
			BNE	16F
8			LDAA	M778A
			CMPA	#$01
			BCS	9F
			CMPA	#$05
			BCS	16F
9			CLRA
			JMP	27F
C_8E2E			LDAA	M7774
			CMPA	#$3C
			BNE	3B
			JMP	C_8EF6
C_8E38			LDAA	M7774
			BEQ	13F
			CMPA	#$0B
			BCC	3B
			CMPA	#$03
			BCS	3B
			BNE	15F
			LDAA	M7788
			BEQ	3B
			CMPA	#$01
			BNE	3B
			LDAA	M7789
			BEQ	13F
			CMPA	#$01
			BEQ	12F
			JMP	C_8EF6
12			JMP	28F
13			LDAA	#$04
			JMP	26F
14			LDAA	#$03
			JMP	26F
15			CMPA	#$04
			BNE	17F
			LDAA	M7788
			CMPA	#$01
			BNE	19F
			LDAA	M7789
			BEQ	13B
			CMPA	#$03
			BEQ	13B
			CMPA	#$06
			BEQ	13B
			CMPA	#$09
			BEQ	13B
			LDAA	#$05
			BRA	26F
16			LDAA	#$01
			BRA	26F
17			CMPA	#$07
			BCS	C_8EF6
			BEQ	18F
			CMPA	#$09
			BCS	C_8EF6
			BEQ	18F
			BHI	20F
18			LDAA	M7788
			CMPA	#$01
			BEQ	C_8EF6
19			JMP	3B
20			LDAA	M7788
			CMPA	#$01
			BNE	19B
			LDAA	M7789
			CMPA	#$0F
			BNE	19B
20			LDAA	#$09
			BRA	26F
21			LDAA	#$0F
			BRA	26F
C_8EBB			LDAA	M7774
			CMPA	#$28
			BEQ	19B
			CMPA	#$34
			BEQ	19B
			CMPA	#$36
			BCC	19B
			CMPA	#$35
			BEQ	20B
			CMPA	#$33
			BNE	C_8EF6
			LDAA	PFM_EDIT_MICTUN
			CMPA	#$03
			BCS	23F
			CMPA	#$07
			BCS	20B
23			LDAA	M778C
			BEQ	24F
			CMPA	#$02
			BNE	20B
			TSTB
			BNE	20B
			DEC	M778C
			BRA	20B
24			TSTB
			BEQ	20B
			INC	M778C
			BRA	20B
C_8EF6			LDAA	#$07
26			STAA	DPTR
			CLR	>SPTR
			LDAA	M778C
			JSR	F_8CA9
27			STAA	M778C
			LDAB	M7774
			JMP	F_B1DD
28			LDAA	#$08
			BRA	26B
29			LDAA	#$01
			STAA	DPTR
			CLR	>SPTR
			LDAA	M0059
			JSR	F_8CA9
			STAA	M0059
			RTS

;-------
;
; CMI interrupt handler
;
CMI			LDAA	#T2E|CKS10		; T2 enabled, E / 128
			STAA	TCSR3			;
			LDAA	TCSR1			; save TSCR1 state
			PSHA
			AIM	#~EOCI1,TCSR1		; disable timer 1 interrupts
			LDAA	TCSR2
			PSHA
			AIM	#~EOCI2,TCSR2
			LDAA	RP5CR
			PSHA
			AIM	#~IRQ1E,RP5CR
			LDAA	XROM
			PSHA
			CLI
			COM	>M006D
			JSR	F_EC17
			JSR	F_E8D0
			JSR	F_ABC7
			TST	>M006D
			BPL	1F
			JSR	F_A390
			JSR	F_AAF7
			JSR	F_AA1A
			JSR	F_A538
			BRA	4F
1			JSR	F_A64D
			LDAA	M776B
			ANDA	#$02
			BEQ	2F
			LDAA	M7767
			BEQ	2F
			ANDA	#$03
			DECA
			STAA	M7767
			BRA	3F
2			JSR	F_ECFE
			JSR	F_A68F
3			JSR	F_A94B
4			SEI
			SPIN3
			PULA
			STAA	XROM
			PULA
			STAA	RP5CR
			PULA
			STAA	TCSR2
			PULA
			STAA	TCSR1
			OIM	#ECMI,TCSR3
			RTS

;-------
;
; Timer 1 Output Compare Interrupt
;
OCI			LDAA	RP5CR
			PSHA
			AIM	#~IRQ1E,RP5CR		; disable IRQ1 (OPZ)
			LDAA	TCSR3
			PSHA
			LDAA	TCSR2
			PSHA
			AIM	#~EOCI1,TCSR1
			AIM	#~EOCI2,TCSR2
			AIM	#~ECMI,TCSR3
			LDD	FRCH
			ADDD	#14139
			STD	OCR1H
			CLI
			PULB
			ROLB
			ROLB
			BCS	2F
			ROLB
			BCS	1F
			BRA	4F
1			NOP
			NOP
			BRA	3F
2			LDAA	M776B
			BITA	#$01
			BEQ	4F
			LDAA	XROM
			PSHA
			LDX	M0077
			PSHX
			LDX	M0079
			PSHX
			LDAA	M007B
			PSHA
			JSR	F_EAE6
			PULA
			STAA	M007B
			PULX
			STX	M0079
			PULX
			STX	M0077
			PULA
			STAA	XROM
			LDAA	M776B
			BITA	#$01
			BEQ	4F
3			SEI
			OIM	#EOCI1,TCSR1
			SPIN3
			PULA
			STAA	TCSR3
			PULA
			STAA	RP5CR
			RTS
4			SEI
			SPIN3
			PULA				; restore TCSR3
			STAA	TCSR3			; -
			PULA				; restore RP5CR
			STAA	RP5CR			; -
			RTS

;-------
;
; IRQ1 handler (OPZ chip)
;
IRQ1			LDAA	TCSR3
			PSHA
			AIM	#~ECMI,TCSR3
			AIM	#~IRQ1E,RP5CR
			CLI
			LDAB	OPZ_DATA
			BITB	#$20
			BEQ	7F
			ANDB	#$1C
			LSRB
			LSRB
			TST	>M00EF
			BEQ	3F
			PSHB
			TBA
			LDAB	#$01
1			DECA
			BMI	2F
			ASLB
			BRA	1B
2			ANDB	M00EF
			BNE	4F
			PULB
3			PSHB
			JSR	F_91B0
			PULB
			BRA	5F
4			COMB
			ANDB	M00EF
			STAB	M00EF
			PULB
			PSHB
			JSR	F_91B0
			PULB
			ORAB	#$78
			LDAA	#$08
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_B
			CLI
			ANDB	#$07
5			LDX	#M7913
			ABX
			LDAA	,X
			ANDA	#$BF
			ADDB	#$20
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_A
			CLI
			LDAB	#$40
6			LDAA	#$14
			SEI
			SPIN3
			OPZ_POLL
			OPZ_OUT_B
			OIM	#IRQ1E,RP5CR
			PULA
			STAA	TCSR3
			RTS
7			LDAB	#$30
			BRA	6B

;-------

OPZ_WAIT		OPZ_POLL
			RTS

;-------
;
; Multiply A by 660
; - used to scale range 0..99 into the range 0..255
;   since the resulting value of A = A * 660 / 256
;
MUL_660			LDAB	#$A5
			MUL
			ASLD
			ASLD
			RTS

MUL_200			LDAB	#$C8
			MUL
			RTS

			LDAB	#$8E
			MUL
			RTS

			LDAB	#$26
			MUL
			RTS

;-------

OPZ_INIT		CLRB
			LDAA	#$09
			JSR	OPZ_WRITE_FAST
			LDAA	#$0F
			JSR	OPZ_WRITE
			LDAA	#$1C
			JSR	OPZ_WRITE
			LDAA	#$1E
			JSR	OPZ_WRITE
			LDAA	#$0A
			LDAB	#$04
			JSR	OPZ_WRITE
			LDAA	#$14
			LDAB	#$70
			JSR	OPZ_WRITE
			LDAA	#$15
			LDAB	#$01
			JSR	OPZ_WRITE
			RTS

;-------

OPZ_WRITE		JSR	OPZ_WAIT

;-------	fallthrough

OPZ_WRITE_FAST		OPZ_OUT_B
			RTS

;-------

HI_CALL_01		PSHA
			PSHB
			PSHX
			AIM	#~EOCI1,TCSR1
			JSR	HI_CALL_16
			CLRA
			CLRB
			LDX	#M7CE3
1			STD	,X
			INX
			INX
			CPX	#M7CF3
			BNE	1B
			LDD	#$1700
2			STD	,X
			INX
			INX
			CPX	#M7D13
			BNE	2B
			LDD	#$1700
			LDX	#M7F29
3			STD	,X
			INX
			INX
			CPX	#M7F39
			BNE	3B
			CLRA
			CLRB
			LDX	#M7F39
4			STD	,X
			INX
			INX
			CPX	#M7F89
			BNE	4B
			LDX	#M00E7
			LDAA	#$FF
5			STAA	,X
			INX
			CPX	#M00EF
			BNE	5B
			JSR	F_993C
			JSR	F_995A
			PULX
			PULB
			PULA
			RTS

;-------

HI_CALL_00		PSHA
			PSHB
			PSHX
			AIM	#~IRQ1E,RP5CR		; disable OPZ IRQ
			AIM	#~EOCI1,TCSR1

			CLR	>M00EF
			BSR	F_915E

			;
			; store 0 .. 7 in turn to OPZ register $08
			;
			LDAA	#$08
			CLRB
1			SEI
			SPIN3
			JSR	OPZ_WAIT
			OPZ_OUT_B
			CLI
			INCB
			CMPB	#$08
			BNE	1B

			LDAA	#$01
			STAA	M777D

			OIM	#IRQ1E,RP5CR		; enable OPZ IRQ
			PULX
			PULB
			PULA
			RTS

;-------
;
; call F_9169 for each voice
;

F_915E			CLRB
1			PSHB
			BSR	F_9169
			PULB
			INCB
			CMPB	#$08
			BNE	1B
			RTS

;------

F_9169			PSHB				; save B (voice number?)

			;
			; store $FE in OPZ registers $E0 + B, $E8 + B, $F0 + B, $F8 + B
			; D1L:4 = $F | RR:4 = $E
			;
			CLRA				; A <- 0
			ADDB	#$E0			; B <- B + $E0
1			PSHA				; save A
			LDAA	#$FE			; A <- $FE
			SEI				; output to OPZ
			OPZ_POLL			; -
			OPZ_OUT_A			; -
			CLI				; -
			ADDB	#$08			; B <- B + $08
			PULA				; restore A
			INCA				; increment it
			CMPA	#$04			; is it 4 ?
			BNE	1B			; no?  go around...

			PULB				; get original B back (voice number?)

			;
			; set OPZ registers $C0 + B, $C8 + B, $D0 + B, $D8 + B to
			; the values stored in 77EE + B, 77F6 + B, etc masked
			; with  %11101000
			;
			; DT2:2 | _:1 | D2R:5
			;
			CLRA				; A <- 0
2			PSHA				; save A
			PSHB				; save B
			LDX	#OPZ_C0_REG_COPY	; A = @($77EE + B)
			ABX				;
			LDAA	,X			;
			ANDA	#%11101000		; mask A bits
			ADDB	#$C0			; B <- B + $C0
			SEI				; output to OPZ
			OPZ_POLL			; -
			OPZ_OUT_A			; -
			CLI				; -
			PULB				; restore B
			ADDB	#$08			; B <- B + 8
			PULA				; restore A
			INCA				; increment it
			CMPA	#$04			; is it 4 ?
			BNE	2B			; no?  go around
			RTS

;-------

F_91B0			TBA
			PSHA

			;
			; set D1L and RR for each operator for voice A
			; from contents of OPZ_E0_REG_COPY
			;
			CLRB
1			PSHB
			LDX	#OPZ_E0_REG_COPY
			TAB
			ABX
			LDAB	,X
			PSHA
			ADDA	#$E0
			SEI
			OPZ_POLL
			OPZ_OUT_B
			CLI
			PULA
			ADDA	#$08
			PULB
			INCB
			CMPB	#$04
			BNE	1B

			;
			; set DT2 and D2R for each operator for voice A
			; from contents of OPZ_C0_REG_COPY
			;
			PULA
			CLRB
2			PSHB
			LDX	#OPZ_C0_REG_COPY
			TAB
			ABX
			LDAB	,X
			PSHA
			ADDA	#$C0
			SEI
			OPZ_POLL
			OPZ_OUT_B
			CLI
			PULA
			ADDA	#$08
			PULB
			INCB
			CMPB	#$04
			BNE	2B
			RTS

;-------

F_91FE			PSHA
			PSHB
			PSHX
			JSR	HI_CALL_0F
			BRA	1F

;-------	fallthrough

HI_CALL_05		PSHA
			PSHB
			PSHX
			JSR	HI_CALL_0F
			LDX	#F_9EEC
			JSR	F_92DB
1			LDX	#F_9E95
			JSR	F_92DB
			LDX	#F_9EB9
			JSR	F_92DB
			LDX	#F_9ECC
			JSR	F_92DB
			LDX	#F_9E8A
			JSR	F_92DB
			LDX	#F_9A41
			JSR	F_92E3
			LDX	#F_9F00
			JSR	F_92DB
			LDX	#F_9DD7
			JSR	F_92DB
			LDX	#F_9E58
			JSR	F_92DB
			LDX	#F_9FEC
			JSR	F_92DB
			LDX	#F_9D68
			JSR	F_92DB
			LDX	#F_9E6D
			JSR	F_92DB
			LDX	#F_9D91
			JSR	F_92E3
			JSR	F_9A87
			LDX	#F_9B02
			JSR	F_92E3
			LDX	#F_9C35
			JSR	F_92E3
			LDX	#F_9AC2
			JSR	F_92E3
			JSR	F_9C76
			LDX	#F_9D12
			JSR	F_92E3
			LDX	#F_A049
			JSR	F_92E3
			LDX	#F_A01B
			JSR	F_92E3
			LDX	#F_A0D1
			JSR	F_92E3
			LDX	#F_A0F1
			JSR	F_92E3
			LDX	#F_A100
			JSR	F_92E3
			LDX	#F_A110
			JSR	F_92E3
			JSR	HI_CALL_18
			JSR	CALC_EF2R_VALUE
			LDAA	M777D
			CMPA	#$01
			BNE	2F
			LDX	#F_9EEC
			JSR	F_92DB
			CLR	M777D
2			PULX
			PULB
			PULA
			RTS

;-------	unreachable

			LDX	#F_9D91
			JSR	F_92E3
			JSR	F_9A87
			LDX	#F_9B02
			JSR	F_92E3
			LDX	#F_9C35
			JSR	F_92E3
			LDX	#F_9AC2
			JSR	F_92E3
			JSR	F_9C76
			LDX	#F_9D12
			JSR	F_92E3
			RTS

;-------

F_92DB			STX	M0079
			LDX	#F_9306
			JMP	F_92E8

F_92E3			STX	M0079
			JMP	F_9306

;-------

F_92E8			LDD	M006F
			PSHA
			PSHB
			CLRA
			CLRB
			STD	M006F
1			PSHX
			JSR	,X
			PULX
			INC	>M006F
			LDAB	#$0D
			ADDB	M0070
			STAB	M0070
			CMPB	#$34
			BNE	1B
			PULB
			PULA
			STD	M006F
			RTS

;-------

F_9306			CLR	>M0073
			LDD	#$0000
			STD	M0074
			CLR	>M0076
1			LDX	#M00F6
			LDAB	M0073
			CMPB	#$08
			BEQ	3F
			ABX
			LDAB	,X
			STAB	M007B
			BEQ	2F
			LDX	M0079
			JSR	,X
2			CLRA
			LDAB	#110
			ADDD	M0074
			STD	M0074
			LDAA	M0076
			CMPA	#$08
			BEQ	3F
			INC	>M0073
			BRA	1B
3			RTS

;-------

HI_CALL_0F		LDAA	TCSR1
			PSHA
			AIM	#~EOCI1,TCSR1
			LDX	#M00F6
			STX	M0079
			LDAB	M7772
			ANDB	#$04
			BNE	7F
			CLRB
1			CMPB	#$01
			BNE	2F
			LDAA	M7774
			CMPA	#$1A
			BNE	5F
			TST	M7788
			BEQ	5F
			BRA	3F
2			TSTB
			BNE	5F
			LDAA	M7774
			CMPA	#$1A
			BNE	4F
			TST	M7788
			BEQ	4F
3			LDAA	#$04
			BRA	6F
4			LDAA	#$08
			BRA	6F
5			CLRA
6			STAA	,X
			INX
			INCB
			CMPB	#$08
			BNE	1B
			BRA	8F
7			JSR	COPY_NOTE_LIMITS
8			LDAA	#$FF
			LDAB	#$08
			LDX	#M7942
9			STAA	,X
			DEX
			DECB
			BNE	9B
			LDX	#M793B
			STX	M0079
			LDX	#M00F6
			CLRB
10			LDAA	,X
			PSHX
			LDX	M0079
			TSTA
			BEQ	12F
11			STAB	,X
			INX
			DECA
			BNE	11B
			BRA	12F
12			INCB
			STX	M0079
			CPX	#M7943
			PULX
			BEQ	13F
			INX
			CPX	#M00FE
			BNE	10B
13			LDAB	#$FF
			STAB	M784E
			STAB	M784F
			CLRB
14			PSHB
			LDX	#M00F6
			ABX
			TST	,X
			BEQ	16F
			TST	M784E
			BPL	15F
			STAB	M784E
			BRA	16F
15			TST	M784F
			BPL	16F
			STAB	M784F
16			PULB
			INCB
			CMPB	#$08
			BNE	14B
			LDX	#M7846
			STX	M0079
			CLRB
17			PSHB
			LDX	#M793B
			ABX
			LDAB	,X
			BMI	19F
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			LDAB	$0A,X			; LFO select (0..3)
			BEQ	19F
			CMPB	#$03
			BCC	20F
			PSHB
			DECB
			LDX	#M784E
			ABX
			LDAA	,X
			BMI	18F
			ASLA
			ASLA
			PULB
			ABA
			BRA	21F
18			PULB
19			CLRA
			BRA	21F
20			TBA
21			LDX	M0079
			STAA	,X
			INX
			STX	M0079
			PULB
			INCB
			CMPB	#$08
			BNE	17B
			LDAB	#$FF
			STAB	M7850
			STAB	M7851
			CLRB
22			PSHB
			LDX	#M7846
			ABX
			LDAA	,X
			ANDA	#$03
			BEQ	24F
			CMPA	#$03
			BCC	24F
			CMPA	#$01
			BNE	23F
			TST	M7850
			BPL	24F
			STAB	M7850
			BRA	24F
23			TST	M7851
			BPL	24F
			STAB	M7851
24			PULB
			INCB
			CMPB	#$08
			BNE	22B
			JSR	F_95C4
			LDAB	M7772
			ANDB	#$04
			BNE	30F
			LDAA	M7774
			CMPA	#$1A
			BNE	26F
			TST	M7788
			BEQ	26F
			LDAA	#$04
			LDX	#M793B
25			DEX
			STAA	,X
			CPX	#M7933
			BEQ	28F
			CPX	#M7937
			BHI	25B
			LDAA	#$02
			BRA	25B
26			LDAA	#$07
			LDX	#M793B
27			DEX
			STAA	,X
			CPX	#M7933
			BNE	27B
28			LDAA	#$01
			LDX	#M784E
29			DEX
			STAA	,X
			CPX	#M7846
			BNE	29B
			CLR	M7850
			LDAA	#$FF
			STAA	M7851
			LDAA	#$08
			STAA	M006C
			BRA	31F
30			LDAA	#$05
			STAA	M006C
			JSR	F_C7FF
31			JSR	F_98A1
			JSR	F_995A
			LDAA	TCSR3
			PSHA
			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_15
			PULA
			STAA	TCSR3
			JSR	HI_CALL_03
			PULA
			STAA	TCSR1
			RTS

;-------

F_94C9			PSHA
			PSHB
			PSHX
			BRA	1F
			PSHA
			PSHB
			PSHX
			LDX	#F_9EEC
			JSR	F_9575
1			LDX	#F_9E95
			JSR	F_9575
			LDX	#F_9EB9
			JSR	F_9575
			LDX	#F_9ECC
			JSR	F_9575
			LDX	#F_9E8A
			JSR	F_9575
			LDX	#F_9A41
			JSR	F_957D
			LDX	#F_9F00
			JSR	F_9575
			LDX	#F_9DD7
			JSR	F_9575
			LDX	#F_9E58
			JSR	F_9575
			LDX	#F_9FEC
			JSR	F_9575
			LDX	#F_9D68
			JSR	F_9575
			LDX	#F_9E6D
			JSR	F_9575
			LDX	#F_9D91
			JSR	F_957D
			JSR	F_9A87
			LDX	#F_9B02
			JSR	F_957D
			LDX	#F_9C35
			JSR	F_957D
			LDX	#F_9AC2
			JSR	F_957D
			JSR	F_9C76
			LDX	#F_9D12
			JSR	F_957D
			LDX	#F_A049
			JSR	F_957D
			LDX	#F_A01B
			JSR	F_957D
			LDX	#F_A0D1
			JSR	F_957D
			LDX	#F_A0F1
			JSR	F_957D
			LDX	#F_A100
			JSR	F_957D
			LDX	#F_A110
			JSR	F_957D
			LDAA	M777D
			CMPA	#$01
			BNE	2F
			LDX	#F_9EEC
			JSR	F_9575
			CLR	M777D
2			PULX
			PULB
			PULA
			RTS

;-------

F_9575			STX	M0079
			LDX	#F_9582
			JMP	F_92E8

;-------

F_957D			STX	M0079
			JMP	F_9582

;-------

F_9582			LDAB	M0073
			LDX	#M7EF1
			ABX
			LDAA	,X
			STAA	M0076
			LDX	#M00F6
			LDAB	M0073
			ABX
			LDAB	,X
			STAB	M007B
			BEQ	1F
			LDAA	M0073
			LDAB	#110
			MUL
			STD	M0074
			LDX	M0079
			JSR	,X
1			RTS

;-------

F_95A4			LDX	#M7EF1
			ABX
			LDAA	,X
			LDX	#M00F6
			ABX
			TAB
			LDAA	,X
			BEQ	2F
1			PSHA
			PSHB
			JSR	F_9169
			PULB
			INCB
			PULA
			DECA
			BNE	1B
			LDAA	#$01
			STAA	M777D
2			RTS

;-------

F_95C4			CLR	>M0076
1			JSR	F_9A1C
			LDAA	$09,X
			LDX	#M7933
			LDAB	M0076
			ABX
			ASLA
			CMPA	#$06
			BNE	2F
			ORAA	#$01
2			STAA	,X
			INC	>M0076
			LDAB	M0076
			CMPB	#$08
			BNE	1B
			RTS

;-------

F_95E5			JSR	F_95C4
			LDX	#F_9A41
			JSR	F_92E3
			LDX	#F_9F00
			JSR	F_92DB
			RTS

;-------
;
; Copies per-instrument note limits into table at @($79)
;
COPY_NOTE_LIMITS	CLRB				; B <- 0
1			PSHB				; save B
			LDX	#PFM_EDIT_BUF		; offset into current performance
			LDAA	#12			; A <- 12
			MUL				; -
			ABX				; -
			LDAA	,X			; get maximum notes
			LDX	M0079			; get pointer
			STAA	,X			; save maximum notes there
			INX				; increment pointer
			STX	M0079			; save pointer
			PULB				; restore B
			INCB				; increment
			CMPB	#$08			; count up to 8
			BNE	1B			; and loop
			RTS				; and done

;-------

HI_CALL_03		LDAB	M7772
			ANDB	#$04
			BNE	2F
			JSR	F_9881
			TAB
			LDAA	M778F
			BRA	3F
1			LDX	#MICROTUNE_OCT
			JMP	11F
2			LDAB	PFM_EDIT_MICTUN
			LDAA	PFM_EDIT_KEY
3			CMPB	#$02
			BCS	1B
			SUBB	#$02
			JSR	F_969B
			LDX	#M7F9A
			STX	SPTR
			LDX	#M7F9A
			STX	DPTR
			CLRB
4			PSHB
			LDX	SPTR
			LDD	,X
			PSHA
			LDAA	M7772
			ANDA	#$04
			BNE	5F
			JSR	F_9881
			BRA	6F
5			LDAA	PFM_EDIT_MICTUN
6			CMPA	#$0B
			PULA
			BCS	8F
			BNE	7F
			SUBA	#$1E
			BRA	9F
7			SUBA	#$0F
			BRA	9F
8			SUBA	#$3C
9			INX
			INX
			STX	SPTR
			LDX	DPTR
			STD	,X
			INX
			INX
			STX	DPTR
			PULB
			INCB
			CMPB	#$0C
			BNE	4B
10			RTS
11			STX	SPTR
			LDX	#M7F9A
			STX	DPTR
			CLRB
12			PSHB
			LDX	SPTR
			LDD	,X
			SUBA	#$3C
			INX
			INX
			STX	SPTR
			LDX	DPTR
			STD	,X
			INX
			INX
			STX	DPTR
			PULB
			INCB
			CMPB	#$0C
			BNE	12B
			JMP	10B

;-------

F_969B			LDX	#DVEC_9703
			ABX
			ABX
			LDX	,X
			STX	SPTR
			TSTB
			BEQ	1F
			CMPB	#$05
			BCS	2F
1			LDAB	#$18
			LDX	#M7F9A
			JSR	MEMCPYX
			JMP	5F
2			ASLA
			PSHA
			DECB
			LDAA	#$18
			MUL
			PULA
			PSHA
			ABA
			TAB
			LDX	#D_9821
			ABX
			LDD	,X
			STD	M007E
			LDX	#M7F9A
			PULB
			ABX
			STX	DPTR
			LDAB	#$0C
3			PSHB
			LDX	SPTR
			LDD	,X
			INX
			INX
			STX	SPTR
			SUBA	#$0D
			ASLB
			ASLB
			LSRD
			LSRD
			ADDD	M007E
			ASLD
			ASLD
			ADDA	#$0D
			LSRB
			LSRB
			LDX	DPTR
			CPX	#M7FB2
			BCS	4F
			XGDX
			SUBD	#$0018
			XGDX
			SUBA	#$0C
4			STD	,X
			LDX	DPTR
			INX
			INX
			STX	DPTR
			PULB
			DECB
			BNE	3B
5			RTS

DVEC_9703		FDB	D_9719
			FDB	D_9731
			FDB	D_9749
			FDB	D_9761
			FDB	D_9779
			FDB	D_9791
			FDB	D_97A9
			FDB	D_97C1
			FDB	D_97D9
			FDB	D_97F1
			FDB	D_9809

D_9719			FDB	$3C00,$3D00,$3E00,$3F00
			FDB	$4000,$4100,$4200,$4300
			FDB	$4400,$4500,$4600,$4700

D_9731			FDB	$3C0A,$3C37,$3E0D,$3F14
			FDB	$4001,$4109,$4136,$430B
			FDB	$4338,$4500,$4615,$4703

D_9749			FDB	$3C0A,$3C37,$3D3F,$3F14
			FDB	$4001,$4109,$4136,$430B
			FDB	$4338,$4500,$4615,$4703

D_9761			FDB	$3C07,$3C37,$3E02,$3F0D
			FDB	$3F3E,$4109,$4139,$4304
			FDB	$4335,$4500,$460B,$463C

D_9779			FDB	$3B3C,$3D05,$3D3F,$3E38
			FDB	$4001,$403B,$4204,$423D
			FDB	$4406,$4500,$453A,$4703

D_9791			FDB	$3C08,$3D01,$3E03,$3F04
			FDB	$4001,$4106,$4200,$4305
			FDB	$4403,$4500,$4605,$4703

D_97A9			FDB	$3C07,$3D00,$3E02,$3F03
			FDB	$3F3E,$4105,$4200,$4304
			FDB	$4402,$4500,$4604,$463F

D_97C1			FDB	$3C04,$3D00,$3E01,$3F03
			FDB	$3F3F,$4105,$413F,$4303
			FDB	$4401,$4500,$4604,$463D

D_97D9			FDB	$3C20,$3D20,$3E20,$3F20
			FDB	$4020,$4120,$4220,$4320
			FDB	$4420,$4520,$4620,$4720

D_97F1			FDB	$4200,$4220,$4300,$4320
			FDB	$4400,$4420,$4500,$4520
			FDB	$4600,$4620,$4700,$4720

D_9809			FDB	$3F00,$3F10,$3F20,$3F30
			FDB	$4000,$4010,$4020,$4030
			FDB	$4100,$4110,$4120,$4130

D_9821			FDB	$0000,$0048,$0075,$00CA
			FDB	$00F7,$013F,$016C,$01B3
			FDB	$0209,$0236,$027D,$02AB
			FDB	$0000,$0048,$0075,$00CA
			FDB	$00F7,$013F,$016C,$01C1
			FDB	$0209,$0236,$027D,$02AB
			FDB	$0000,$004B,$007C,$00C7
			FDB	$00F7,$0142,$0173,$01BE
			FDB	$0209,$0239,$0284,$02B5
			FDB	$0000,$003A,$0083,$00BC
			FDB	$0105,$013F,$0188,$01C1
			FDB	$01FB,$0244,$027D,$02C6

;-------

F_9881			LDAA	M7774
			CMPA	#$1C
			BNE	1F
			LDAA	M7788
			CMPA	#$02
			BNE	1F
			LDAA	M7789
			BEQ	1F
			CMPA	#$02
			BEQ	1F
			LDAA	M778A
			ADDA	#$02
			BRA	2F
1			CLRA
2			RTS

;-------

F_98A1			CLR	>M0072
1			LDAB	M0072
			LDX	#M00F6
			ABX
			TST	,X
			BNE	2F
			LDAA	#$FF
			BRA	4F
2			CLRB
			CLRA
			LDX	#M00F6
3			CMPB	M0072
			BEQ	4F
			ADDA	,X
			INCB
			INX
			BRA	3B
4			LDAB	M0072
			LDX	#M7EF1
			ABX
			STAA	,X
			LDAB	M0072
			INCB
			STAB	M0072
			CMPB	#$08
			BNE	1B
			CLRB
5			LDX	#M7EF1
			ABX
			LDAA	,X
			BPL	6F
			LDAA	#$FF
			BRA	7F
6			LDX	#M00F6
			ABX
			ADDA	,X
			DECA
7			LDX	#M7EF9
			ABX
			STAA	,X
			INCB
			CMPB	#$08
			BNE	5B
			LDAB	M7772
			ANDB	#$04
			BEQ	9F
			TST	PFM_EDIT_ASSIGN
			BEQ	9F
			CLRA
			CLRB
8			LDX	#M00F6
			ABX
			ADDA	,X
			INCB
			CMPB	#$08
			BNE	8B
			DECA
			STAA	M7EF9
			CLR	M7EF1
9			CLRB
10			PSHB
			LDX	#M7EF1
			ABX
			LDAB	,X
			BPL	11F
			LDX	#M00E7
			BRA	12F
11			LDX	#M00E7
			ABX
12			STX	M0077
			LDX	#M7F09
			PULB
			PSHB
			ASLB
			ABX
			LDD	M0077
			STD	,X
			STD	$10,X
			PULB
			INCB
			CMPB	#$08
			BNE	10B
			BSR	F_993C
			RTS

;-------

F_993C			LDX	#M7EE9
			LDAB	#$08
1			LDAA	$08,X
			BPL	2F
			LDAA	#$FF
			BRA	3F
2			ASLA
3			STAA	,X
			INX
			DECB
			BNE	1B
			CLRA
			LDX	#M7F08
			LDAB	#$08
			JSR	RESET_INST_CC
			RTS

;-------

F_995A			LDX	#M7F89
1			CLR	,X
			INX
			CPX	#M7F99
			BCS	1B
			LDAA	#$01
			STAA	M007B
			LDAA	M7772
			ANDA	#$04
			BEQ	5F
			CLRA
2			PSHA
			LDAB	#12
			MUL
			ADDD	#PFM_EDIT_BUF
			XGDX
			LDAB	,X
			BEQ	4F
			LDAB	$03,X			; receive channel (omni = 16)
			CMPB	#$10
			BNE	3F
			BSR	F_99DE
			BRA	4F
3			LDX	#M7F89
			ABX
			LDAB	M007B
			ORAB	,X
			STAB	,X
4			PULA
			TST	PFM_EDIT_ASSIGN
			BNE	9F
			INCA
			ASL	>M007B
			BNE	2B
			BRA	9F
5			CLRA
6			PSHA
			LDAB	SYS_MIDBCH
			CMPB	#$10
			BEQ	8F
			LDX	#M7F89
			ABX
			LDAB	M007B
			ORAB	,X
			STAB	,X
7			PULA
			LDAB	M7774
			CMPB	#$1A
			BNE	9F
			TST	M7788
			BEQ	9F
			INCA
			CMPA	#$02
			BEQ	9F
			ASL	>M007B
			BRA	6B
8			BSR	F_99DE
			BRA	7B
9			LDAB	MIDI_RX_CMD
			CMPB	#SYX
			BCC	10F
			ANDB	#$0F
			LDX	#M7F89
			ABX
			LDAB	,X
			STAB	M00DA
10			RTS

;-------

F_99DE			CLRB
1			LDX	#M7F89
			ABX
			LDAA	M007B
			ORAA	,X
			STAA	,X
			INCB
			CMPB	#$10
			BNE	1B
			RTS

;-------

F_99EF			LDD	#VCED
			ADDD	M0074
			XGDX
			LDAB	M0070
			ABX
			RTS

;-------

F_99F9			LDAA	M006F
			LDAB	#$05
			MUL
			LDX	#ACED
			ABX
			XGDX
			ADDD	M0074
			XGDX
			RTS

;-------

F_9A07			TAB
			LDX	#M793B
			ABX
			LDAA	,X
			CMPA	#$08
			BCS	1F
			CLRA
			BSR	GET_VOICE_PTR_A
			SEC
			BRA	2F
1			BSR	GET_VOICE_PTR_A
			CLC
2			RTS

;-------

F_9A1C			LDX	#M793B
			LDAB	M0076
			ABX
			LDAB	,X
			BPL	1F
			CLRB
1			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			RTS

;-------
;
; get a pointer to the voice data for voice A
; uses B and X, destroys A.
;

GET_VOICE_PTR_A		LDAB	#110
			MUL
			ADDD	#VCED
			XGDX
			RTS

;-------
;
; scale EF2R range (0 .. 99) to range (0 .. 255)
;
CALC_EF2R_VALUE		LDAA	EF2R
			JSR	MUL_660
			STAA	EF2R_VALUE
			RTS

;-------

F_9A41			LDD	#VCED_PARAMS
			ADDD	M0074
			XGDX
			LDAB	$01,X
			ASLB
			ASLB
			ASLB
			ORAB	,X
			STAB	M0072
1			LDX	#M7933
			LDAB	M0076
			ABX
			LDAA	,X
			ANDA	#$04
			BEQ	2F
			LDAB	#$80
			BRA	3F
2			CLRB
3			ORAB	M0072
			TBA
			LDX	#M7913
			LDAB	M0076
			ABX
			STAA	,X
			LDAB	#$20
			ADDB	M0076
			SEI
			JSR	OPZ_WAIT
			OPZ_OUT_A
			CLI
			INC	>M0076
			DEC	>M007B
			BNE	1B
			RTS

;-------

F_9A87			CLR	>M0072
			LDAA	M784E
			BMI	1F
			JSR	GET_VOICE_PTR_A
			LDAA	$3B,X
			ANDA	#$03
			STAA	M0072
1			LDAA	M784F
			BMI	2F
			JSR	GET_VOICE_PTR_A
			LDAA	$3B,X
			ANDA	#$03
			ASLA
			ASLA
			ORAA	M0072
			STAA	M0072
2			LDAA	M0072
			STAA	M7852
			LDAB	#$1B
			SEI
			SPIN3
			JSR	OPZ_WAIT
			OPZ_OUT_A
			CLI
			RTS

;-------

F_9AC2			JSR	F_A120
			JSR	F_9AE2
			LDAA	$3A,X
			LDX	#M782E
			STX	DPTR
			JMP	F_9AD2			; could've fallen thorough

;-------
; pointer in $A7
; instrument number in B ?
;
F_9AD2
0			LDX	DPTR
			LDAB	M0076
			ABX
			STAA	,X
			INC	>M0076
			DEC	>M007B
			BNE	0B
			RTS

;-------

F_9AE2			PSHX
			LDX	#M7846
			LDAB	M0076
			ABX
			LDAB	,X
			ANDB	#$03
			BEQ	1F
			CMPB	#$03
			BEQ	1F
			LDAB	,X
			PULX
			LSRB
			LSRB
			ANDB	#$07
			TBA
			JSR	GET_VOICE_PTR_A
			BRA	2F
1			PULX
2			RTS

;-------

F_9B02			LDAB	#$36
			JSR	F_A121
			PSHX
			LDX	#M7846
			LDAB	M0076
			ABX
			LDAB	,X
			ANDB	#$03
			BEQ	4F
			CMPB	#$03
			BEQ	4F
			PSHB
			LDAB	,X
			LSRB
			LSRB
			ANDB	#$07
			TBA
			JSR	GET_VOICE_PTR_A
			LDAA	$36,X
			JSR	MUL_660
			LDAB	$3B,X
			CMPB	#$03
			BEQ	1F
			LDX	#D_A82B
			TAB
			ABX
			LDAA	,X
			COMA
1			PULB
			CMPB	#$01
			BEQ	2F
			LDAB	#$16
			BRA	3F
2			LDAB	#$18
3			SEI
			JSR	OPZ_WAIT
			OPZ_OUT_A
			CLI
4			PULX
			LDAB	,X
			ASLB
			LDX	#D_9B6D
			ABX
			LDD	,X
5			PSHB
			LDX	#M781E
			LDAB	M0076
			ASLB
			ABX
			PULB
			STD	,X
			INC	>M0076
			DEC	>M007B
			BNE	5B
			RTS

D_9B6D			FDB	$0001,$0002,$000E,$001B
			FDB	$003D,$0052,$0081,$00BF
			FDB	$00EF,$0125,$0169,$01C9
			FDB	$020D,$026C,$02FB,$0346
			FDB	$03D5,$0420,$048D,$051D
			FDB	$05F7,$06D1,$071C,$07F6
			FDB	$083A,$08D0,$0A39,$0AC8
			FDB	$0BED,$0C7D,$0DA2,$0E31
			FDB	$0F56,$107B,$110A,$1199
			FDB	$122F,$1472,$1598,$16B6
			FDB	$17DB,$1900,$1B43,$1C68
			FDB	$1D87,$1EAC,$1FD1,$20EF
			FDB	$2214,$2339,$2339,$26A2
			FDB	$28E5,$28E5,$2B2F,$2D72
			FDB	$2FB6,$3200,$3443,$3443
			FDB	$3687,$38D1,$3B14,$3B14
			FDB	$3D57,$3FA2,$41E5,$41E5
			FDB	$4428,$4428,$4672,$48B6
			FDB	$48B6,$4D43,$51CA,$51CA
			FDB	$5657,$5AE5,$5AE5,$5F6C
			FDB	$63F9,$63F9,$6887,$6887
			FDB	$6D0D,$719B,$719B,$7628
			FDB	$7628,$7AB6,$7AB6,$7F3C
			FDB	$7F3C,$83CA,$83CA,$83CA
			FDB	$8857,$8CDE,$8CDE,$8CDE

;-------

F_9C35			LDAB	#$37
			JSR	F_A121
			PSHX
			LDX	#M7846
			LDAB	M0076
			ABX
			LDAB	,X
			ANDB	#$03
			BEQ	1F
			CMPB	#$03
			BEQ	1F
			LDAB	,X
			LSRB
			LSRB
			ANDB	#$07
			TBA
			JSR	GET_VOICE_PTR_A
			LDAB	#$37
			ABX
			JSR	F_9CF5
			PULX
			BRA	2F
1			PULX
			JSR	F_9CF5
2			PSHB
			LDX	#M780E
			LDAB	M0076
			ASLB
			ABX
			PULB
			STD	,X
			INC	>M0076
			DEC	>M007B
			BNE	2B
			RTS

;-------

F_9C76			LDX	#M784E
			STX	SPTR
			LDX	#M7D13
			STX	DPTR
1			LDX	SPTR
			LDAA	,X
			BMI	2F
			JSR	GET_VOICE_PTR_A
			LDAA	$39,X
			JSR	MUL_660
			PSHX
			LDX	DPTR
			STAA	,X
			PULX
			LDAA	$48,X
			JSR	MUL_660
			PSHX
			LDX	DPTR
			STAA	$02,X
			PULX
			LDAA	$4A,X
			JSR	MUL_660
			PSHX
			LDX	DPTR
			STAA	$04,X
			PULX
			LDAA	$6D,X
			JSR	MUL_660
			LDX	DPTR
			STAA	$06,X
2			LDX	DPTR
			INX
			STX	DPTR
			LDX	SPTR
			INX
			STX	SPTR
			CPX	#M7850
			BNE	1B
			LDX	#M7D3B
			STX	DPTR
			CLRA
3			PSHA
			JSR	F_9A07
			LDAA	$47,X
			JSR	MUL_660
			PSHX
			LDX	DPTR
			STAA	,X
			PULX
			LDAA	$49,X
			JSR	MUL_660
			PSHX
			LDX	DPTR
			STAA	$08,X
			PULX
			LDAA	$6C,X
			JSR	MUL_660
			LDX	DPTR
			STAA	$10,X
			INX
			STX	DPTR
			PULA
			INCA
			CMPA	#$08
			BNE	3B
			RTS

;-------

F_9CF5			LDAA	#$63
			SUBA	,X
			TAB
			ANDB	#$70
			LSRB
			LSRB
			LSRB
			LSRB
			SUBB	#$07
			NEGB
			STAB	M0071
			ANDA	#$0F
			ORAA	#$10
			ASLA
			CLRB
1			LSRD
			DEC	>M0071
			BNE	1B
			RTS

;-------

F_9D12			JSR	F_A120
			JSR	F_9AE2
			LDAA	$38,X
			JSR	MUL_660
			LDX	#M7D7B
			STX	DPTR
			JMP	F_9AD2

;-------

F_9D25			LDAB	M006F
			ASLB
			ASLB
			ASLB
			ABA
			ADDA	M0076
			LDAB	M0072
1			SEI
			JSR	OPZ_WAIT
			OPZ_OUT_B
			CLI
			PSHB
			CMPA	#$C0
			BCS	4F
			CMPA	#$E0
			BCC	2F
			BITB	#$20
			BEQ	4F
			TAB
			SUBB	#$C0
			LDX	#OPZ_C0_REG_COPY
			BRA	3F
2			TAB
			SUBB	#$E0
			LDX	#OPZ_E0_REG_COPY
3			ABX
			LDAB	M0072
			STAB	,X
4			PULB
			INCA
			INC	>M0076
			DEC	>M007B
			BNE	1B
			RTS

;-------

F_9D68			JSR	F_99EF
			LDAB	$07,X
			LDX	#D_9D89
			ABX
			LDAA	,X
1			LDX	#M7853
			LDAB	M006F
			ASLB
			ASLB
			ASLB
			ADDB	M0076
			ABX
			STAA	,X
			INC	>M0076
			DEC	>M007B
			BNE	1B
			RTS

D_9D89			FCB	$00,$25,$49,$6E,$92,$B7,$DB,$FF

;-------

F_9D91			LDX	#M7846
			LDAB	M0076
			ABX
			LDAB	,X
			ANDB	#$03
			BEQ	1F
			CMPB	#$03
			BEQ	1F
			PSHB
			LDAB	#$3C
			JSR	F_A121
			ASLA
			ASLA
			ASLA
			ASLA
			LDAB	$01,X
			ABA
			PULB
			CMPB	#$02
			BNE	2F
			ORAA	#$84
			BRA	2F
1			CLRA
2			TAB
3			LDAA	#$38
			ADDA	M0076
			BSR	4F
			INC	>M0076
			DEC	>M007B
			BNE	3B
			RTS
4			SEI
			JSR	OPZ_WAIT
			OPZ_OUT_B
			CLI
			RTS

;-------

F_9DD7			JSR	F_99EF
			PSHX
			JSR	F_99F9
			TST	,X
			BNE	1F
			CLRB
			BRA	2F
1			LDAB	#$01
			LDAA	$01,X
			PULX
			BRA	4F
2			PULX
			LDAA	$0C,X
			CMPA	#$03
			BCC	3F
			COMA
			BRA	4F
3			SUBA	#$03
4			ASLA
			ASLA
			ASLA
			ASLA
			TSTB
			BEQ	5F
			LDAB	$0B,X
			BRA	6F
5			LDAB	$0B,X
			LDX	#D_9E18
			ABX
			LDAB	,X
6			LSRB
			LSRB
			ABA
			ANDA	#$7F
			STAA	M0072
			LDAA	#$40
			JSR	F_9D25
			RTS

D_9E18			FCB	$00,$01,$02,$03,$04,$05,$06,$07
			FCB	$08,$09,$0C,$0A,$0B,$10,$0D,$0E
			FCB	$14,$0F,$11,$18,$12,$13,$1C,$15
			FCB	$16,$20,$19,$17,$24,$1A,$1D,$28
			FCB	$1B,$1E,$2C,$21,$30,$1F,$22,$25
			FCB	$34,$23,$38,$29,$26,$3C,$2D,$27
			FCB	$2A,$31,$2E,$2B,$35,$32,$2F,$39
			FCB	$36,$33,$3D,$3A,$37,$3E,$3B,$3F

;-------

F_9E58			JSR	F_99F9
			LDAA	$03,X
			ASLA
			ASLA
			ASLA
			ASLA
			ADDA	$02,X
			ORAA	#$80
			STAA	M0072
			LDAA	#$40
			JSR	F_9D25
			RTS

;-------

F_9E6D			JSR	F_99F9
			LDAB	$04,X
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			PSHB
			LDAB	#$6B
			JSR	F_A121
			PULB
			ABA
			ORAA	#$28
			STAA	M0072
			LDAA	#$C0
			JSR	F_9D25
			RTS

;-------

F_9E8A			CLRA
			ORAA	#$28
			STAA	M0072
			LDAA	#$C0
			JSR	F_9D25
			RTS

;-------

F_9E95			JSR	F_99EF
			LDAB	$06,X
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			ADDB	,X
			PSHB
			JSR	F_99F9
			PULB
			TST	,X
			BEQ	1F
			ORAB	#$20
			BRA	2F
1			ANDB	#$DF
2			STAB	M0072
			LDAA	#$80
			JSR	F_9D25
			RTS

;-------

F_9EB9			JSR	F_99EF
			LDAB	$08,X
			RORB
			RORB
			ANDB	#$80
			ADDB	$01,X
			STAB	M0072
			LDAA	#$A0
			JSR	F_9D25
			RTS

;-------

F_9ECC			JSR	F_99EF
			LDAA	$02,X
			LDAB	$0B,X
			LDX	#D_9E18
			ABX
			LDAB	,X
			ANDB	#$03
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			ASLB
			ABA
			ANDA	#$DF
			STAA	M0072
			LDAA	#$C0
			JSR	F_9D25
			RTS

;-------

F_9EEC			JSR	F_99EF
			LDAA	$04,X
			COMA
			ASLA
			ASLA
			ASLA
			ASLA
			ADDA	$03,X
			STAA	M0072
			LDAA	#$E0
			JSR	F_9D25
			RTS

;-------

F_9F00			JSR	F_99EF
			LDAA	$05,X
			JSR	MUL_660
			STAA	M007C
			LDAB	#$0A
			ABX
			JSR	F_9FD9
			LDX	#M7913
			LDAB	M0076
			ABX
			LDAB	,X
			ANDB	#$07
			SUBB	#$04
			BCS	2F
			CMPB	#$04
			BCS	1F
			CLRB
1			JSR	JMPOFFB
			FCB	C_9F32 - *
			FCB	C_9F3C - *
			FCB	C_9F3C - *
			FCB	C_9F45 - *

2			LDAB	M006F
			CMPB	#$03
			BNE	7F
			BRA	8F
C_9F32			LDAB	M006F
			BITB	#$02
			BEQ	7F
			ADDA	#$08
			BRA	6F
C_9F3C			TST	>M006F
			BEQ	7F
			ADDA	#$0D
			BRA	6F
C_9F45			ADDA	#$10
6			BPL	8F
			LDAA	#$7F
			BRA	8F
7			ASLA
			BRA	10F
8			ASLA
			LDAB	M7772
			ANDB	#$04
			BEQ	10F
			LDX	#M7933
			LDAB	M0076
			ABX
			TST	,X
			BEQ	9F
			LDX	#M793B
			LDAB	M0076
			ABX
			LDAB	,X
			BPL	10F
9			LDAA	#$FF
10			STAA	M007D
11			LDX	#M7943
			LDAB	M006F
			LDAA	#$1D
			MUL
			ABX
			STX	M007E
			LDAB	M0076
			LDAA	#$74
			MUL
			ADDD	M007E
			XGDX
			CLRB
12			PSHB
			PSHX
			LDX	#D_9FBC
			ABX
			LDAA	,X
			PULX
			LDAB	M007C
			MUL
			ADDA	M007D
			BCC	13F
			LDAA	#$FF
13			STAA	,X
			INX
			PULB
			INCB
			CMPB	#$1D
			BNE	12B
			INC	>M0076
			DEC	>M007B
			BNE	11B
			RTS

;-------

D_9FA8			FCB	$7F,$7A,$76,$72,$6E,$6B
			FCB	$68,$66,$64,$62,$60,$5E
			FCB	$5C,$5A,$58,$56,$55,$54
			FCB	$52,$51

;-------

D_9FBC			FCB	$00,$01,$02,$03,$04,$05
			FCB	$06,$07,$08,$09,$0B,$0E
			FCB	$10,$13,$17,$1C,$21,$27
			FCB	$2F,$39,$43,$50,$5F,$71
			FCB	$86,$A0,$BE,$E0,$FF

;-------

F_9FD9			LDAB	,X
			CMPB	#$14
			BCS	1F
			LDAA	#$63
			SUBA	,X
			BRA	2F
1			LDX	#D_9FA8
			ABX
			LDAA	,X
2			RTS

;-------

F_9FEC			JSR	F_99EF
			LDAA	$09,X
			BEQ	1F
			LDAB	#$20
			MUL
			LDAA	$09,X
			ASLA
			ORAA	#$F0
			COMA
			BRA	2F
1			LDD	#$0000
2			PSHB
			LDX	#M78D3
			LDAB	M006F
			ASLB
			ASLB
			ASLB
			ADDB	M0076
			ABX
			PULB
			STAA	,X
			STAB	$20,X
			INC	>M0076
			DEC	>M007B
			BNE	2B
			RTS

;-------

F_A01B			LDAB	#$3E
			JSR	F_A121
			SUBA	#$18
			LDAB	M7772
			ANDB	#$04
			BEQ	1F
			LDX	#M793B
			LDAB	M0076
			ABX
			LDAB	,X
			BMI	1F
			PSHA
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			LDAB	$07,X			; get instrument note shift
			SUBB	#24			; fix range (-24 .. +24)
			PULA
			ABA
1			LDX	#M791B
			STX	DPTR
			JMP	F_9AD2

;-------

F_A049			LDAB	M7772
			ANDB	#$04
			BEQ	1F
			TST	PFM_EDIT_ASSIGN
			BEQ	1F
			LDAB	VCED_PORTATIME
			BRA	2F
1			LDAB	#$42
			JSR	F_A121
2			LDX	#D_A06D
			ABX
			LDAA	,X
			LDX	#M77C6
			STX	DPTR
			JMP	F_9AD2

D_A06D			FCB	$FF,$FE,$F3,$E8,$D3,$CA,$C1,$B9
			FCB	$B2,$AB,$A5,$9F,$99,$93,$8D,$87
			FCB	$82,$7D,$78,$73,$6E,$6A,$66,$62
			FCB	$5E,$5B,$58,$55,$52,$4F,$4C,$4A
			FCB	$48,$46,$44,$42,$40,$3E,$3C,$3A
			FCB	$38,$36,$35,$33,$31,$2F,$2E,$2C
			FCB	$2A,$29,$27,$26,$25,$24,$22,$21
			FCB	$1F,$1E,$1C,$1B,$1A,$19,$18,$17
			FCB	$16,$15,$14,$13,$12,$12,$11,$10
			FCB	$10,$0F,$0E,$0E,$0D,$0D,$0C,$0C
			FCB	$0B,$0B,$0A,$0A,$09,$09,$08,$08
			FCB	$07,$07,$06,$06,$05,$05,$04,$04
			FCB	$03,$03,$02,$01

;-------

F_A0D1			LDAB	#$40
			JSR	F_A121
			LDX	#D_A0E4
			ABX
			LDAA	,X
			LDX	#M7923
			STX	DPTR
			JMP	F_9AD2

D_A0E4			FCB	$00,$10,$21,$31,$41,$51,$61,$71
			FCB	$81,$91,$A2,$B2,$C2

;-------

F_A0F1			LDAB	#$4B
			JSR	F_A121
			SUBA	#$32
			LDX	#M792B
			STX	DPTR
			JMP	F_9AD2

;-------

F_A100			LDAB	#$43
			JSR	F_A121
			JSR	MUL_660
			LDX	#M7D1B
			STX	DPTR
			JMP	F_9AD2

;-------

F_A110			LDAB	#$4C
			JSR	F_A121
			JSR	MUL_660
			LDX	#M7D33
			STX	DPTR
			JMP	F_9AD2

;-------

F_A120			CLRB

;-------	fallthrough

F_A121			LDX	#VCED
			ABX
			XGDX
			ADDD	M0074
			XGDX
			LDAA	,X
			TAB
			RTS

;-------

HI_CALL_18		LDAB	SYS_TUNE
			ASLB
			EORB	#$80
			BMI	1F
			CLRA
			BRA	2F
1			LDAA	#$FF
2			ASLD
			STD	M0086
			RTS
			LDAB	#$60
			LDAA	#$FF
			CLC
			RORA
3			SEI
			OPZ_OUT_A
			CLI
			INCB
			CMPB	#$80
			BNE	3B
			RTS

;-------

F_A155			STAB	M0083
			PSHA
			JSR	F_A354
			PULA
			STAA	M0084
			CLRB
			STAB	M0085
1			LDX	#D_OPERATOR_MAP
			ABX
			LDAB	,X
			LDX	#OP_ENABLE
			ABX
			LDAA	,X
			ANDA	#$01
			BNE	2F
			LDAA	#$FF
			BRA	9F
2			LDX	#M7943
			LDAB	M0085
			LDAA	#$1D
			MUL
			ABX
			STX	M00DC
			LDAB	M0084
			LDAA	#$74
			MUL
			ADDD	M00DC
			XGDX
			PSHX
			LDX	#M791B
			LDAB	M0084
			ABX
			LDAB	,X
			ADDB	M0083
3			BLT	5F
4			CMPB	#$60
			BCS	6F
			SUBB	#$0C
			BRA	4B
5			ADDB	#$0C
			BRA	3B
6			LDX	#D_A2F0
			ABX
			LDAB	,X
			SUBB	#$0E
			BCC	7F
			CLRB
7			CMPB	#$70
			BLS	8F
			LDAB	#$70
8			LSRB
			LSRB
			PULX
			ABX
			LDAA	,X
9			PSHA
			LDAA	#$08
			LDAB	M0085
			MUL
			ADDB	M0084
			STAB	M0080
			LDX	#M78D3
			ABX
			LDAB	M00F0
			LDAA	$20,X
			MUL
			ADDA	,X
			BCC	10F
			LDAA	#$FF
10			PULB
			ABA
			BCC	11F
			LDAA	#$FF
11			LDAB	M0080
			LDX	#M78A3
			ABX
			STAA	,X
			CMPA	#$FF
			BEQ	12F
			LDX	#M7873
			LDAB	M0080
			ABX
			ADDA	,X
			BCC	12F
			LDAA	#$FF
12			LSRA
			LDAB	#$60
			ADDB	M0080
			SEI
			OPZ_POLL
			OPZ_OUT_A
			CLI
			LDAB	M0085
			INCB
			STAB	M0085
			CMPB	#$04
			BEQ	13F
			JMP	1B
13			LDAA	M7772
			ANDA	#$04
			BEQ	14F
			TST	PFM_EDIT_ASSIGN
			BEQ	14F
			TIM	#%01000000,M0041
			BEQ	17F
			BRA	16F
14			LDAA	M0084
			JSR	F_9A07
			LDAA	$3F,X
			BEQ	15F
			LDAA	$41,X
			BNE	17F
15			LDX	#M793B
			LDAB	M0084
			ABX
			LDAB	,X
			BMI	17F
			LDX	#M0041
			ABX
			TIM	#%01000000,$00,X
			BEQ	17F
16			LDX	#M77C6
			LDAB	M0084
			ABX
			LDAA	,X
			CMPA	#$FF
			BEQ	17F
			LDX	#M7D03
			BRA	18F
17			LDX	#M7CF3
18			LDAB	M0084
			ASLB
			ABX
			LDD	,X
			STD	M00DC
			LDD	M0086
			PSHB
			LDX	#M78C3
			LDAB	M0084
			ASLB
			ABX
			PULB
			ADDD	,X
			BVC	20F
			BCS	19F
			LDD	#$7FFF
			BRA	20F
19			LDD	#$0000
20			LDX	#M77B6
			PSHB
			TST	>M0084
			BNE	21F
			LDAB	M7846
			ANDB	#$03
			CMPB	#$03
			BEQ	21F
			PULB
			BRA	23F
21			LDAB	M0084
			ASLB
			ABX
			PULB
			ADDD	,X
			BVC	23F
			BCS	22F
			LDD	#$7FFF
			BRA	23F
22			LDD	#$0000
23			ADDD	M00DC
24			BLT	26F
25			CMPA	#$60
			BCS	27F
			SUBA	#$0C
			BRA	25B
26			ADDA	#$0C
			BRA	24B
27			PSHB
			LDX	#D_A2F0
			TAB
			ABX
			LDAA	,X
			PULB
			ANDB	#$FC
			STD	M0081
			LDAA	#$28
			ADDA	M0084
			LDAB	M0081
			SEI
			OPZ_POLL
			OPZ_OUT_B
			ADDA	#$08
			LDX	#M7933
			LDAB	M0084
			ABX
			LDAB	,X
			ANDB	#$01
			ORAB	M0082
			OPZ_POLL
			OPZ_OUT_B
			CLI
			RTS

D_A2F0			FCB	$00,$01,$02,$04,$05,$06,$08,$09
			FCB	$0A,$0C,$0D,$0E,$10,$11,$12,$14
			FCB	$15,$16,$18,$19,$1A,$1C,$1D,$1E
			FCB	$20,$21,$22,$24,$25,$26,$28,$29
			FCB	$2A,$2C,$2D,$2E,$30,$31,$32,$34
			FCB	$35,$36,$38,$39,$3A,$3C,$3D,$3E
			FCB	$40,$41,$42,$44,$45,$46,$48,$49
			FCB	$4A,$4C,$4D,$4E,$50,$51,$52,$54
			FCB	$55,$56,$58,$59,$5A,$5C,$5D,$5E
			FCB	$60,$61,$62,$64,$65,$66,$68,$69
			FCB	$6A,$6C,$6D,$6E,$70,$71,$72,$74
			FCB	$75,$76,$78,$79,$7A,$7C,$7D,$7E

D_OPERATOR_MAP		FCB	$03,$01,$02,$00

;-------

F_A354			TAB
			LDX	#M7846
			ABX
			LDAB	,X
			ANDB	#$03
			BEQ	1F
			CMPB	#$03
			BCC	1F
			DECB
			LDX	#M7850
			ABX
			LDAB	,X
			BPL	2F
1			TAB
2			STAB	M0084
			ASLB
			LDX	#M780E
			ABX
			LDD	,X
			SUBD	#$1300
			BEQ	3F
			LDX	#M7796
			LDAB	M0084
			ASLB
			ABX
			PSHX
			LDX	#M77A6
			ABX
			LDD	#$0000
			STD	,X
			PULX
			STD	,X
3			RTS

;-------

F_A390			LDAB	#$07
			STAB	M0097
1			LDX	#M793B
			LDAB	M0097
			ABX
			LDAB	,X
			BPL	2F
			LDD	#$0000
			JMP	23F
2			LDX	#M7D83
			ABX
			LDAB	,X
			CMPB	#$80
			BNE	4F
3			LDD	#$0000
			BRA	11F
4			LSRB
			LDX	#D_A4B8
			ABX
			LDAA	,X
			ASLA
			EORA	#$80
			STAA	M008C
			LDX	#M7923
			LDAB	M0097
			ABX
			LDAB	,X
			BEQ	3B
			LDAA	M008C
			CMPB	#$C2
			BNE	6F
			TSTA
			BMI	5F
			CMPA	#$7E
			BNE	6F
			LDD	#$0C00
			BRA	10F
5			NEGA
			LDAB	#$C0
			MUL
			COMA
			COMB
			INCB
			BCC	9F
			INCA
			BRA	9F
6			TSTA
			BMI	7F
			ASLA
			MUL
			BRA	8F
7			COMA
			ASLA
			MUL
			COMB
			COMA
8			LSRD
9			LSRD
			LSRD
			LSRD
10			TST	>M008C
			BPL	11F
			ORAA	#$F0
11			STD	M0089
			LDX	#M792B
			LDAB	M0097
			ABX
			LDAB	,X
			BNE	12F
			LDD	#$0000
			BRA	22F
12			STAB	M008D
			PSHB
			LDX	#M793B
			LDAB	M0097
			ABX
			LDAB	,X
			BPL	13F
			CLRA
			BRA	14F
13			LDX	#INST_BREATH
			ABX
			LDAA	,X
			BNE	14F
			PULB
			LDD	#$0000
			BRA	22F
14			PULB
			CMPB	#$32
			BEQ	15F
			CMPB	#$31
			BNE	16F
15			CMPA	#$FE
			BCS	17F
			LDD	#$C000
			BRA	21F
16			TSTB
			BMI	18F
17			BSR	F_A47E
			MUL
			BRA	21F
18			NEGB
			CMPB	#$31
			BCC	25F
19			BSR	F_A47E
			MUL
20			COMA
			COMB
			ADDD	#1
			BEQ	22F
21			LSRD
			LSRD
			TST	>M008D
			BPL	22F
			ORAA	#$C0
22			ADDD	M0089
23			PSHB
			LDX	#M78C3
			LDAB	M0097
			ASLB
			ABX
			PULB
			STD	,X
			DEC	>M0097
			BMI	24F
			JMP	1B
24			RTS
25			CMPA	#$FE
			BCS	19B
			LDD	#$C000
			BRA	20B

;-------

F_A47E			LDX	#D_A485
			ABX
			LDAB	,X
			RTS

D_A485			FCB	$00,$01,$02,$03,$04,$05,$06,$07
			FCB	$08,$09,$0A,$0B,$0C,$0D,$0F,$11
			FCB	$14,$17,$1A,$1C,$1F,$23,$27,$2A
			FCB	$2E,$32,$36,$3A,$3E,$43,$48,$4E
			FCB	$52,$58,$5D,$62,$69,$6E,$75,$7B
			FCB	$81,$88,$8E,$95,$9C,$A4,$AB,$B3
			FCB	$BB,$C2,$C2

D_A4B8			FCB	$00,$01,$02,$03,$04,$05,$06,$07
			FCB	$08,$09,$0A,$0B,$0C,$0D,$0E,$0F
			FCB	$10,$11,$12,$13,$14,$15,$16,$17
			FCB	$18,$19,$1A,$1B,$1C,$1D,$1E,$1F
			FCB	$20,$21,$22,$23,$24,$25,$26,$27
			FCB	$28,$2A,$2B,$2C,$2D,$2E,$2F,$30
			FCB	$31,$32,$33,$34,$35,$36,$37,$38
			FCB	$39,$3A,$3B,$3C,$3D,$3E,$3F,$40
			FCB	$40,$40,$41,$42,$43,$44,$45,$46
			FCB	$47,$48,$49,$4A,$4B,$4C,$4D,$4E
			FCB	$4F,$50,$51,$52,$53,$54,$55,$56
			FCB	$58,$59,$5A,$5B,$5C,$5D,$5E,$5F
			FCB	$60,$61,$62,$63,$64,$65,$66,$67
			FCB	$68,$69,$6A,$6B,$6C,$6D,$6E,$6F
			FCB	$70,$71,$72,$73,$74,$75,$76,$77
			FCB	$78,$79,$7A,$7B,$7C,$7D,$7E,$7F

;-------

F_A538			LDX	#M7D01
			LDAB	#$07
			STAB	M0097
1			PSHX
			LDAA	M7772
			ANDA	#$04
			BEQ	2F
			TST	PFM_EDIT_ASSIGN
			BEQ	2F
			TIM	#%01000000,M0041
			BNE	5F
			BRA	4F
2			LDAA	M0097
			JSR	F_9A07
			TST	$3F,X
			BEQ	3F
			TST	$41,X
			BNE	5F
3			LDX	#M793B
			LDAB	M0097
			ABX
			LDAB	,X
			BMI	4F
			LDX	#M0041
			ABX
			TIM	#%01000000,$00,X
			BNE	5F
4			PULX
			LDD	,X
			BRA	9F
5			PULX
			LDD	,X
			STD	M0098
			SUBD	$10,X
			BEQ	8F
			BPL	7F
			BSR	F_A59A
			BEQ	8F
			NEGA
			LSRA
			LSRA
			INCA
			MUL
			STD	M0095
			LDD	$10,X
			SUBD	M0095
			XGDX
			CPX	M0098
			XGDX
			BCC	9F
			BRA	8F

;------- fallthrough

F_A59A			PSHX
			LDX	#M77C6
			LDAB	M0097
			ABX
			LDAB	,X
			PULX
			CMPB	#$FF
			RTS
7			BSR	F_A59A
			BEQ	8F
			LSRA
			LSRA
			INCA
			MUL
			ADDD	$10,X
			XGDX
			CPX	M0098
			XGDX
			BCS	9F
8			LDD	M0098
9			STD	$10,X
			PSHX
			LDD	M0086
			PSHB
			LDX	#M78C3
			LDAB	M0097
			ASLB
			ABX
			PULB
			ADDD	,X
			LDX	#M77B6
			PSHB
			TST	>M0097
			BNE	10F
			LDAB	M7846
			ANDB	#$03
			CMPB	#$03
			BEQ	10F
			PULB
			BRA	12F
10			LDAB	M0097
			ASLB
			ABX
			PULB
			ADDD	,X
			BVC	12F
			BCS	11F
			LDD	#$7FFF
			BRA	12F
11			LDD	#$0000
12			PULX
			ADDD	$10,X
13			BLT	15F
14			CMPA	#$60
			BCS	16F
			SUBA	#$0C
			BRA	14B
15			ADDA	#$0C
			BRA	13B
16			PSHB
			PSHX
			LDX	#D_A2F0
			TAB
			ABX
			LDAA	,X
			PULX
			PULB
			ANDB	#$FC
			STD	M0081
			LDAA	#$28
			ADDA	M0097
			LDAB	M0081
			SEI
			SPIN3
			OPZ_OUT_B
			ADDA	#$08
			PSHX
			LDX	#M7933
			LDAB	M0097
			ABX
			LDAB	,X
			PULX
			ANDB	#$01
			ORAB	M0082
			OPZ_POLL
			OPZ_OUT_B
			CLI
			DEX
			DEX
			DEC	>M0097
			BMI	17F
			JMP	1B
17			RTS

;-------

F_A64D			CLR	>M0097
1			LDAB	M0097
			ASLB
			LDX	#M7796
			ABX
			PSHX
			LDX	#M780E
			ABX
			LDD	,X
			PULX
			ADDD	,X
			BCC	2F
			LDD	#$FFFF
2			STD	,X
			ADDD	#1
			BNE	4F
			LDAB	M0097
			ASLB
			LDX	#M77A6
			ABX
			PSHX
			LDX	#M780E
			ABX
			LDD	,X
			PULX
			ADDD	,X
			BCC	3F
			LDD	#$FFFF
3			STD	,X
4			INC	>M0097
			LDAA	M0097
			CMPA	#$08
			BNE	1B
			RTS

;-------

F_A68F			CLR	>M0097
			TST	>M0091
			BEQ	1F
			LDAA	#$04
			STAA	M0097
1			LDX	#M7D1B
			LDAB	M0097
			ABX
			LDAA	$18,X
			PSHX
			LDX	#M793B
			LDAB	M0097
			ABX
			LDAB	,X
			BPL	2F
			PULX
			JMP	9F
2			STAB	M0093
			LDX	#INST_BREATH
			ABX
			STX	M0089
			LDAB	,X
			PULX
			MUL
			STAA	M00F4
			LDAA	$18,X
			SUBA	M00F4
			STAA	$08,X
			LDAA	,X
			PSHX
			LDX	M0089
			LDAB	$08,X
			PULX
			MUL
			STAA	$10,X
			LDAA	,X
			SUBA	$10,X
			PSHX
			LDX	M0089
			ADDA	$10,X
			PULX
			BCC	3F
			LDAA	#$FF
3			COMA
			TAB
			PSHX
			LDX	#D_A82B
			ABX
			LDAA	,X
			LDAB	M776D
			COMB
			LDX	#D_A82B
			ABX
			ADDA	,X
			BCC	4F
			LDAA	#$FF
			BRA	5F
4			LDAB	M776B
			ANDB	#$02
			BEQ	5F
			LDX	#M7753
			LDAB	M0093
			ABX
			LDAB	,X
			COMB
			LDX	#D_A82B
			ABX
			ADDA	,X
			BCC	5F
			LDAA	#$FF
5			PULX
			STAA	$10,X
			LDAB	$08,X
			COMB
			LDX	#D_A82B
			ABX
			TAB
			CLRA
			ADDB	,X
			ROLA
			XGDX
			STX	M0093
			LDX	#M7893
			LDAB	M0097
			ASLB
			ABX
			LDD	,X
			PSHA
			PSHB
			LDD	M0093
			STD	,X
			PULB
			PULA
			SUBD	M0093
			BEQ	9F
			BCC	6F
			COMA
			COMB
			ADDD	#1
6			XGDX
			CPX	#$0020
			BCS	7F
			CLRA
			BRA	8F
7			XGDX
			LDX	#D_A92B
			ABX
			LDAA	,X
8			LDAB	M0097
			SEI
			OPZ_OUT_A
			CLI
9			INC	>M0097
			LDAB	M0097
			ANDB	#$03
			BEQ	10F
			JMP	1B
10			LDAB	#$03
			STAB	M0088
			STAB	M0097
			TST	>M0091
			BNE	11F
			COM	>M0091
			CLR	>M0092
			BRA	12F
11			CLR	>M0091
			LDAB	#$04
			STAB	M0092
12			LDAB	M0088
			ASLB
			ASLB
			ASLB
			ADDB	M0097
			ADDB	M0092
			STAB	M0090
			LDX	#M7853
			LDAB	M0090
			ABX
			LDAA	,X
			LDX	#M7D23
			LDAB	M0097
			ADDB	M0092
			ABX
			LDAB	,X
			MUL
			COMA
			LDX	#D_A82B
			TAB
			ABX
			LDAA	,X
			LDX	#M7913
			LDAB	M0097
			ADDB	M0092
			ABX
			LDAB	,X
			ANDB	#$07
			SUBB	#$04
			BCS	14F
			BEQ	15F
			CMPB	#$03
			BCS	16F
			BRA	17F
13			BRA	12B
14			LDAB	M0088
			CMPB	#$03
			BNE	18F
			BRA	17F
15			TIM	#%00000010,M0088
			BEQ	18F
			BRA	17F
16			TST	>M0088
			BEQ	18F
17			LDX	#M7D2B
			LDAB	M0097
			ADDB	M0092
			ABX
			ADDA	,X
			BCC	18F
			LDAA	#$FF
18			LDX	#M7873
			LDAB	M0090
			ABX
			STAA	,X
			LDX	#M78A3
			LDAB	M0090
			ABX
			ADDB	#$60
			PSHA
			ADDA	,X
			BCC	19F
			LDAA	#$FF
19			PSHA
			LDAA	M776B
			ANDA	#$02
			PULA
			BEQ	20F
			TST	M7767
			BEQ	20F
			CLC
			BRA	21F
20			SEC
21			RORA
			SEI
			OPZ_OUT_A
			CLI
			PULA
			DEX
			DEC	>M0097
			BPL	13B
			LDAB	#$03
			STAB	M0097
			DEC	>M0088
			BPL	13B
			RTS

D_A82B			FCB	$FF,$FF,$E0,$CD,$C0,$B5,$AD,$A6
			FCB	$A0,$9A,$95,$91,$8D,$89,$86,$82
			FCB	$80,$7D,$7A,$78,$75,$73,$71,$6F
			FCB	$6D,$6B,$69,$67,$66,$64,$62,$61
			FCB	$60,$5E,$5D,$5B,$5A,$59,$58,$56
			FCB	$55,$54,$53,$52,$51,$50,$4F,$4E
			FCB	$4D,$4C,$4B,$4A,$49,$48,$47,$46
			FCB	$46,$45,$44,$43,$42,$42,$41,$40
			FCB	$40,$3F,$3E,$3D,$3D,$3C,$3B,$3B
			FCB	$3A,$39,$39,$38,$38,$37,$36,$36
			FCB	$35,$35,$34,$33,$33,$32,$32,$31
			FCB	$31,$30,$30,$2F,$2F,$2E,$2E,$2D
			FCB	$2D,$2C,$2C,$2B,$2B,$2A,$2A,$2A
			FCB	$29,$29,$28,$28,$27,$27,$26,$26
			FCB	$26,$25,$25,$24,$24,$24,$23,$23
			FCB	$22,$22,$22,$21,$21,$21,$20,$20
			FCB	$20,$1F,$1F,$1E,$1E,$1E,$1D,$1D
			FCB	$1D,$1C,$1C,$1C,$1B,$1B,$1B,$1A
			FCB	$1A,$1A,$19,$19,$19,$18,$18,$18
			FCB	$18,$17,$17,$17,$16,$16,$16,$15
			FCB	$15,$15,$15,$14,$14,$14,$13,$13
			FCB	$13,$13,$12,$12,$12,$12,$11,$11
			FCB	$11,$11,$10,$10,$10,$10,$0F,$0F
			FCB	$0F,$0F,$0E,$0E,$0E,$0E,$0D,$0D
			FCB	$0D,$0D,$0C,$0C,$0C,$0C,$0B,$0B
			FCB	$0B,$0B,$0A,$0A,$0A,$0A,$09,$09
			FCB	$09,$09,$08,$08,$08,$08,$08,$07
			FCB	$07,$07,$07,$06,$06,$06,$06,$06
			FCB	$05,$05,$05,$05,$05,$04,$04,$04
			FCB	$04,$04,$03,$03,$03,$03,$03,$02
			FCB	$02,$02,$02,$02,$02,$01,$01,$01
			FCB	$01,$01,$00,$00,$00,$00,$00,$00

D_A92B			FCB	$30,$30,$30,$20,$1C,$1B,$1A,$19
			FCB	$18,$17,$16,$15,$14,$13,$12,$11
			FCB	$10,$0F,$0E,$0D,$0C,$09,$09,$09
			FCB	$09,$08,$08,$08,$08,$06,$04,$02

;-------

F_A94B			TST	>M0091
			BNE	1F
			CLRB
			BRA	2F
1			LDAB	#$01
2			STAB	M0097
			LDX	#M7D15
			LDAB	M0097
			ABX
			LDAA	,X
			LDAB	M7850
			BEQ	4F
			CMPB	#$FF
			BEQ	4F
			TST	>M0097
			BNE	3F
			LDAB	M784F
			BRA	6F
3			LDAB	M784E
			BRA	6F
4			TST	>M0097
			BNE	5F
			LDAB	M784E
			BRA	6F
5			LDAB	M784F
6			LDX	#INST_MODULATION
			ABX
			STAB	M0089
			LDAB	,X
			MUL
			STAA	M00F2
			LDX	#M7D17
			LDAB	M0097
			ABX
			LDAA	,X
			LDX	#INST_BREATH
			LDAB	M0089
			ABX
			LDAB	,X
			MUL
			STAA	M00F3
			LDX	#M7D19
			LDAB	M0097
			ABX
			LDAA	,X
			LDX	#INST_FOOT
			LDAB	M0089
			ABX
			LDAB	,X
			MUL
			STAA	M00F5
			LDAA	M00F2
			ADDA	M00F3
			BCS	7F
			ADDA	M00F5
			BCC	8F
7			LDAA	#$FF
8			PSHA
			LDX	#M7D13
			LDAB	M0097
			ABX
			LDAA	,X
			LDX	#M7850
			LDAB	M0097
			ABX
			LDAB	,X
			BMI	9F
			LDX	#M77A6
			ABX
			LDAB	,X
			BRA	10F
9			CLRB
10			MUL
			PULB
			ABA
			BCC	11F
			LDAA	#$FF
11			TAB
			COMB
			LDX	#D_A82B
			ABX
			LDAA	,X
			LDX	#M7850
			LDAB	M0097
			ABX
			LDAB	,X
			BMI	13F
			LDX	#M7873
			ABX
			ADDA	,X
			BCC	12F
			LDAA	#$FF
12			SUBA	,X
13			LSRA
			TST	>M0097
			BNE	14F
			LDAB	#$19
			BRA	15F
14			LDAB	#$17
15			SEI
			OPZ_OUT_A
			CLI
			RTS

;-------

F_AA1A			TST	>M0091
			BNE	1F
			CLR	>M0092
			BRA	2F
1			LDAB	#$04
			STAB	M0092
2			CLR	>M0097
3			LDX	#M793B
			LDAB	M0097
			ADDB	M0092
			ABX
			LDAB	,X
			BMI	6F
			LDX	#INST_MODULATION
			ABX
			STX	M0089
			LDX	#M7D3B
			LDAB	M0097
			ADDB	M0092
			ABX
			LDAA	,X
			PSHX
			LDX	M0089
			LDAB	,X
			PULX
			MUL
			STAA	$38,X
			LDAA	$10,X
			PSHX
			LDX	M0089
			LDAB	$10,X
			PULX
			MUL
			PSHA
			LDAA	$08,X
			PSHX
			LDX	M0089
			LDAB	$08,X
			PULX
			MUL
			PULB
			ABA
			BCS	4F
			ADDA	$38,X
			BCC	5F
4			LDAA	#$FF
5			STAA	$38,X
6			INC	>M0097
			LDAB	M0097
			CMPB	#$04
			BNE	3B
			TST	>M0091
			BNE	7F
			CLR	>M0097
			BRA	8F
7			LDAB	#$01
			STAB	M0097
8			LDX	#M7D7B
			TST	>M0097
			BNE	9F
			LDAB	M7850
			BRA	10F
9			LDAB	M7851
10			BPL	11F
			CLRA
			BRA	16F
11			ABX
			LDAA	,X
			LDX	#M77A6
			ASLB
			ABX
			LDAB	,X
			MUL
			LDAB	M7850
			BEQ	13F
			CMPB	#$FF
			BEQ	13F
			TST	>M0097
			BNE	12F
			LDAB	M784F
			BRA	15F
12			LDAB	M784E
			BRA	15F
13			TST	>M0097
			BNE	14F
			LDAB	M784E
			BRA	15F
14			LDAB	M784F
15			BMI	16F
			LDX	#M7EF1
			ABX
			LDAB	,X
			LDX	#M7D73
			ABX
			ADDA	,X
			BCC	16F
			LDAA	#$FF
16			LSRA
			ORAA	#$80
			TST	>M0097
			BNE	17F
			LDAB	#$19
			BRA	18F
17			LDAB	#$17
18			SEI
			OPZ_OUT_A
			CLI
			RTS

;-------

F_AAF7			CLR	>M0097
1			LDAB	M0097
			BEQ	2F
			LDX	#M7846
			ABX
			LDAA	,X
			ANDA	#$03
			CMPA	#$03
			BNE	11F
2			LDX	#M7836
			ASLB
			ABX
			PSHX
			LDD	,X
			LDX	#M781E
			PSHB
			LDAB	M0097
			ASLB
			ABX
			PULB
			ADDD	,X
			PULX
			STD	,X
			ASLD
			BCC	3F
			COMA
3			TST	>M0097
			BNE	4F
			STAA	M776A
4			ADDA	#$80
			PSHA
			LDX	#M7D73
			LDAB	M0097
			ABX
			LDAA	$08,X
			ADDA	,X
			BEQ	10F
			BCC	5F
			LDAA	#$FF
5			LDX	#M77A6
			LDAB	M0097
			ASLB
			ABX
			LDAB	,X
			MUL
			TAB
			PULA
			TSTA
			BMI	6F
			MUL
			BRA	7F
6			NEGA
			MUL
			COMA
			COMB
			ADDD	#1
7			TAB
			BMI	8F
			CLRA
			BRA	9F
8			LDAA	#$FF
9			LDX	#M77B6
			PSHB
			LDAB	M0097
			ASLB
			ABX
			PULB
			ASLD
			STD	,X
			LDAA	M0097
			INCA
			STAA	M0097
			CMPA	#$08
			BNE	1B
			RTS
10			PULA
11			LDD	#$0000
			BRA	9B

;-------

			INCLUDE	"inc/jmpoff.asm"

;-------

F_AB9E			CMPB	#$0D
			BEQ	4F
			CMPB	#$0E
			BEQ	4F
			LDAA	#$01
			STAA	M009A
			LDAA	M776D
			LSRA
			CMPB	#$0B
			BEQ	1F
			CMPA	#$7F
			BEQ	2F
			INCA
			BRA	2F
1			TSTA
			BEQ	2F
			DECA
2			ASLA
			STAA	M776D
3			RTS
4			CLR	>M009A
			BRA	3B

;-------

F_ABC7			TST	>M00AE
			BNE	2F
			LDAB	M7772
			ANDB	#$04
			BNE	1F
			TST	VOICE_COMPARE
			BNE	2F
1			CLR	>M006E
			BRA	6F
2			LDAB	M7772
			ANDB	#$03
			LDAA	M006E
			INCA
			ANDA	#$3F
			STAA	M006E
			BEQ	4F
			CMPA	#$20
			BNE	6F
			TST	>M00AE
			BNE	7F
			TSTB
			BEQ	3F
			CMPB	#$01
			BNE	6F
			AIM	#~LED3,PORT6
			BRA	6F
3			AIM	#~LED4,PORT6
			BRA	6F
4			TST	>M00AE
			BNE	8F
			TSTB
			BEQ	5F
			CMPB	#$01
			BNE	6F
			OIM	#LED3,PORT6
			BRA	6F
5			OIM	#LED4,PORT6
6			RTS
7			CMPB	#$02
			BNE	6B
			AIM	#~LED2,PORT6
			BRA	6B
8			CMPB	#$02
			BNE	6B
			OIM	#LED2,PORT6
			DEC	>M00AE
			BRA	6B

;-------

C_AC2F			JSR	JMPOFF1
			FCB	C_AC48 - *		; B = 0
			FCB	$01
			FCB	C_AC45 - *		; B = 1 .. 3
			FCB	$04
			FCB	C_AC41 - *		; B = 4 .. 5
			FCB	$06
			FCB	C_AC3C - *		; B = 6 .. 10
			FCB	$0B
			FCB	C_AC48 - *		; default
			FCB	$00

C_AC3C			COMB				; B = 6 .. 10
			SUBB	#$F0			;  -> 9 .. 5
			BRA	C_AC48

C_AC41			SUBB	#$03			; B = 4 .. 5
			BRA	C_AC48			;  -> 1 .. 2

C_AC45			COMB				; B = 1 .. 3
			SUBB	#$F2			; -> 12 .. 10

C_AC48			TST	>M00A3			;
			BEQ	1F
			CMPB	M00A0
			BEQ	1F
			CMPB	#$0D
			BCC	2F
			CLRB
			BRA	2F
1			STAB	M00A0
2			CLR	>M00A1
			CLR	>M00A2
			CLR	>M00A3
			RTS

;-------

READ_SWITCHES		LDAA	PORT2			; read all of port 2 (pressed = low)
			COMA				; flip the bits (pressed = high)
			ANDA	#SW3|SW2|SW1		; mask the required bits (321_____)
			LSRA				; shift right (_321____)
			LSRA				; shift right (__321___)
			LSRA				; shift right (___321__)
			LSRA				; shift right (____321_)
			LSRA				; shift right (_____321)
			STAA	SWITCH_LO_N		; and save
			LDAA	PORT5			; read all of port 5 (pressed = low)
			COMA				; invert the bits (pressed = high)
			ANDA	#SW7|SW6|SW5|SW4|SW11	; mask the required bits (7654__B_)
			LSRA				; shift right (_7654__B)
			CLR	>SWITCH_HI_N		; get ready to save
			LSRA				; shift right (__7654__) - SW11 -> C
			BCC	1F			; if not pressed skip
			OIM	#%00000100,SWITCH_HI_N	; save SW11
1			ASLA				; shift left (07654___)
			ORAA	SWITCH_LO_N		; combine    (07654321)
			STAA	SWITCH_LO_N		; and save
			LDAA	PORT6			; read switches 8 - 10
			COMA				; flip the bits (pressed = high)
			ANDA	#SW10|SW9|SW8		; mask the required bits (_____A98)
			LSRA				; shift right (______A9) - SW8 -> C
			BCC	2F			; if not pressed skip
			OIM	#%10000000,SWITCH_LO_N	; save SW8
2			ORAA	SWITCH_HI_N		; combine with SW11 (_____BA9)
			STAA	SWITCH_HI_N		; and save

			CLRB				; B <- 0
			LDX	#SWITCH_LO		; offset to state
			LDAA	SWITCH_LO_N		; get current low switches
			CMPA	,X			; compare to low state
			BNE	3F			; different?  branch
			INX				; inc offset (point to SWITCH_HI)
			INCB				; B <- 1
			LDAA	SWITCH_HI_N		; A <- current high switches
			CMPA	,X			; compare to high state
			BNE	3F			; different? branch
			JMP	10F			; switches match - branch

3			CMPB	#$01			; check which byte was different
			BNE	4F			; low byte?  branch
			PSHA				; save A
			EORA	,X			; generate differences
			ANDA	#$04			; mask off bit 2 (SW11 - Store/Copy)
			PULA				; restore A (no flags change)
			BEQ	4F			; no difference?  branch
			STAA	,X			; save (non-EOR'd value) to high state
			LDAB	#$03			; B <- 3
			BITA	#$04			; test bit 2 again (SW11)
			BNE	C_AC48			; set?  branch
			INCB				; B <- 4
			BRA	C_AC48			; branch

4			ASLB				; B <- B * 8
			ASLB				; -
			ASLB				; -
			PSHB				; and save
			EORA	,X
			BEQ	10F
			BITA	,X
			BNE	7F
			CLR	>M0071
5			INC	>M0071
			LSRA
			BCC	5B
			PULB
			ADDB	M0071
			CLRA
			SEC
6			ROLA
			DEC	>M0071
			BNE	6B
			ORAA	,X
			STAA	,X
			JMP	C_AC2F
7			ANDA	,X
			TAB
			EORA	,X
			STAA	,X
			PULA
			TSTA
			BNE	10F
			ANDB	#$06
			BEQ	10F
			CMPB	#$06
			BEQ	9F
			BITB	#$02
			BEQ	8F
			LDAB	#$0D
			JMP	C_AC48
8			LDAB	#$0E
			JMP	C_AC48
9			AIM	#%11111011,$00,X
			BRA	8B

10			LDAB	M00A0
			JSR	JMPOFF1
			FCB	C_AD20 - *		; B = 0
			FCB	$01
			FCB	C_AD24 - *		; B = 1 .. 2
			FCB	$03
			FCB	C_AD20 - *		; B = 3 .. 7
			FCB	$08
			FCB	C_ADEF - *		; B = 8 .. 9
			FCB	$0A
			FCB	11F - *			; B = 10, 11
			FCB	$0C
			FCB	C_AD20 - *		; default
			FCB	$00

11			JMP	C_AE50

							; B = 3 .. 7
C_AD20			CLRB				; B <- 0
			JMP	C_AC48

C_AD24			TBA
			LDAB	M7772
			CMPB	#$02
			BEQ	14F
			CMPB	#$06
			BNE	15F
14			JMP	C_ADB6
15			CMPB	#$09
			BCS	16F
			CMPB	#$12
			BCS	C_ADB6
16			LDAB	M7774

			JSR	JMPOFF1
			FCB	C_ADB6 - *
			FCB	$02
			FCB	C_AD75 - *
			FCB	$05
			FCB	C_ADB6 - *
			FCB	$07
			FCB	C_AD75 - *
			FCB	$08
			FCB	C_ADB6 - *
			FCB	$09
			FCB	C_AD75 - *
			FCB	$0B
			FCB	17F - *
			FCB	$14
			FCB	C_ADB6 - *
			FCB	$15
			FCB	C_AD83 - *
			FCB	$16
			FCB	17F - *
			FCB	$19
			FCB	C_AD75 - *
			FCB	$1B
			FCB	C_AD67 - *
			FCB	$1C
			FCB	C_ADAA - *
			FCB	$1D
			FCB	17F - *
			FCB	$1F
			FCB	C_ADB6 - *
			FCB	$20
			FCB	17F - *
			FCB	$28
			FCB	C_ADB6 - *
			FCB	$36
			FCB	17F - *
			FCB	$00

17			BRA	C_AD20

C_AD67			LDAB	M7788
			CMPB	#$02
			BNE	17B
			TST	>M00A4
			BNE	17B
			BRA	C_ADB6

C_AD75			LDAB	M7788
			CMPB	#$01
			BNE	17B
			TST	>M00A4
			BNE	17B
			BRA	C_ADB6

C_AD83			LDAB	M7788
			CMPB	#$01
			BEQ	21F
			CMPB	#$02
			BNE	17B
			TST	>M00A4
			BNE	17B
			LDAB	M7789
			CMPB	#$0C
			BNE	17B
			BRA	C_ADB6
21			TST	>M00A4
			BNE	17B
			LDAB	M7789
			CMPB	#$08
			BCS	C_ADB6
			BRA	17B

C_ADAA			LDAB	M7788
			CMPB	#$02
			BNE	17B
			TST	>M00A4
			BNE	17B
C_ADB6			CMPA	#$02
			BEQ	27F
			TIM	#%00001000,SWITCH_LO	; test SW4 (INC)
			BEQ	17B
			LDAB	#$01
24			LDX	M00A1
			INX
			STX	M00A1
			TST	>M00A3
			BNE	28F
			CPX	#$0100
			BCC	25F
			JMP	42F
25			LDAA	#$01
			STAA	M00A3
26			CLR	>M00A1
			CLR	>M00A2
			RTS
27			TIM	#%00010000,SWITCH_LO	; test SW5 (DEC)
			BEQ	17B
			LDAB	#$02
			BRA	24B
28			CPX	#$0002
			BCC	26B
			JMP	42F

C_ADEF			TST	>M00A4
			BNE	37F
			CMPB	#$09
			BEQ	29F
			TIM	#%01000000,SWITCH_LO	; test SW7 (PARAM-)
			BEQ	37F
			LDAB	#$08
			BRA	30F
29			TIM	#%00100000,SWITCH_LO	; test SW6 (PARAM+)
			BEQ	37F
			LDAB	#$09
30			LDAA	M7772
			BNE	32F
			LDAA	M7788
			CMPA	#$02
			BNE	32F
			LDAA	M7774
			CMPA	#$15
			BNE	31F
			LDAA	M7789
			CMPA	#$0C
			BNE	32F
			BRA	24B
31			CMPA	#$1C
			BNE	32F
			LDAA	M7789
			CMPA	#$02
			BEQ	24B
32			LDX	M00A1
			INX
			STX	M00A1
			TST	>M00A3
			BNE	34F
			CPX	#$0100
			BCS	42F
			LDAA	#$01
			STAA	M00A3
33			CLR	>M00A1
			CLR	>M00A2
			RTS
34			CPX	#M0045
			BCS	42F
			BRA	33B

C_AE50			CMPB	#$0B
			BEQ	36F
			TIM	#%00000100,SWITCH_LO	; test SW3 (volume down)
			BEQ	37F
			LDAB	#$0A
			BRA	39F
36			TIM	#%00000010,SWITCH_LO	; test SW2 (volume up)
			BNE	38F
37			JMP	17B
38			LDAB	#$0B
39			LDX	M00A1
			INX
			STX	M00A1
			TST	>M00A3
			BNE	41F
			CPX	#$0100
			BCS	42F
			LDAA	#$01
			STAA	M00A3
40			CLR	>M00A1
			CLR	>M00A2
			RTS
41			CPX	#$0004
			BCS	42F
			BRA	40B
42			CLRB
			RTS

;-------

			INCLUDE	"inc/memcpy.asm"

;-------
;
; invokes low bank function 6, but saves X to DPTR first
;
LO_CALL_06		STX	DPTR
			LDAB	#6
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------
;
; invokes low bank function 0, but saves X to DPTR first
;

LOAD_VOICE_X		STX	DPTR
			CLRB
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

LO_CALL_08		LDAB	#$08
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

SET_NAME_RANGE		LDAB	#$0A
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

SET_ALL_RANGES		LDAB	#$09
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

LO_CALL_07		STX	DPTR
			LDAB	#$07
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

LO_CALL_05		STX	DPTR
			LDAB	#$05
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

GET_PVOICE_PTR		LDAB	M7773

;-------	fallthrough
;
; returns address of the (compact) voice data for the
; patch number in B
;
; NB: final pointer is referenced from the low bank, and $D1C0 is
;     the expected location of the 128 ROM presets
;

GET_PVOICE_PTR_B	CMPB	#160			; compare B to 160
			BCC	2F			; >= ?  branch
			CMPB	#32			; compare B to 32
			BCC	4F			; >= ?  branch
			LDAA	#78			; A <- 78
			MUL				; D <- B * 78
			ADDD	#USER_VOICE		;    + pointer to RAM voices
1			XGDX				; X <-> D
			BRA	3F			; done (could be RTS)

2			LDX	#INIT_VOICE		; point to default voice
3			RTS				; done

4			SUBB	#32			; B <- B - 32 (0 .. 127)
			LDAA	#78			; A <- 78
			MUL				; D <- B * 78
			ADDD	#$D1C0			;    + pointer to ROM voices
			BRA	1B			; and done

;-------

F_AEFF			LDAB	M7779
			CMPB	#24
			BCC	1F
			LDAA	#76
			MUL
			ADDD	#USER_PFM
			XGDX
			BRA	2F
1			LDX	#D_PFM_SINGLE
2			RTS

D_PFM_SINGLE		FCB	$68,$00,$20,$00,$7F,$07,$18,$63
			FCB	$60,$00,$41,$00,$7F,$07,$18,$63
			FCB	$60,$00,$62,$00,$7F,$07,$18,$63
			FCB	$60,$00,$63,$00,$7F,$07,$18,$63
			FCB	$60,$00,$64,$00,$7F,$07,$18,$63
			FCB	$60,$00,$65,$00,$7F,$07,$18,$63
			FCB	$60,$00,$66,$00,$7F,$07,$18,$63
			FCB	$60,$00,$67,$00,$7F,$07,$18,$63
			FCB	$00,$00
			FCC	"SINGLE    "

;-------

			INCLUDE	"inc/ptr.asm"

;-------

F_AF7B			LDAA	M7772
			ANDA	#$07
			BEQ	2F
			CMPA	#$03
			BEQ	2F
			BCS	1F
			CMPA	#$07
			BEQ	2F
			DECA
1			ADDB	#$05
			DECA
			BNE	1B
2			CMPB	#$1E
			BCS	3F
			CLRB
3			CLR	>M00AE

			JSR	JMPOFFB
			FCB	C_AFF9 - *
			FCB	C_B00C - *
			FCB	14F - *
			FCB	F_B082 - *
			FCB	F_B09A - *
			FCB	C_AFE0 - *
			FCB	C_B00C - *
			FCB	C_B066 - *
			FCB	C_B016 - *
			FCB	C_B09E - *
			FCB	C_AFF0 - *
			FCB	C_B00C - *
			FCB	C_B06E - *
			FCB	F_B084 - *
			FCB	12F - *
			FCB	C_AFF9 - *
			FCB	C_B00C - *
			FCB	14F - *
			FCB	8F - *
			FCB	6F - *
			FCB	C_AFF9 - *
			FCB	C_B00C - *
			FCB	10F - *
			FCB	5F - *
			FCB	7F - *
			FCB	4F - *
			FCB	C_B00C - *
			FCB	11F - *
			FCB	9F - *
			FCB	F_AFD9 - *

4			JMP	C_B127
5			JMP	C_B1AE			; RTS
6			JMP	F_B164
7			JMP	C_B168
8			JMP	HI_CALL_14
9			JMP	C_B14E
10			JMP	C_B133
11			JMP	C_B136
12			JSR	F_C94D
			JMP	C_B179

F_AFD9			JSR	F_C94D
			JMP	C_B0C0

14			RTS

C_AFE0			TST	VOICE_COMPARE
			BNE	19F			; -> RTS
			LDAA	OPERATOR_NUM
			STAA	M777C
			CLR	>M0059
			BRA	C_AFF9

C_AFF0			LDAA	M7773
			STAA	M777F
			CLR	>M00A5

C_AFF9			LDAA	SYS_MLOCK
			ANDA	#$01
			INCA
			ASLA
			ASLA
			ASLA
			ORAA	M7772
			STAA	M7772
18			JSR	F_E10E			; no-op
19			RTS

C_B00C			LDAA	#$07
			ANDA	M7772
			STAA	M7772
			BRA	18B

C_B016			LDAA	VOICE_EDITED
			BEQ	14B			; -> RTS
			TST	VOICE_COMPARE
			BNE	23F
			LDAA	#$07
			ANDA	M7772
			STAA	M7772
			LDAA	#$01
			STAA	VOICE_COMPARE
			JSR	F_E10E			; no-op
			TST	SYS_CMBIN
			BNE	22F
			LDAB	#$01
			STAB	SYS_CMBIN
			JSR	F_B774
			CLR	SYS_CMBIN
			BRA	19B
22			JMP	F_B774
23			CLR	VOICE_COMPARE
			JSR	F_E10E			; no-op
			TST	SYS_CMBIN
			BNE	24F
			LDAB	#$01
			STAB	SYS_CMBIN
			JSR	F_C2BC
			CLR	SYS_CMBIN
			BRA	25F
24			JSR	F_C2BC
25			LDX	M7781
			JMP	F_E10C			; RTS

C_B066			TST	VOICE_COMPARE
			BNE	33F
			JSR	F_B115

C_B06E			CLR	M7772
			LDAA	#$FF
			STAA	M7790
			CLR	>M009A
			JSR	F_E10E			; no-op
			LDAB	M7775
			JMP	F_B1DD

F_B082			BSR	F_B0EA

F_B084			LDAA	#$01
			STAA	M7772
			LDAA	#$FF
			STAA	M7790
			CLR	>M009A
			JSR	F_E10E			; no-op
			LDAB	M7776
			JMP	F_B1DD

F_B09A			BSR	F_B0EA
			BRA	32F

C_B09E			TST	VOICE_COMPARE
			BNE	33F
			BSR	F_B115
32			LDAA	#$02
			STAA	M7772
			CLR	M778C
			CLR	M7790
			LDD	#$0101
			STD	OP_ENABLE
			STD	OP_ENABLE + 2
			JSR	F_E10F			; no-op
			JSR	F_E10E			; no-op
33			RTS

;-------

C_B0C0			LDAA	#$02
			STAA	M7772
			CLR	M778C
			CLR	M7790
			JSR	F_E10E			; no-op
			LDX	#M69C1
			TST	SYS_CMBIN
			BNE	1F
			LDAB	#$01
			STAB	SYS_CMBIN
			JSR	F_B7A2
			CLR	SYS_CMBIN
			BRA	2F
1			JSR	F_B7A2
2			JSR	F_C7C2
			RTS

;-------

F_B0EA			LDAA	M7774
			CMPA	#$1F
			BCC	1F
			CMPA	#$14
			BCC	2F
1			LDAA	#$14
2			STAA	M7775
			CLR	>M00A6
			CLR	M7788
			CLR	M778C
			CMPA	#$19
			BCS	3F
			CMPA	#$1C
			BCC	3F
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE
3			RTS

;-------

F_B115			LDAA	M7774
			CMPA	#$0B
			BCS	1F
			CLRA
1			STAA	M7776
			CLR	M7788
			CLR	M778C
			RTS

;-------

C_B127			LDAA	M7779
			STAA	M777A
			CLR	>M00A5
			JMP	C_AFF9

;------

C_B133			JSR	F_B1C6

C_B136			LDAA	#$04
			STAA	M7772
			LDAA	#$FF
			STAA	M7790
			CLR	>M009A
			JSR	F_E10E			; no-op
			LDAB	M7777
			JMP	F_B1DD

;-------

HI_CALL_14		BSR	F_B1AF

C_B14E			LDAA	#$05
			STAA	M7772
			LDAA	#$FF
			STAA	M7790
			CLR	>M009A
			JSR	F_E10E			; no-op
			LDAB	M7778
			JMP	F_B1DD

;-------

F_B164			BSR	F_B1AF
			BRA	3F

C_B168			BSR	F_B1C6
3			LDAA	#$06
			STAA	M7772
			CLR	M778C
			CLR	M7790
			JSR	F_E10E			; no-op
			RTS

;-------

C_B179			LDAA	#$06
			STAA	M7772
			CLR	M778C
			CLR	M7790
			JSR	F_E10E			; no-op
			LDX	#VCED
			STX	SPTR
			LDX	#M69C1
			JSR	LO_CALL_06
			TST	SYS_CMBIN
			BNE	1F
			LDAB	#$01
			STAB	SYS_CMBIN
			JSR	F_B805
			CLR	SYS_CMBIN
			BRA	2F
1			JSR	F_B805
2			JSR	SEND_SYSEX_PCED
			JSR	F_C7C2
			RTS

;-------

C_B1AE			RTS

;-------

F_B1AF			LDAA	M7774
			CMPA	#$3F
			BCC	1F
			CMPA	#$3C
			BCC	2F
1			LDAA	#$3C
2			STAA	M7777
			CLR	M7788
			CLR	M778C
			RTS

;-------

F_B1C6			LDAA	M7774
			CMPA	#$36
			BCC	1F
			CMPA	#$28
			BCC	2F
1			LDAA	#$28
2			STAA	M7778
			CLR	M7788
			CLR	M778C
			RTS

;------

F_B1DD			PSHB
			JSR	F_B6BB
			PULB
			LDAA	#$01
			STAA	M7787
			TST	M7788
			BEQ	1F
			JMP	C_B339
1			TBA

			JSR	JMPOFF1
			FCB	C_B227 - *
			FCB	$01
			FCB	C_B242 - *
			FCB	$02
			FCB	C_B2B4 - *
			FCB	$05
			FCB	C_B26F - *
			FCB	$07
			FCB	C_B2B4 - *
			FCB	$08
			FCB	C_B26F - *
			FCB	$09
			FCB	C_B2B4 - *
			FCB	$0B
			FCB	2F - *
			FCB	$14
			FCB	C_B2B8 - *
			FCB	$15
			FCB	C_B2B4 - *
			FCB	$16
			FCB	C_B29D - *
			FCB	$18
			FCB	C_B2B4 - *
			FCB	$1F
			FCB	C_B2A1 - *
			FCB	$20
			FCB	2F - *
			FCB	$28
			FCB	C_B2D7 - *
			FCB	$33
			FCB	C_B30A - *
			FCB	$34
			FCB	C_B2D7 - *
			FCB	$35
			FCB	3F - *
			FCB	$36
			FCB	2F - *
			FCB	$3C
			FCB	C_B2B2 - *
			FCB	$3D
			FCB	C_B2B4 - *
			FCB	$3E
			FCB	C_B299 - *
			FCB	$3F
			FCB	2F - *
			FCB	$46
			FCB	C_B2B4 - *
			FCB	$00

2			RTS

3			JMP	C_B326

C_B227			STAB	M7774
			LDAB	M778C
			BEQ	7F
			DECB
C_B230			STAB	OPERATOR_NUM
C_B233			LDX	#OP_ENABLE
			ABX
			STX	M7781
			LDAB	#$01
			JMP	C_B2CB
7			CLRB
			BRA	9F

C_B242			STAB	M7774
9			ASLB
			LDX	#D_B61E
C_B249			ABX
			LDD	,X
C_B24C			STAB	M7783
			TAB
			CMPB	#110
			BCS	12F
			ANDB	#$7F
12			STAB	M7787
			JSR	GET_VOICE_PTR
			STX	M7784
			ABX
			TSTA
			BPL	13F
			JSR	F_B690
13			STX	M7781
			CLR	>M00A5
			JMP	C_B560

C_B26F			STAB	M7774
			LDAB	M778C
			CMPB	#$04
			BCS	F_B284
			CLRB
			JSR	F_B284
			LDAB	M778C
			SUBB	#$04
			BRA	C_B230

F_B284			STAB	OPERATOR_NUM
			JSR	F_E110			; no-op
			LDAB	M7774
			CMPB	#$08
			BEQ	16F
			SUBB	#$03
			BRA	9B
16			LDAB	#$04
			BRA	9B

C_B299			LDAA	#$02
			BRA	23F

C_B29D			SUBA	#$14
			BRA	23F

C_B2A1			STAB	M7774
			LDX	#GREETING
			LDAB	M778C
			ABX
			STX	M7781
			LDAB	#$7F
			BRA	C_B2CB

C_B2B2			BRA	C_B2B4			; branch to next op

C_B2B4			LDAA	#$01
			BRA	23F

C_B2B8			SUBA	#$14
23			STAB	M7774
C_B2BD			LDAB	#$03
			MUL
			LDX	#T_PARAM_RANGE
			ABX
			LDD	,X
			STD	M7781
			LDAB	$02,X
C_B2CB			STAB	M7783
			CLR	MENU_VALUE
			CLR	>M00A5
			JMP	C_B560

C_B2D7			LDAA	M778C
			STAA	M7786
27			STAB	M7774
			SUBB	#$28
28			ASLB
			LDX	#D_B672
			ABX
			LDD	,X
29			STAB	M7783
			TAB
			CMPB	#110
			BCS	30F
			ANDB	#$7F
30			STAB	M7787
			LDX	#PFM_EDIT_BUF
			ABX
			TSTA
			BMI	31F
			JMP	13B
31			LDAB	M7786
			LDAA	#12
			MUL
			ABX
			JMP	13B

C_B30A			LDAA	M778C
			BEQ	27B
			CMPA	#$01
			BNE	33F
			STAB	M7774
			LDAB	#$0E
			BRA	28B

33			SUBA	#$02
			STAA	M7786
			STAB	M7774
			LDAB	#$0D
			BRA	28B

C_B326			STAB	M7774
			LDAA	M778C
			CMPA	#$0A
			BCS	35F
			JMP	2B

35			ADDA	#$64
			LDAB	#$7F
			BRA	29B

;-------

C_B339			JSR	JMPOFF1
			FCB	10F - *
			FCB	$02
			FCB	C_B380 - *
			FCB	$03
			FCB	C_B38A - *
			FCB	$04
			FCB	C_B3EC - *
			FCB	$05
			FCB	10F - *
			FCB	$07
			FCB	C_B43F - *
			FCB	$08
			FCB	10F - *
			FCB	$09
			FCB	9F - *
			FCB	$0A
			FCB	8F - *
			FCB	$0B
			FCB	10F - *
			FCB	$15
			FCB	7F - *
			FCB	$16
			FCB	10F - *
			FCB	$18
			FCB	6F - *
			FCB	$19
			FCB	2F - *
			FCB	$1A
			FCB	3F - *
			FCB	$1B
			FCB	4F - *
			FCB	$1C
			FCB	5F - *
			FCB	$1D
			FCB	10F - *
			FCB	$1F
			FCB	1F - *
			FCB	$20
			FCB	10F - *
			FCB	$00

1			JMP	C_B551
2			JMP	C_B4EC
3			JMP	C_B4F7
4			JMP	C_B502
5			JMP	C_B51F
6			JMP	C_B4EA
7			JMP	C_B4BE
8			JMP	C_B48E
9			JMP	C_B46E
10			RTS

C_B380			LDAB	M7789
C_B383			ASLB
			LDX	#D_B628
			JMP	C_B249

C_B38A			LDAB	M7789
			BNE	14F
			LDAB	M778C
			BEQ	F_B3C3
			CLRB
			JSR	F_B3C3
			LDAB	M778C
			DECB
			JMP	C_B230
14			CMPB	#$01
			BEQ	17F
			LDAB	M778C
			CMPB	#$04
			BCS	15F
			CLRB
			JSR	15F
			LDAB	M778C
			SUBB	#$04
			JMP	C_B230
15			STAB	OPERATOR_NUM
			JSR	F_E110			; no-op
			LDAB	M7789
			ADDB	#$07
			BRA	C_B383

F_B3C3			LDAB	#$06
			BRA	C_B383
17			LDAB	M778C
			BEQ	19F
			CMPB	#$05
			BCS	F_B3DC
			CLRB
			JSR	F_B3DC
			LDAB	M778C
			SUBB	#$05
			JMP	C_B230

F_B3DC			SUBB	#$01
			STAB	OPERATOR_NUM
			JSR	F_E110			; no-op
			LDAB	#$08
			BRA	C_B383
19			LDAB	#$07
			BRA	C_B383

C_B3EC			JSR	F_B6A8
			STAA	OPERATOR_NUM
			PSHB
			JSR	F_E110			; no-op
			PULA
			TSTA
			BEQ	24F
			LDAB	M778C
			BEQ	26F
			CMPB	#$02
			BCS	F_B40F
			CLRB
			JSR	F_B40F
			LDAB	M778C
			SUBB	#$02
			JMP	C_B233

F_B40F			CMPA	#$02
			BNE	F_B436
			JSR	GET_OPERATOR_PTR
			LDAA	#$D9
			TIM	#%00111100,$0B,X	; coarse frequency?
			BNE	22F
			LDAB	#$07
			BRA	23F
22			LDAB	#$0F
23			JMP	C_B24C
24			LDAB	M778C
			BEQ	F_B436
			CLRB
			JSR	F_B436
			LDAB	M778C
			DECB
			JMP	C_B233

F_B436			ADDA	#$0B
			TAB
			BRA	30F
26			LDAB	#$0D
			BRA	30F

C_B43F			LDAB	M778C
			LDAA	M7789
			CMPA	#$05
			BNE	28F
			TSTB
			BNE	28F
			INCB
			STAB	M778C
28			CMPB	#$04
			BCS	F_B460
			CLRB
			JSR	F_B460
			LDAB	M778C
			SUBB	#$04
			JMP	C_B230

F_B460			STAB	OPERATOR_NUM
			JSR	F_E110			; no-op
			LDAB	M7789
			ADDB	#$0E
30			JMP	C_B383

C_B46E			LDAB	M778C
			CMPB	#$04
			BCS	F_B481
			CLRB
			JSR	F_B481
			LDAB	M778C
			SUBB	#$04
			JMP	C_B230

F_B481			STAB	OPERATOR_NUM
			JSR	F_E110			; no-op
			LDAB	M7789
			ADDB	#$14
			BRA	30B

C_B48E			LDAB	M7789
			CMPB	#$0F
			BCC	36F
			CMPB	#$02
			BNE	35F
			JSR	GET_VOICE_PTR
			TST	$3F,X
			BNE	34F
			LDAA	#$01
			JMP	C_B2BD
34			LDAB	#$18
			BRA	30B
35			ADDB	#$16
			BRA	30B
36			LDAA	M778C
			CMPA	#$0A
			BCS	37F
			JMP	10B
37			ADDA	#$4D
			LDAB	#$7F
			JMP	C_B24C

C_B4BE			LDAA	M7788
			CMPA	#$02
			BCC	41F
			LDAA	M7789
			CMPA	#$08
			BCC	39F
			ADDA	#$04
			BRA	40F
39			LDAA	#$01
40			JMP	C_B2BD
41			LDAA	M7789
			CMPA	#$0C
			BEQ	42F
			JMP	10B
42			LDAB	M778A
			LDX	#PROG_CHANGES
			ABX
			LDAB	#$B7
			BRA	53F

C_B4EA			BRA	39B

C_B4EC			LDAA	M7789
			CMPA	#$04
			BCC	39B
			ADDA	#$0C
			BRA	40B

C_B4F7			LDAA	M7789
			CMPA	#$03
			BCC	39B
			ADDA	#$10
			BRA	40B

C_B502			LDAA	M7788
			CMPA	#$01
			BEQ	39B
			LDAA	M7789
			CMPA	#$0C
			BCS	47F
			CLRA
47			LDAB	#$04
			MUL
			ADDB	M778C
			LDX	#CHORD
			ABX
			LDAB	#$31
			BRA	53F

C_B51F			LDAA	M7788
			CMPA	#$01
			BEQ	49F
			LDAA	M7789
			BEQ	51F
			CMPA	#$02
			BEQ	50F
49			JSR	HI_CALL_03
			BRA	39B
50			LDX	#MICROTUNE_FULL
			BRA	52F
51			LDX	#MICROTUNE_OCT
52			LDAB	M778A
			ASLB
			ABX
			LDAB	#$6C
			TST	M778C
			BEQ	53F
			LDAB	#$3F
			INX
53			STX	M7781
			JMP	C_B2CB

C_B551			LDX	#GREETING
			LDAB	M778C
			ABX
			STX	M7781
			LDAB	#$7F
			JMP	C_B2CB

C_B560			LDX	M7781

;-------

F_B563			LDAA	M7783
			CMPA	,X
			BCC	1F
			CLR	,X
1			LDAA	M7774
			CMPA	#$1F
			BEQ	4F
			CMPA	#$35
			BEQ	4F
			CMPA	#$0A
			BEQ	3F
			CMPA	#$07
			BEQ	2F
			CMPA	#$1C
			BEQ	7F
			BRA	5F
2			LDAB	M7788
			CMPB	#$01
			BNE	5F
			LDAA	M7789
			CMPA	#$04
			BEQ	6F
			BRA	5F
3			LDAB	M7788
			CMPB	#$01
			BNE	5F
			LDAA	M7789
			CMPA	#$0F
			BNE	5F
4			LDAA	#$1F
			CMPA	,X
			BCS	5F
			LDAA	#$24
			STAA	,X
5			LDX	M7781
			JSR	F_E10C			; no-op
			RTS
6			LDAA	M778C
			CMPA	#$04
			BCC	5B
			TST	,X
			BNE	5B
			OIM	#%00000001,$00,X
			BRA	5B
7			LDAB	M7788
			CMPB	#$02
			BNE	5B
			LDAB	M7789
			BEQ	8F
			CMPB	#$02
			BNE	5B
8			TST	M778C
			BNE	5B
			LDAA	#$0C
			CMPA	,X
			BCS	5B
			LDAA	#$0D
			STAA	,X
			BRA	5B

;
; three bytes per entry:
; - pointer to parameter's storage
; - its maximum permitted value
;
T_PARAM_RANGE		FDB	SYS_TUNE
			FCB	$7F
			FDB	M7570
			FCB	$01
			FDB	SYS_MLOCK
			FCB	$01
			FDB	SYS_CMBIN
			FCB	$01
			FDB	SYS_MIDBCH
			FCB	$10
			FDB	SYS_MIDTCH
			FCB	$0F
			FDB	SYS_PCINF
			FCB	$02
			FDB	SYS_COINF
			FCB	$11
			FDB	SYS_AT
			FCB	$01
			FDB	SYS_PBSW
			FCB	$11
			FDB	SYS_NOTESW
			FCB	$02
			FDB	SYS_SYSAVL
			FCB	$01
			FDB	EF1T
			FCB	$7F
			FDB	EF1P
			FCB	$30
			FDB	EF1F
			FCB	$07
			FDB	EF1L
			FCB	$63
			FDB	EF2D
			FCB	$02
			FDB	EF2S
			FCB	$01
			FDB	EF2R
			FCB	$63

D_B61E			FDB	$3407,$3507,$DA07,$8C06
			FDB	$8A63

D_B628			FDB	$3B03,$3663,$3763,$3863
			FDB	$3963,$3A01,$3C07,$3D03
			FDB	$8801,$8707,$8907,$D807
			FDB	$8B3F,$D701,$801F,$811F
			FDB	$840F,$821F,$830F,$DB03
			FDB	$8603,$8563,$3F01,$400C
			FDB	$4101,$4263,$4363,$6C63
			FDB	$6D63,$4763,$4863,$4963
			FDB	$4A63,$4B64,$4C63,$3E30
			FDB	$6B07

D_B672			FDB	$6101,$8008,$829F,$8310
			FDB	$847F,$857F,$860E,$8730
			FDB	$8863,$8903,$8A03,$600C
			FDB	$6203,$8B01,$630B

;-------

F_B690			LDAB	OPERATOR_NUM
			PSHX
			LDX	#D_OPERATOR_MAP
			ABX
			LDAB	,X
			PULX
			CMPA	#$D7
			BCS	1F
			LDAA	#$05
			BRA	2F
1			LDAA	#$0D
2			MUL
			ABX
			RTS

;-------

F_B6A8			LDAB	M7789
			CLRA
1			SUBB	#$03
			BMI	2F
			INCA
			BRA	1B
2			ADDB	#$03
			CMPA	#$04
			BCS	3F
			CLRA
3			RTS

;-------

F_B6BB			LDAA	M778C
			LDAB	M7788
			BEQ	1F
			CMPB	#$01
			BEQ	2F
			JMP	5F
1			LDAB	M7774

			JSR	JMPOFF1
			FCB	C_B742 - *
			FCB	$01
			FCB	C_B773 - *
			FCB	$05
			FCB	C_B752 - *
			FCB	$07
			FCB	C_B773 - *
			FCB	$08
			FCB	C_B752 - *
			FCB	$09
			FCB	C_B773 - *
			FCB	$1F
			FCB	C_B76A - *
			FCB	$20
			FCB	C_B773 - *
			FCB	$29
			FCB	C_B752 - *
			FCB	$33
			FCB	C_B762 - *
			FCB	$34
			FCB	C_B773 - *
			FCB	$35
			FCB	C_B762 - *
			FCB	$36
			FCB	C_B773 - *
			FCB	$3C
			FCB	C_B752 - *
			FCB	$3D
			FCB	C_B773 - *
			FCB	$00

2			LDAB	M7774
			JSR	JMPOFF1
			FCB	C_B773 - *
			FCB	$03
			FCB	C_B706 - *
			FCB	$04
			FCB	C_B711 - *
			FCB	$05
			FCB	C_B773 - *
			FCB	$07
			FCB	C_B752 - *
			FCB	$08
			FCB	C_B773 - *
			FCB	$09
			FCB	C_B752 - *
			FCB	$0A
			FCB	C_B762 - *
			FCB	$0B
			FCB	C_B773 - *
			FCB	$00

C_B706			LDAB	M7789
			BEQ	C_B742
			CMPB	#$02
			BCS	C_B75A
			BRA	C_B752

C_B711			LDAB	M7789
			BEQ	C_B742
			CMPB	#$03
			BEQ	C_B742
			CMPB	#$06
			BEQ	C_B742
			CMPB	#$09
			BEQ	C_B742
			BRA	C_B74A

5			LDAB	M7774
			JSR	JMPOFF1
			FCB	C_B773 - *
			FCB	$1B
			FCB	C_B73A - *
			FCB	$1C
			FCB	C_B732 - *
			FCB	$1D
			FCB	C_B773 - *
			FCB	$00

C_B732			CMPA	#$01
			BLS	C_B770
			LDAA	#$01
			BRA	C_B770

C_B73A			CMPA	#$03
			BLS	C_B770
			LDAA	#$03
			BRA	C_B770

C_B742			CMPA	#$04
			BLS	C_B770
			LDAA	#$04
			BRA	C_B770

C_B74A			CMPA	#$05
			BLS	C_B770
			LDAA	#$05
			BRA	C_B770

C_B752			CMPA	#$07
			BLS	C_B770
			LDAA	#$07
			BRA	C_B770

C_B75A			CMPA	#$08
			BLS	C_B770
			LDAA	#$08
			BRA	C_B770

C_B762			CMPA	#$09
			BLS	C_B770
			LDAA	#$09
			BRA	C_B770

C_B76A			CMPA	#$0F
			BLS	C_B770
			LDAA	#$0F
C_B770			STAA	M778C

C_B773			RTS

;-------

F_B774			AIM	#~ECMI,TCSR3
			LDX	#VCED
			STX	SPTR
			LDX	#M6A19
			JSR	LO_CALL_06
			BRA	5F

F_B784			JSR	MIDI_SEND_PGM_CNG

F_B787			CMPB	M7773
			BNE	F_B796
			TST	VOICE_EDITED
			BNE	F_B796
			JSR	F_E178
			BRA	7F

F_B796			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_19
			CLR	VOICE_COMPARE
5			JSR	GET_PVOICE_PTR

F_B7A2			STX	SPTR
			AIM	#~ECMI,TCSR3
			LDX	#VCED
			JSR	LOAD_VOICE_X
			JSR	LO_CALL_08
			JSR	F_E178
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_91FE
			OIM	#ECMI,TCSR3
7			RTS

;-------

F_B7C3			PSHB
			ADDB	#$20
			JSR	MIDI_SEND_PGM_CNG
			PULB
			CMPB	M7779
			BNE	F_B7D6
			TST	PFM_EDITED
			BNE	F_B7D6
			BRA	1F			; could be RTS

;-------

F_B7D6			AIM	#~ECMI,TCSR3
			STAB	M7779
			CLR	PFM_EDITED
			JSR	F_AEFF
			STX	SPTR
			AIM	#~ECMI,TCSR3
			LDX	#PFM_EDIT_BUF
			JSR	LO_CALL_05

;-------	fallthrough

HI_CALL_13		JSR	SEND_SYSEX_PCED
			JSR	SET_NAME_RANGE
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_C7C2
			OIM	#ECMI,TCSR3
			BSR	F_B805
1			RTS

;-------

F_B805			AIM	#~ECMI,TCSR3
			BSR	F_B820
			JSR	LO_CALL_08
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE
			JSR	HI_CALL_15
			JSR	HI_CALL_16
			OIM	#ECMI,TCSR3
			RTS

;-------

F_B820			CLRB
1			PSHB
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			LDAB	$02,X			; A <- voice number LSB
			JSR	GET_PVOICE_PTR_B
			STX	SPTR
			PULA
			PSHA
			JSR	GET_VOICE_PTR_A
			JSR	LOAD_VOICE_X
			PULB
			INCB
			CMPB	#$08
			BNE	1B
			RTS

;-------

F_B83F			LDAB	M7795
			STAB	M7773
			CLR	VOICE_EDITED
			CLR	VOICE_COMPARE
			LDX	#VCED
			STX	SPTR
			JSR	GET_PVOICE_PTR
			JSR	LO_CALL_06
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE
			JMP	F_E113			; RTS

;-------

F_B862			LDAA	M777F
			CMPA	#$20
			BCS	1F
			CLRA
1			STAA	SPTR
			LDAA	#$1F
2			STAA	DPTR
			DECB
			TST	M7795
			BMI	3F
			LDAA	M7795
			JSR	F_8D0C
			BRA	4F
3			LDAA	SPTR
4			STAA	M7795
			RTS

;-------

F_B884			LDAA	M777A
			STAA	SPTR
			LDAA	#$17
			BRA	2B

;-------

F_B88D			LDAB	M7795
			STAB	M7779
			CLR	PFM_EDITED
			LDX	#PFM_EDIT_BUF
			STX	SPTR
			JSR	F_AEFF
			JSR	LO_CALL_07
			JSR	HI_CALL_00
			JMP	HI_CALL_01

;-------

COPY_OPERATOR_EG	LDAB	M7794			; DPTR <- offset to operator M7794
			JSR	GET_OPERATOR_PTR_B	; -
			STX	DPTR			; -
			LDAB	M777C			; SPTR <- offset to operator M777C
			JSR	GET_OPERATOR_PTR_B	; -
			STX	SPTR			; -

			LDAB	#$07			; copy 7 bytes from SPTR to DPTR
			JSR	MEMCPY			;

			LDAB	#$01
			STAB	VOICE_EDITED
			LDX	#F_9E95
			JSR	F_92DB
			LDX	#F_9EB9
			JSR	F_92DB
			LDX	#F_9ECC
			JSR	F_92DB
			LDX	#F_9EEC
			JSR	F_92DB
			LDX	#F_9F00
			JSR	F_92DB
			JSR	F_E114			; no-op
			RTS

;-------

F_B8E3			DECB
			TST	>M0059
			BNE	1F
			LDAA	#$03
			STAA	DPTR
			LDAA	M777C
			JSR	F_8D0C
			STAA	M777C
			BRA	4F
1			TST	M7794
			BMI	2F
			LDAA	#$03
			STAA	DPTR
			LDAA	M7794
			JSR	F_8D0C
			BRA	3F
2			CLRA
3			STAA	M7794
4			RTS

;-------

F_B90E			AIM	#~ECMI,TCSR3
			LDAB	#110
			LDX	#VCED
			STX	SPTR
			LDX	#VCED + 110
			JSR	MEMCPYX
			JSR	LO_CALL_08
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_91FE
			JSR	F_C7C2
			OIM	#ECMI,TCSR3
			RTS

;-------

F_B931			TST	M7788
			BEQ	1F
			JMP	C_BA42

1			TBA
			LDAB	M7774
			JSR	JMPOFF1
			FCB	C_B971 - *
			FCB	$02
			FCB	C_B97B - *
			FCB	$04
			FCB	C_B974 - *
			FCB	$05
			FCB	C_B971 - *
			FCB	$07
			FCB	C_B9B7 - *
			FCB	$08
			FCB	C_B971 - *
			FCB	$09
			FCB	C_B9BE - *
			FCB	$0A
			FCB	C_B9BB - *
			FCB	$0B
			FCB	C_B971 - *
			FCB	$15
			FCB	C_B9C2 - *
			FCB	$16
			FCB	C_B971 - *
			FCB	$18
			FCB	C_B9C9 - *
			FCB	$19
			FCB	C_B9D0 - *
			FCB	$1A
			FCB	C_B9DE - *
			FCB	$1B
			FCB	C_B9D0 - *
			FCB	$1C
			FCB	C_B9F0 - *
			FCB	$1D
			FCB	C_B9F7 - *
			FCB	$1F
			FCB	C_B971 - *
			FCB	$3C
			FCB	C_BA10 - *
			FCB	$3D
			FCB	C_BA19 - *
			FCB	$3E
			FCB	C_B971 - *
			FCB	$46
			FCB	2F - *
			FCB	$47
			FCB	C_B971 - *
			FCB	$00

2			JMP	C_BBB1

C_B971			TAB
			CLC
			RTS

C_B974			PSHB
			LDAB	#$01
			STAB	M778C
			PULB
C_B97B			SUBB	#$02
6			CMPA	#$01
			BNE	9F
			LDX	#D_BBE4
			ABX
			LDAB	,X
			STAB	M778D
			STAA	M7788
			STAA	M00A4
			CLR	M7789
			LDAB	M7774
			CMPB	#$04
			BNE	8F
			JSR	GET_VOICE_PTR
			TST	$66,X
			BNE	7F
			INC	M7789
7			LDAB	M7774
8			JSR	F_B1DD
			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_15
			JSR	HI_CALL_16
			OIM	#ECMI,TCSR3
9			SEC
			RTS

C_B9B7			LDAB	#$03
			BRA	6B

C_B9BB			CLR	M778C
C_B9BE			SUBB	#$05
			BRA	6B

C_B9C2			CLR	MENU_VALUE
			LDAB	#$06
			BRA	6B

C_B9C9			CLR	MENU_VALUE
			LDAB	#$07
			BRA	6B

C_B9D0			SUBB	#$11
			PSHB
			PSHA
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			PULA
			PULB
			BRA	6B

C_B9DE			SUBB	#$11
			CMPA	#$01
			BNE	9B
			STAA	M7788
			PSHB
			JSR	F_B90E
			PULB
			LDAA	#$01
			BRA	6B

C_B9F0			CLR	M778F
			SUBB	#$11
			BRA	6B

C_B9F7			TST	>M00A5
			BEQ	19F
			CLR	>M00A5
			CMPA	#$01
			BNE	20F
			JSR	F_C274
			BRA	20F
19			CMPA	#$01
			BNE	20F
			STAA	M00A5
20			SEC
			RTS

C_BA10			CMPA	#$01
			BNE	9B
			JSR	F_C259
			BRA	9B

C_BA19			TST	>M00A5
			BEQ	22F
			CLR	>M00A5
			CMPA	#$01
			BNE	9B
			JSR	LO_CALL_04
			BRA	9B
22			CMPA	#$01
			BEQ	24F
			LDAA	MENU_VALUE
			INCA
			CMPA	#$05
			BCS	23F
			CLRA
23			STAA	MENU_VALUE
			JMP	9B
24			STAA	M00A5
			JMP	9B

C_BA42			TBA
			CLR	>M00A4
			LDAB	M7774

			JSR	JMPOFF1
			FCB	C_BA5C - *
			FCB	$15
			FCB	C_BA5F - *
			FCB	$16
			FCB	C_BA5C - *
			FCB	$18
			FCB	C_BADD - *
			FCB	$19
			FCB	C_BA5C - *
			FCB	$1B
			FCB	C_BB12 - *
			FCB	$1C
			FCB	C_BB34 - *
			FCB	$1D
			FCB	C_BA5C - *
			FCB	$00

C_BA5C			TAB
			CLC
			RTS

C_BA5F			LDAB	M7789
			CMPB	#$08
			BEQ	7F
			BCS	C_BA5C
			CMPB	#$0D
			BCC	C_BA5C
			CMPB	#$09
			BEQ	6F
			CMPB	#$0A
			BNE	3F
			CMPA	#$01
			BEQ	2F
			LDAA	MENU_VALUE
			INCA
			CMPA	#$05
			BCS	1F
			CLRA
1			STAA	MENU_VALUE
			BRA	10F
2			JSR	SETUP_TRANSMIT
			BRA	10F
3			CMPB	#$0B
			BNE	5F
			TST	>M00A5
			BEQ	4F
			CLR	>M00A5
			CMPA	#$01
			BNE	10F
			JSR	INIT_PROG_CHANGES
			INC	M7789
			JMP	11F
4			CMPA	#$01
			BNE	10F
			STAA	M00A5
			BRA	10F
5			LDAB	M7788
			CMPB	#$02
			BEQ	C_BA5C
			CMPA	#$01
			BNE	10F
			JMP	C_BB7A
6			CMPA	#$01
			BNE	10F
			JSR	SEND_SYSEX_PMEM
			BRA	10F

7			CMPA	#$01
			BEQ	9F
			LDAA	MENU_VALUE
			INCA
			CMPA	#$05
			BCS	8F
			CLRA
8			STAA	MENU_VALUE
			BRA	10F
9			JSR	F_E115			; no-op
			JSR	VOICE_TRANSMIT
10			SEC
			RTS

;-------

C_BADD			CMPA	#$01
			BNE	1F
			LDAB	#$01
			STAB	XROM
			JSR	XROM_CALL		; invoke LO_CALL_01 (from low bank)
			BRA	4F
1			LDAA	M7789
			BEQ	3F
			CMPA	#$08
			BCS	4F
			LDAA	MENU_VALUE
			INCA
			CMPA	#$05
			BCS	2F
			CLRA
2			STAA	MENU_VALUE
			BRA	4F
3			LDAA	MENU_VALUE
			INCA
			ANDA	#$01
			STAA	MENU_VALUE
			LDX	M7781
			JSR	F_E10C			; RTS
4			SEC
			RTS

;-------

C_BB12			LDAB	M7788
			CMPB	#$01
			BEQ	1F
			JMP	C_BA5C
1			CMPA	#$01
			BEQ	2F
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			BRA	10F
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			JSR	F_ED75
			CLRB
			BRA	7F

C_BB34			LDAB	M7789
			BEQ	5F
			CMPB	#$02
			BEQ	5F
			LDAB	M7788
			CMPB	#$02
			BEQ	4F
			CMPA	#$01
			BNE	10F
			LDAB	#$0A
			BRA	7F
4			CMPA	#$01
			BNE	9F
			JSR	F_C345
			JSR	HI_CALL_03
			LDAA	#$01
			STAA	M7788
			DEC	M7789
			CLR	M778A
			BRA	11F
5			LDAB	M7788
			CMPB	#$01
			BEQ	6F
			JMP	C_BA5C
6			CMPA	#$01
			BNE	10F
			TST	M7789
			BNE	C_BB7A
			LDAB	#$0B
			BRA	7F

C_BB7A			LDAB	#$7F
7			STAB	M778E
			LDAA	#$01
			STAA	M00A4
			LDAA	#$02
			STAA	M7788
			CLR	M778A
			CLR	M778C
			LDAB	M7774
			JSR	F_B1DD
8			SEC
			RTS
9			LDAA	#$01
			STAA	M7788
			CLR	M778A
			BRA	11F
10			CLR	M7788
			CLR	M7789
11			CLR	M778C
			LDAB	M7774
			JSR	F_B1DD
			BRA	8B

;-------

C_BBB1			CMPA	#$01
			BNE	F_BBBC
			LDAB	#$02
			STAB	XROM
			JSR	XROM_CALL		; invoke LO_CALL_02 (from low bank)

;-------	fallthrough

F_BBBC			CLR	>M00A6
			LDX	#S_GOOD_MORNING
			STX	SPTR
			LDAB	#16
			LDX	#GREETING
			JSR	MEMCPYX
			LDAA	#$01
			STAA	M00CC
			LDAB	M7779
			JSR	F_B7D6
			JSR	F_B09A
			LDAB	M7773
			JSR	MIDI_SEND_PGM_CNG
			JSR	F_B796
			SEC
			RTS

D_BBE4			FCB	$05,$03,$0B,$05,$01,$0F,$0C,$0A
			FCB	$03,$02,$0B,$03

;-------
;
; send a subset of the system set via SysEx
;
; 0 -> PC + EF + MC
; 1 -> SY
; 2 -> PC
; 3 -> EF
; 4 -> MC
;
SETUP_TRANSMIT		LDAB	MENU_VALUE
			CMPB	#$05
			BCS	1F
			CLRB
1			PSHB
			ASLB
			LDX	#D_BC0E
			ABX
			LDX	,X
			JSR	,X
			PULB
			TSTB
			BEQ	2F
			CMPB	#$04
			BEQ	2F
			JSR	DELAY_30_x_4500
2			RTS

D_BC0E			FDB	SEND_SYSEX_S1_S2_E0_E1
			FDB	SEND_SYSEX_SYS0
			FDB	SEND_SYSEX_SYS1
			FDB	SEND_SYSEX_SYS2
			FDB	SEND_SYSEX_E0_E1

;-------

VOICE_TRANSMIT		TST	MENU_VALUE
			BEQ	1F
			LDAB	#3
			STAB	XROM
			JSR	XROM_CALL		; invoke SEND_PRESET_BANK (from low bank)
			BRA	2F
1			JSR	SEND_USER_BANK
2			RTS

;-------

F_BC2A			LDX	M7781
			JSR	F_E0E9
			TST	VOICE_COMPARE
			BEQ	1F
			LDAA	M7772
			CMPA	#$01
			BNE	1F
			JMP	31F
1			PSHB
			LDAB	M7772
			CMPB	#$05
			BNE	6F
			LDAB	M7774
			CMPB	#$29
			BNE	3F
			LDX	#PFM_EDIT_BUF
			CLRA
			LDAB	#12
2			ADDA	,X			; maximum notes
			ABX
			CPX	#PFM_EDIT_INST_END
			BNE	2B
			CMPA	#$08
			BHI	5F
			BCS	8F
			PULB
			PSHB
			CMPB	#$02
			BEQ	8F
			BRA	5F
3			CMPB	#$2A
			BCS	8F
			CMPB	#$34
			BCC	8F
			CMPB	#$33
			BNE	4F
			LDAB	M778C
			CMPB	#$02
			BCS	8F
4			LDAA	M7786
			LDAB	#12
			MUL
			LDX	#PFM_EDIT_BUF
			ABX
			TST	,X			; maxmimum notes
			BNE	8F
5			JMP	32F
6			CMPB	#$01
			BNE	8F
			LDAB	M7787
			CMPB	#$0B
			BNE	7F
			LDAB	M778C
			CMPB	#$02
			BCS	9F
			BRA	8F
7			CMPB	#$59
			BNE	8F
			LDAB	M778C
			CMPB	#$02
			BCC	8F
			JMP	33F
8			CLRA
			BRA	13F
9			LDAB	OPERATOR_NUM		; get per-op ACED pointer
			LDAA	#5			; -
			JSR	GET_OP_PTR_BA		; -
			LDAA	$57,X			; get fixed frequency flag
			PULB
			PSHA
			LDX	M7781
			DECB
			BEQ	14F
			LDAA	,X
			BNE	10F
			JMP	32F
10			CMPA	#$05
			BCS	11F
			JMP	25F
11			LDAB	OPERATOR_NUM		; get per-op ACED pointer
			LDAA	#5			; -
			JSR	GET_OP_PTR_BA		; -
			LDAA	$59,X			; get freq range fine (ratio)
			CMPA	#$08
			BCS	12F
			LDAA	#$07
			STAA	$59,X
12			LDX	M7781
			JMP	24F
13			PULB
			PSHA
			LDX	M7781
			DECB
			BNE	21F
14			LDAB	M7774
			CMPB	#$1C
			BEQ	15F
			CMPB	#$2A
			BNE	16F
			LDAA	,X
			CMPA	M7783
			BNE	18F
			PULB
			CLRA
			JMP	F_BE61
15			LDAB	M7788
			CMPB	#$02
			BNE	16F
			TST	M778C
			BEQ	16F
			LDAA	,X
			CMPA	M7783
			BNE	18F
			DEX
			LDAA	,X
			CMPA	#$6C
			BCC	17F
			INCA
			STAA	,X
			INX
			CLRA
			PULB
			JMP	F_BE61
16			LDAA	,X
			CMPA	M7783
			BNE	18F
17			JMP	32F
18			PULB
			TSTB
			BEQ	20F
			ADDA	#$04
			CMPA	M7783
			BLS	19F
			JMP	31F
19			JMP	F_BE61
20			INCA
			JMP	F_BE61
21			LDAB	M7774
			CMPB	#$1C
			BEQ	22F
			CMPB	#$2A
			BNE	24F
			LDAA	,X
			BNE	25F
			PULB
			LDAA	M7783
			JMP	F_BE61
22			LDAB	M7788
			CMPB	#$02
			BNE	24F
			TST	M778C
			BEQ	23F
			LDAA	,X
			BNE	25F
			DEX
			LDAA	,X
			CMPA	#$0D
			BLS	32F
			DECA
			STAA	,X
			INX
			LDAA	M7783
			PULB
			JMP	F_BE61
23			LDAA	,X
			CMPA	#$0D
			BLS	32F
			BRA	25F
24			LDAA	,X
			BEQ	32F
25			PULB
			TSTB
			BEQ	26F
			SUBA	#$04
			BMI	31F
			JMP	F_BE61
26			DECA
			LDAB	M7774
			CMPB	#$35
			BEQ	29F
			CMPB	#$0A
			BEQ	27F
			CMPB	#$07
			BNE	28F
			LDAB	M7788
			CMPB	#$01
			BNE	28F
			LDAB	M7789
			CMPB	#$04
			BNE	28F
			LDAB	M778C
			CMPB	#$04
			BCC	28F
			TSTA
			BEQ	31F
			JMP	F_BE61
27			LDAB	M7788
			CMPB	#$01
			BNE	28F
			LDAB	M7789
			CMPB	#$0F
			BEQ	29F
28			CPX	#MICROTUNE_FULL_END
			BCS	30F
			CPX	#GREETING + $10
			BCC	30F
29			CMPA	#$20
			BCS	31F
30			JMP	F_BE61
31			RTS
32			PULA
			RTS
33			PULB
			LDX	M7781
			DECB
			BNE	40F
			LDAA	,X
			CMPA	M7783
			BEQ	34F
			INCA
			BRA	39F
34			PSHX
			DEX
			DEX
			LDAA	,X
			BEQ	48F
			PSHA
			JSR	GET_OPERATOR_PTR
			LDAA	$0B,X			; coarse frequency?
			CMPA	#$3F
			BCC	47F
			PULB
			TSTB
			BEQ	35F
			ADDA	#$04
			CMPA	#$3F
			BHI	48F
			BRA	36F
35			INCA
36			STAA	$0B,X
			PULX
			CMPA	#$04
			BCC	37F
			LDAA	#$07
			BRA	38F
37			LDAA	#$0F
38			STAA	M7783
			CLRA
39			JMP	F_BE61
40			LDAA	,X
			BEQ	41F
			DECA
			BRA	46F
41			PSHX
			DEX
			DEX
			LDAA	,X
			BEQ	48F
			PSHA
			JSR	GET_OPERATOR_PTR
			LDAA	$0B,X			; coarse frequency?
			BEQ	47F
			PULB
			TSTB
			BEQ	42F
			SUBA	#$04
			BMI	48F
			BRA	43F
42			DECA
43			STAA	$0B,X
			PULX
			CMPA	#$04
			BCC	44F
			LDAA	#$07
			BRA	45F
44			LDAA	#$0F
45			STAA	M7783
46			BRA	F_BE61
47			PULA
48			PULX
			RTS

;-------

F_BE61			JMP	10F
			LDAB	M7774			; unreachable code
			CMPB	#$15
			BNE	1F
			LDAB	M7788
			CMPB	#$01
			BNE	10F
			LDAB	M7789
			CMPB	#$02
			BCS	2F
			BRA	10F
1			CMPB	#$29
			BEQ	2F
			CMPB	#$2E
			BCC	10F
			CMPB	#$2B
			BCS	10F
2			PSHX
			LDX	#M7CE3
			LDAB	#$08
3			TIM	#%00000010,$01,X
			BNE	9F
			INX
			INX
			DECB
			BNE	3B
			LDAB	M7772
			ANDB	#$04
			BEQ	4F
			LDAB	#$08
			BRA	5F
4			LDAB	#$01
5			LDX	#M7F39
6			PSHB
			LDAB	M006C
7			TIM	#%00000010,$01,X
			BNE	8F
			INX
			INX
			DECB
			BNE	7B
			PULB
			DECB
			BNE	6B
			PULX
			BRA	10F
8			PULB
9			PULX
			BRA	2F			; end of unreachable code

10			STAA	,X
			JSR	F_B563
			LDAB	M7788
			BEQ	1F
			JMP	C_BF4F

1			LDAB	M7774
			JSR	JMPOFF1
			FCB	5F - *
			FCB	$01
			FCB	6F - *
			FCB	$02
			FCB	2F - *
			FCB	$05
			FCB	3F - *
			FCB	$06
			FCB	4F - *
			FCB	$07
			FCB	2F - *
			FCB	$08
			FCB	8F - *
			FCB	$09
			FCB	2F - *
			FCB	$14
			FCB	7F - *
			FCB	$15
			FCB	2F - *
			FCB	$16
			FCB	13F - *
			FCB	$18
			FCB	2F - *
			FCB	$19
			FCB	9F - *
			FCB	$1D
			FCB	13F - *
			FCB	$20
			FCB	2F - *
			FCB	$28
			FCB	11F - *
			FCB	$29
			FCB	12F - *
			FCB	$2A
			FCB	14F - *
			FCB	$2B
			FCB	15F - *
			FCB	$2C
			FCB	16F - *
			FCB	$2E
			FCB	10F - *
			FCB	$2F
			FCB	17F - *
			FCB	$30
			FCB	18F - *
			FCB	$31
			FCB	19F - *
			FCB	$32
			FCB	20F - *
			FCB	$33
			FCB	21F - *
			FCB	$34
			FCB	22F - *
			FCB	$35
			FCB	10F - *
			FCB	$36
			FCB	2F - *
			FCB	$3C
			FCB	13F - *
			FCB	$3F
			FCB	2F - *
			FCB	$00

2			JMP	C_C0ED
3			JMP	C_C05A
4			JMP	C_C002
5			JMP	C_C177
6			JMP	C_C187
7			JMP	C_C1E0
8			JMP	C_C1C8
9			JMP	C_C207
10			JMP	C_C16F
11			JMP	C_C16C
12			JMP	C_C169
13			JMP	C_C0E4
14			JMP	C_C0EF
15			JMP	C_C0FE
16			JMP	C_C125
17			JMP	C_C12D
18			JMP	C_C135
19			JMP	C_C146
20			JMP	C_C14B
21			JMP	C_C150
22			JMP	C_C155

C_BF4F			LDAB	M7774
			JSR	JMPOFF1
			FCB	1F - *
			FCB	$02
			FCB	3F - *
			FCB	$03
			FCB	C_BFB7 - *
			FCB	$04
			FCB	C_C015 - *
			FCB	$05
			FCB	1F - *
			FCB	$07
			FCB	6F - *
			FCB	$08
			FCB	1F - *
			FCB	$09
			FCB	4F - *
			FCB	$0A
			FCB	5F - *
			FCB	$0B
			FCB	1F - *
			FCB	$15
			FCB	2F - *
			FCB	$16
			FCB	1F - *
			FCB	$19
			FCB	C_BF89 - *
			FCB	$1A
			FCB	C_BF96 - *
			FCB	$1B
			FCB	C_BFA6 - *
			FCB	$1C
			FCB	C_BFB1 - *
			FCB	$1D
			FCB	1F - *
			FCB	$00

1			JMP	C_C0ED
2			JMP	C_C1EE
3			JMP	C_C18F
4			JMP	C_C09C
5			JMP	C_C0B1
6			JMP	C_C073

C_BF89			LDAB	M7789
			CMPB	#$01
			BNE	8F
			JMP	C_C207
8			JMP	C_C0E4

C_BF96			JSR	CALC_EF2R_VALUE
			LDAB	M7789
			CMPB	#$02
			BNE	10F
			JMP	C_C0E4
10			JMP	C_C207

C_BFA6			LDAA	M776B
			ANDA	#%11110111
			STAA	M776B
			JMP	C_C207

C_BFB1			JSR	HI_CALL_03
			JMP	C_C0E4

C_BFB7			LDAB	M7789
			BNE	14F
			TST	M778C
			BNE	17F
			LDX	#F_9D91
			JSR	F_92E3
			JMP	C_C1D8
14			CMPB	#$01
			BNE	16F
			LDAB	M778C
			BEQ	15F
			CMPB	#$05
			BCC	17F
			LDX	#F_9EB9
			JSR	F_92DB
			JMP	C_C1D8
15			LDX	#F_9D91
			JSR	F_92E3
			JMP	C_C1D8
16			LDAB	M778C
			CMPB	#$04
			BCS	18F
17			JMP	C_C0E4
18			LDX	#F_9D68
			JSR	F_92DB
			LDX	#F_9FEC
			JSR	F_92DB
			JMP	C_C1D8

C_C002			LDAB	M778C
			CMPB	#$04
			BCS	20F
			JMP	C_C0E4
20			LDX	#F_9DD7
			JSR	F_92DB
			JMP	C_C1D8

C_C015			LDAB	M7789
			BEQ	22F
			CMPB	#$03
			BEQ	22F
			CMPB	#$06
			BEQ	22F
			CMPB	#$09
			BEQ	22F
			LDAB	M778C
			CMPB	#$02
			BCS	24F
			BRA	23F
22			TST	M778C
			BEQ	24F
23			JMP	C_C0E4
24			LDAB	M7787
			CMPB	#$0B
			BNE	25F
			ANDA	#$3C
			BNE	25F
			LDAB	OPERATOR_NUM		; get per-op ACED pointer
			LDAA	#5			; -
			JSR	GET_OP_PTR_BA		; -
			LDAA	#$07
			CMPA	$59,X			; compare to freq range fine (ratio)
			BCC	25F
			STAA	$59,X
25			LDX	#F_9E95
			JSR	F_92DB
			BRA	27F

C_C05A			LDAB	M778C
			CMPB	#$04
			BCS	27F
			JMP	C_C0E4

27			LDX	#F_9DD7
			JSR	F_92DB
			LDX	#F_9E58
			JSR	F_92DB
			JMP	C_C1BE

C_C073			LDAB	M778C
			CMPB	#$04
			BCS	1F
			JMP	C_C0E4
1			LDAB	M7789
			CMPB	#$06
			BCC	C_C0ED

			JSR	JMPOFFB
			FCB	2F - *
			FCB	3F - *
			FCB	4F - *
			FCB	5F - *
			FCB	4F - *
			FCB	6F - *

2			JMP	C_C1AF
3			JMP	C_C1B4
4			JMP	C_C1B9
5			JMP	C_C1BE
6			JMP	C_C1C3

;-------

C_C09C			LDAB	M778C
			CMPB	#$04
			BCS	1F
			JMP	C_C0E4
1			TST	M7789
			BEQ	2F
			JMP	C_C1D2
2			JMP	C_C1AF

;-------

C_C0B1			LDAB	M7789
			JSR	JMPOFF1
			FCB	3F - *
			FCB	$01
			FCB	4F - *
			FCB	$02
			FCB	2F - *
			FCB	$03
			FCB	5F - *
			FCB	$04
			FCB	6F - *
			FCB	$05
			FCB	C_C18F - *
			FCB	$0B
			FCB	4F - *
			FCB	$0C
			FCB	6F - *
			FCB	$0D
			FCB	7F - *
			FCB	$0E
			FCB	1F - *
			FCB	$0F
			FCB	2F - *
			FCB	$10
			FCB	C_C0ED - *
			FCB	$00

1			JMP	C_C1C3
2			JMP	C_C1D8
3			JMP	C_C207
4			JMP	C_C229
5			JMP	C_C221
6			JMP	C_C237
7			JMP	C_C1E6

;-------

C_C0E4			LDX	M7781
			JSR	F_E10C			; RTS
			SEC
			BRA	3F

C_C0ED			CLC
3			RTS

C_C0EF			LDAB	M778C
			STAB	M0073
			LDX	M7781
			LDAB	,X
			JSR	F_D06A
			BRA	C_C16F

C_C0FE			TST	PFM_EDIT_ASSIGN
			BEQ	C_C10E
			JSR	F_C7C2
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			BRA	7F

C_C10E			LDAB	M778C
			JSR	F_D099
			LDAB	M778C
			JSR	F_C832
			AIM	#~EOCI1,TCSR1
			JSR	F_995A
7			OIM	#EOCI1,TCSR1
			BRA	C_C16F

C_C125			LDAB	M778C
			JSR	F_D099
			BRA	C_C16F

C_C12D			LDX	#F_A01B
			JSR	F_92E3
			BRA	C_C16F

C_C135			LDAB	M778C
			JSR	CALC_INST_VOLUME
			AIM	#~ECMI,TCSR3
			JSR	F_EC17
			OIM	#ECMI,TCSR3
			BRA	C_C16F

C_C146			JSR	F_95E5
			BRA	C_C16F

C_C14B			JSR	F_B805
			BRA	C_C16F

C_C150			JSR	HI_CALL_03
			BRA	C_C16F

C_C155			JSR	HI_CALL_00
			JSR	HI_CALL_01
			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_15
			JSR	HI_CALL_16
			OIM	#ECMI,TCSR3
			BRA	C_C16F

C_C169			JSR	F_C7C2

C_C16C			JSR	F_B805

C_C16F			LDAA	#$01
			STAA	PFM_EDITED
			JMP	C_C0E4

C_C177			TST	M778C
			BNE	1F
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			BRA	C_C187
1			JMP	C_C0E4

C_C187			LDX	#F_9A41
			JSR	F_92E3
			BRA	C_C1D2

C_C18F			JSR	F_9A87
			LDX	#F_9B02
			JSR	F_92E3
			LDX	#F_9C35
			JSR	F_92E3
			LDX	#F_9AC2
			JSR	F_92E3
			JSR	F_9C76
			LDX	#F_9D12
			JSR	F_92E3
			BRA	C_C1D8

C_C1AF			LDX	#F_9E95
			BRA	1F

C_C1B4			LDX	#F_9EB9
			BRA	1F

C_C1B9			LDX	#F_9EEC
			BRA	1F

C_C1BE			LDX	#F_9ECC
			BRA	1F

C_C1C3			LDX	#F_9E6D
			BRA	1F

C_C1C8			LDAB	M778C
			CMPB	#$04
			BCS	C_C1D2
			JMP	C_C0E4

C_C1D2			LDX	#F_9F00
1			JSR	F_92DB

C_C1D8			LDAA	#$01
			STAA	VOICE_EDITED
3			JMP	C_C0E4

C_C1E0			JSR	HI_CALL_18
			JMP	C_C0E4

C_C1E6			LDX	#F_A01B
			JSR	F_92E3
			BRA	C_C1D8

C_C1EE			LDAB	M7789
			BNE	7F
			JSR	F_E6BD
			BRA	C_C207

7			CMPB	#$01
			BEQ	C_C207
			CMPB	#$07
			BHI	3B
			BEQ	C_C207
			JSR	F_E6BD
			BRA	3B

C_C207			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAB	M7774
			CMPB	#$0A
			BNE	3B
			TST	M7789
			BNE	3B
			JSR	F_E0F3
			BRA	C_C1D8

C_C221			LDX	#F_A049
			JSR	F_92E3
			BRA	C_C1D8

C_C229			LDX	#F_A0D1
			JSR	F_92E3
			LDX	#F_A0F1
			JSR	F_92E3
			BRA	C_C1D8

C_C237			LDX	#F_A100
			JSR	F_92E3
			LDX	#F_A110
			JSR	F_92E3
			BRA	C_C1D8

;-------

INIT_PROG_CHANGES	CLRB
			LDX	#PROG_CHANGES
1			STAB	,X
			INCB
			INX
			CPX	#PROG_CHANGES_END
			BNE	1B
			RTS

;-------
;
; read three of the switches (used at power on)
;
READ_SW_123		LDAA	PORT2
			COMA
			ANDA	#SW3|SW2|SW1
			RTS

;-------

F_C259			LDAB	M778C
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			LDAB	$02,X			; voice number
			PSHB
			JSR	F_B164
			JSR	F_AFD9
			PULB
			JSR	F_B787
			JSR	F_B084
			RTS

;-------

F_C274			CMPB	#$1E
			BEQ	2F
			JSR	HI_CALL_1A
			JSR	F_E111			; no-op
			CLRA
			STAA	OPERATOR_NUM
1			JSR	F_B082
			RTS
2			JSR	F_C291
			JSR	F_E112			; no-op
			JSR	F_E10F			; no-op
			BRA	1B

;-------

F_C291			LDAA	M7780
			STAA	M7773
			CLR	VOICE_COMPARE
			LDAA	#$01
			STAA	VOICE_EDITED
			LDD	#$0101
			STD	OP_ENABLE
			STD	OP_ENABLE + 2
			TST	SYS_CMBIN
			BNE	1F
			LDAB	#$01
			STAB	SYS_CMBIN
			BSR	F_C2BC
			CLR	SYS_CMBIN
			BRA	2F
1			BSR	F_C2BC
2			RTS

;-------

F_C2BC			LDX	#M6A19
			JMP	F_B7A2

;-------

HI_CALL_1A		LDAB	M7773
			JSR	HI_CALL_19
			CLR	VOICE_COMPARE
			LDAA	#$01
			STAA	VOICE_EDITED
			LDD	#$0101
			STD	OP_ENABLE
			STD	OP_ENABLE + 2
			LDX	#INIT_VOICE
			TST	SYS_CMBIN
			BNE	1F
			LDAB	#$01
			STAB	SYS_CMBIN
			JSR	F_B7A2
			CLR	SYS_CMBIN
			BRA	2F
1			JSR	F_B7A2
2			RTS

;-------

HI_CALL_19		TST	VOICE_EDITED
			BEQ	2F
			LDAA	M7773
			STAA	M7780
			STAB	M7773
			CLR	VOICE_EDITED
			TST	VOICE_COMPARE
			BNE	1F
			LDX	#VCED
			STX	SPTR
			LDX	#M6A19
			JSR	LO_CALL_06
1			RTS
2			STAB	M7773
			BRA	1B

;-------

HI_CALL_1B		LDAB	M7773
			JSR	HI_CALL_19
			CLR	VOICE_COMPARE
			JSR	GET_PVOICE_PTR
			STX	SPTR
			LDX	#VCED
			JSR	LOAD_VOICE_X
			JSR	LO_CALL_08
			JSR	HI_CALL_05
			LDD	#$0101			; enable all operators
			STD	OP_ENABLE		; -
			STD	OP_ENABLE + 2		; -
			RTS

;-------

LO_CALL_04		LDAB	#$04
			STAB	XROM
			JSR	XROM_CALL
			RTS

;-------

F_C345			LDAA	M778F

;-------	fallthrough

HI_CALL_02		LDAB	M778A
			JSR	F_969B
			LDAA	M7789
			CMPA	#$03
			BEQ	1F
			LDX	#M7F9A
			STX	SPTR
			LDAB	#$18
			LDX	#MICROTUNE_OCT
			JSR	MEMCPYX
			JMP	16F
1			LDX	#M7F9A
			STX	SPTR
			LDX	#MICROTUNE_FULL
			STX	DPTR
			LDAB	#$0C
2			PSHB
			LDX	SPTR
			LDD	,X
			PSHA
			LDAA	M778A
			CMPA	#$09
			PULA
			BCS	4F
			BNE	3F
			SUBA	#$1E
			BRA	5F
3			SUBA	#$0F
			BRA	5F
4			SUBA	#$3C
5			INX
			INX
			STX	SPTR
			LDX	DPTR
			STD	,X
			INX
			INX
			STX	DPTR
			PULB
			DECB
			BNE	2B
			CLRB
6			PSHB
			LDAA	#$18
			MUL
			LDX	#MICROTUNE_FULL
			ABX
			STX	SPTR
			LDAB	#$18
			ABX
			STX	DPTR
			PULB
			PSHB
			CMPB	#$09
			BNE	7F
			LDAB	#$08
			BRA	8F
7			LDAB	#$0C
8			PSHB
			LDX	SPTR
			LDD	,X
			PSHA
			LDAA	M778A
			CMPA	#$09
			PULA
			BCS	10F
			BNE	9F
			ADDA	#$06
			BRA	11F
9			ADDA	#$03
			BRA	11F
10			ADDA	#$0C
11			INX
			INX
			STX	SPTR
			LDX	DPTR
			STD	,X
			INX
			INX
			STX	DPTR
			PULB
			DECB
			BNE	8B
			PULB
			INCB
			CMPB	#$0A
			BNE	6B
			CLRB
			LDX	#MICROTUNE_FULL
12			LDAA	,X
13			CMPA	#$0D
			BCC	14F
			ADDA	#$0C
			BRA	13B
14			CMPA	#$6D
			BCS	15F
			SUBA	#$0C
			BRA	14B
15			STAA	,X
			INX
			INX
			INCB
			CMPB	#$80
			BNE	12B
16			RTS

;-------

F_C407			LDAA	M7772
			ANDA	#$04
			BEQ	3F
			LDAA	PFM_EDIT_MICTUN
1			CMPA	#$0B
			BCS	4F
			BEQ	2F
			LDAA	#$03
			BRA	6F
2			LDAA	#$06
			BRA	6F
3			LDAA	M7774
			CMPA	#$1C
			BNE	5F
			LDAA	M7788
			CMPA	#$02
			BNE	5F
			LDAA	M7789
			BEQ	4F
			CMPA	#$02
			BEQ	4F
			LDAA	M778A
			ADDA	#$02
			BRA	1B
4			LDAA	#$0C
			BRA	6F
5			CLRA
6			STAA	M7F99
			RTS

;-------

LCD_INIT		LDAA	#$38			; A <- LCD Mode Set
			LDX	#$0000
1			DEX				; wait a bit
			BNE	1B			; -
			STAA	LCD_CMD			; send LCD mode set
			LDX	#10000
2			DEX				; wait a bit more
			BNE	2B			; -
			STAA	LCD_CMD			; send it again
			LDX	#10000
3			DEX				; wait a bit more again
			BNE	3B			;-
			STAA	LCD_CMD			; send it again
			JSR	LCD_WAIT		; wait for LCD busy to clear
			STAA	LCD_CMD			; and once more for luck...
			JSR	LCD_WAIT		; and wait for LCD busy to clear
			LDAA	#$0C
			STAA	LCD_CMD
			JSR	LCD_WAIT
			LDAA	#$01
			STAA	LCD_CMD
			JSR	LCD_WAIT
			LDAA	#$06
			STAA	LCD_CMD

			LDAA	#$20			; erase the off screen LCD buffer
			LDX	#LCD_COPY		; -
4			STAA	,X			; -
			INX				; -
			CPX	#LCD_COPY + 32		; -
			BNE	4B			; -

			LDX	#SWITCH_LO		; clear switch state
5			CLR	,X			; why a loop just to clear two bytes?!
			INX
			CPX	#SWITCH_LO + 2
			BNE	5B

			JSR	READ_SW_123
			CMPA	#SW2|SW1		; check volume-up and cursor
			BNE	6F
			LDAB	#$01
			BRA	8F
6			CMPA	#SW3|SW1		; check volume-down and cursor
			BNE	7F
			LDAB	#$02
			BRA	8F
7			CMPA	#SW3|SW2		; check volume-up and volume-down
			BNE	9F
			LDAB	#$03
8			STAB	M00A6
			LSRA
			LSRA
			LSRA
			LSRA
			LSRA
			STAA	SWITCH_LO
			LDX	#S_VERSION
			STX	SPTR
			LDAB	#$10
			LDX	#GREETING
			JSR	MEMCPYX
			BRA	12F
9			JSR	READ_SWITCHES
			CMPB	#$07
			BNE	10F
			JSR	READ_SWITCHES
10			CMPB	#$03
			BNE	12F
			LDAA	#$01
			STAA	M00AD
11			LDX	#S_GOOD_MORNING
			STX	SPTR
			LDAB	#$10
			LDX	#GREETING
			JSR	MEMCPYX
			TST	>M00AD
			BNE	20F
12			JSR	LCD_CLR
			CLRB
13			PSHB
			LSRB
			ANDB	#$03
			LDAA	#$80
14			TSTB
			BEQ	15F
			DECB
			LSRA
			BRA	14B
15			ORAA	#$08
			STAA	PORT6
			PULB
			CMPB	#$10
			BCS	16F
			LDX	#GREETING
			PSHB
			SUBB	#$10
			ABX
			PULB
			BRA	17F
16			LDX	#S_YAMAHA_TX81Z
			ABX
17			LDAA	,X
			LDX	#LCD_BUFFER
			ABX
			STX	DPTR
			CMPA	#$20
			BCS	11B
			CMPA	#$80
			BCC	11B
			PSHB
			TAB
			JSR	PUTCHAR
			JSR	LCD_UPDATE
			PULB
			TST	>M00A6
			BNE	19F
			LDX	#$A000
18			DEX
			BNE	18B
19			INCB
			CMPB	#$20
			BNE	13B
			LDAB	#$FF
			JSR	DELAY_B_x_4500
20			JSR	LCD_CLR
			RTS

;-------

F_C548			CLR	M7F99
			CLR	M7788
			CLR	M7789
			CLR	M778A
			CLR	M778C
			TST	VOICE_COMPARE
			BEQ	1F
			LDAA	#$01
			STAA	VOICE_EDITED
1			LDAA	M7790
			BEQ	2F
			LDAA	#$FF
			STAA	M7790
2			LDAA	#$01
			STAA	SYS_MLOCK
			STAA	SYS_CMBIN
			LDAA	#$FF
			STAA	M7794
			STAA	M7795
			LDAA	M7772
			ANDA	#$07
			CMPA	#$03
			BEQ	3F
			CMPA	#$07
			BNE	4F
3			CLRA
4			STAA	M7772
			CLR	M777D
			LDAA	#$01
			STAA	POLL_ENABLE
			CLR	>M00EF
			JSR	F_C7C2
			LDAA	#$B1
			CMPA	M776D
			BCC	5F
			STAA	M776D
5			CLR	VOICE_NUM
			LDAA	M778F
			CMPA	#$0C
			BCS	6F
			CLRA
6			STAA	M778F
			JSR	HI_CALL_09
			LDAA	M7779
			CMPA	#$18
			BCS	7F
			CLR	M7779
7			LDAA	M7773
			CMPA	#$A0
			BCS	8F
			CLR	M7773
8			LDAA	M7780
			CMPA	#$A0
			BCS	9F
			CLR	M7780
9			LDAA	OPERATOR_NUM
			ANDA	#$03
			STAA	OPERATOR_NUM
			LDAA	M7776
			CMPA	#$0B
			BCS	10F
			CLR	M7776
10			LDAA	M7775
			CMPA	#$1F
			BCC	11F
			CMPA	#$14
			BCC	12F
11			LDAA	#$14
			STAA	M7775
12			LDAA	M7778
			CMPA	#$36
			BCC	13F
			CMPA	#$28
			BCC	14F
13			LDAA	#$28
			STAA	M7778
14			LDAA	M7777
			CMPA	#$3F
			BCC	15F
			CMPA	#$3C
			BCC	16F
15			LDAA	#$3C
			STAA	M7777
16			JSR	LO_CALL_08
			LDAA	M7774
			TST	>M00A6
			BEQ	17F
			LDAA	#$04
			STAA	M7772
			LDAA	#$46
			BRA	20F
17			CMPA	#$46
			BCS	18F
			JSR	F_BBBC
18			TST	>M00AD
			BEQ	19F
			LDAA	#$FF
			STAA	M7790
			CLR	M7772
			LDAA	#$1F
			BRA	20F
19			LDAA	M7774
			CMPA	#$1F
			BNE	20F
			LDAA	#$14
20			STAA	M7774
			LDAA	M7772
			BNE	21F
			LDAB	M7774
			CMPB	#$20
			BCC	26F
			CMPB	#$14
			BCC	28F
			BRA	26F
21			CMPA	#$01
			BNE	22F
			LDAB	M7774
			CMPB	#$0B
			BCS	28F
			CLRB
			BRA	27F
22			CMPA	#$04
			BNE	24F
			LDAB	M7774
			CMPB	#$46
			BEQ	28F
			CMPB	#$3F
			BCC	23F
			CMPB	#$3C
			BCC	28F
23			LDAB	#$3C
			BRA	27F
24			CMPA	#$05
			BNE	29F
			LDAB	M7774
			CMPB	#$36
			BCC	25F
			CMPB	#$28
			BCC	28F
25			LDAB	#$28
			BRA	27F
26			LDAB	#$14
27			STAB	M7774
28			JSR	F_B1DD
29			JSR	F_C95A
			JSR	F_C972
			RTS

S_YAMAHA_TX81Z		FCC	"* YAMAHA TX81Z *"
			FCB	$00

;-------

HI_CALL_09		LDAA	SYS_PBSW
			CMPA	#18
			BCS	1F
			LDAA	#$01
			STAA	SYS_PBSW
1			LDAA	SYS_NOTESW
			CMPA	#$03
			BCS	2F
			CLR	SYS_NOTESW
2			LDAA	SYS_COINF
			CMPA	#$12
			BCS	3F
			LDAA	#$01
3			STAA	SYS_COINF
			LDAA	SYS_SYSAVL
			ANDA	#$01
			STAA	SYS_SYSAVL
			LDAA	SYS_MLOCK
			ANDA	#$01
			STAA	SYS_MLOCK
			LDAA	SYS_CMBIN
			ANDA	#$01
			STAA	SYS_CMBIN
			LDAA	SYS_AT
			ANDA	#$01
			STAA	SYS_AT
			CLRB
4			LDX	#GREETING
			ABX
			LDAA	,X
			CMPA	#$20
			BCS	5F
			CMPA	#$80
			BCS	6F
5			LDAA	#$2A
			STAA	,X
6			INCB
			CMPB	#$10
			BNE	4B
			LDAA	SYS_TUNE
			ANDA	#$7F
			STAA	SYS_TUNE
			LDAA	SYS_PCINF
			CMPA	#$03
			BCS	7F
			CLRA
7			STAA	SYS_PCINF
			LDAA	SYS_MIDTCH
			ANDA	#$0F
			STAA	SYS_MIDTCH
			LDAA	SYS_MIDBCH
			CMPA	#$11
			BCS	8F
			CLRA
8			STAA	SYS_MIDBCH
			CLRB
9			LDX	#EFFECTS_PARAMS
			ABX
			LDAA	,X
			PSHX
			LDX	#D_C7BB
			ABX
			CMPA	,X
			PULX
			BLS	10F
			CLR	,X
10			INCB
			CMPB	#$04
			BNE	9B
			CLRB
11			LDX	#EF2D
			ABX
			LDAA	,X
			PSHX
			LDX	#D_C7BF
			ABX
			CMPA	,X
			PULX
			BLS	12F
			CLR	,X
12			INCB
			CMPB	#$03
			BNE	11B
			CLRB
13			LDX	#CHORD
			ABX
			LDAA	,X
			CMPA	#$31
			BLS	14F
			CLR	,X
14			INCB
			CMPB	#$30
			BNE	13B
			LDX	#PROG_CHANGES
15			LDAA	,X
			CMPA	#$B8
			BCS	16F
			CLR	,X
16			INX
			CPX	#PROG_CHANGES + $80
			BNE	15B
			CLRB
17			LDX	#MICROTUNE_OCT
			JSR	F_C7A1
			CMPB	#$0C
			BNE	17B
			CLRB
18			LDX	#MICROTUNE_FULL
			JSR	F_C7A1
			CMPB	#$80
			BNE	18B
			RTS

;--------

F_C7A1			PSHB
			ASLB
			ABX
			LDD	,X
			CMPA	#$0D
			BCC	1F
			LDAA	#$0D
			BRA	2F
1			CMPA	#$6C
			BLS	2F
			LDAA	#$6C
2			ANDB	#$3F
			STD	,X
			PULB
			INCB
			RTS

D_C7BB			FCB	$7F,$30,$07,$63

D_C7BF			FCB	$02,$01,$63

;-------

F_C7C2			LDAB	#$08
			LDX	#M7D8A
			LDAA	#$80
			BSR	RESET_INST_CC
			LDAB	#$08
			LDX	#INST_MODULATION + 7
			CLRA
			BSR	RESET_INST_CC
			LDAB	#$08
			LDX	#INST_BREATH + 7
			CLRA
			BSR	RESET_INST_CC
			LDAB	#$08
			LDX	#M7D6A
			LDAA	#$FE
			BSR	RESET_INST_CC
			LDAB	#$08
			LDX	#M0048
			LDAA	#$40
			BSR	RESET_INST_CC
			LDAB	#$08
			LDX	#M0050
			CLRA
			BSR	RESET_INST_CC
			BSR	F_C7FF
			RTS

;--------

RESET_INST_CC
0			STAA	,X
			DEX
			DECB
			BNE	0B
			RTS

;--------

F_C7FF			LDAB	M7772
			ANDB	#$04
			BNE	1F
			LDAB	#$08
			LDX	#INST_VOLUME + 7
			CLRA
			BSR	RESET_INST_CC
			BRA	2F
1			BSR	CALC_ALL_INST_VOLUMES
2			RTS

;-------
;
; Remap all 8 instrument's volumes
;

CALC_ALL_INST_VOLUMES	CLRB
1			BSR	CALC_INST_VOLUME
			INCB
			CMPB	#$08
			BNE	1B
			RTS

;-------
;
; Remap instrument B's volume from range 0 .. 99
; to 255 .. 0  (out = ~ in * 660 / 256)
;
CALC_INST_VOLUME	PSHB
			LDX	#PFM_EDIT_BUF
			LDAA	#12
			MUL
			ABX
			LDAA	$08,X			; instrument volume
			JSR	MUL_660
			COMA
			LDX	#INST_VOLUME
			PULB
			ABX
			STAA	,X
			RTS

;--------

F_C832			LDX	#M7D83
			ABX
			LDAA	#$80
			STAA	,X
			LDX	#INST_MODULATION
			ABX
			CLRA
			STAA	,X
			LDX	#INST_BREATH
			ABX
			CLRA
			STAA	,X
			LDX	#INST_FOOT
			ABX
			LDAA	#$FE
			STAA	,X
			LDX	#M0041
			ABX
			LDAA	#$40
			STAA	,X
			LDX	#M0049
			ABX
			CLRA
			STAA	,X
			JSR	CALC_INST_VOLUME
			RTS
			PSHA
			PULA
			PSHA
			PULA
			RTS

;-------

PUTSTR_OFFSET		EQU	$C801		; not used in this bank
			INCLUDE	"inc/lcd.asm"

			INCLUDE "inc/lcd_clr.asm"

;-------

F_C8E9			TST	M7790
			BEQ	1F
			OIM	#LED1,PORT6
			BRA	2F
1			AIM	#~LED1,PORT6
2			LDAB	M7772
			ANDB	#$07

			JSR	JMPOFFB
			FCB	C_C907 - *
			FCB	C_C920 - *
			FCB	C_C939 - *
			FCB	C_9C06 - *
			FCB	C_C916 - *
			FCB	C_C92F - *
			FCB	C_C939 - *
			FCB	C_9C06 - *

C_9C06			RTS

C_C907			TST	VOICE_COMPARE
			BEQ	C_C916
			TIM	#%00100000,M006E
			BEQ	C_C916
			AIM	#~LED4,PORT6
			BRA	6F

C_C916			OIM	#LED4,PORT6
6			AIM	#~LED3,PORT6
			AIM	#~LED2,PORT6
			RTS

C_C920			TST	VOICE_COMPARE
			BEQ	C_C92F
			TIM	#%00100000,M006E
			BEQ	C_C92F
			AIM	#~LED3,PORT6
			BRA	9F

C_C92F			OIM	#ECMI,PORT6
9			AIM	#~LED4,PORT6
			AIM	#~LED2,PORT6
			RTS

C_C939			AIM	#~LED4,PORT6
			AIM	#~LED3,PORT6
			TST	>M00AE
			BNE	11F
			OIM	#LED2,PORT6
			BRA	12F
11			AIM	#~LED2,PORT6
12			RTS

;-------

F_C94D			SEI
			SPIN3
			LDAA	#$21
			STAA	M006E
			LDAA	#$02
			STAA	M00AE
			CLI
			RTS

;-------

F_C95A			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_15
			OIM	#ECMI,TCSR3
			JSR	F_C407
			JSR	F_C8E9
			LDAB	#$0B
			STAB	>XROM
			JSR	XROM_CALL		; invoke SET_PCED_RANGE (from low bank)
			RTS

;-------

F_C972			TST	>M009A
			BNE	6F
			LDAB	M7772
			CMPB	#$02
			BCS	3F
			CMPB	#$04
			BCS	6F
			CMPB	#$06
			BCS	4F
			BEQ	2F
			CMPB	#$09
			BEQ	1F
			CMPB	#$11
			BNE	6F
1			JMP	C_CB00
2			TST	M7795
			BPL	6F
			JMP	C_CAB2
3			TST	M7794
			BPL	6F
			TST	VOICE_COMPARE
			BNE	6F
4			LDAB	M7774
			LDAA	M7788
			CMPA	#$02
			BCS	5F
			JMP	C_CB0C

5			JSR	JMPOFF1
			FCB	C_C9E6 - *		; case 0
			FCB	$01
			FCB	6F - *			; case 1, 2
			FCB	$03
			FCB	C_CA00 - *		; case 3
			FCB	$04
			FCB	C_CA3F - *		; case 4
			FCB	$05
			FCB	C_CA86 - *		; case 5, 6
			FCB	$07
			FCB	C_CA7F - *		; case 7
			FCB	$08
			FCB	C_CA86 - *		; case 8
			FCB	$09
			FCB	C_CA7F - *		; case 9
			FCB	$0A
			FCB	C_CA95 - *		; case 10
			FCB	$0B
			FCB	6F - *			; case 11 .. 30
			FCB	$1F
			FCB	C_CAAB - *		; case 31
			FCB	$20
			FCB	6F - *			; case 32 .. 40
			FCB	$29
			FCB	C_CAB2 - *		; case 41 .. 47
			FCB	$30
			FCB	8F - *			; case 48
			FCB	$31
			FCB	C_CAB2 - *		; case 49, 50
			FCB	$33
			FCB	7F - *			; case 51
			FCB	$34
			FCB	6F - *			; case 52
			FCB	$35
			FCB	C_CAA3 - *		; case 53
			FCB	$36
			FCB	6F - *			; case 54 .. 75
			FCB	$3C
			FCB	C_CAB2 - *		; case 76
			FCB	$3D
			FCB	6F - *			; default
			FCB	$00

6			RTS
7			JMP	C_CAEB
8			JMP	C_CADA

C_C9E6			LDAA	M778C
			BNE	10F
			LDAA	#$C4
			BRA	11F
10			ADDA	#$80
11			JSR	LCD_WAIT
			STAA	LCD_CMD
			LDAA	#$0D
12			JSR	LCD_WAIT
			STAA	LCD_CMD
			RTS

C_CA00			CMPA	#$01
			BNE	6B
			LDAB	M7789
			BNE	13F
			LDAA	M778C
			BEQ	19F
			BRA	10B
13			CMPB	#$01
			BEQ	16F
14			LDAA	M778C
			CMPA	#$04
			BCS	15F
			SUBA	#$03
			BRA	10B
15			LDAB	#$03
			MUL
			ADDB	#$C6
			TBA
			BRA	11B
16			LDAA	M778C
			BEQ	18F
			CMPA	#$05
			BCS	17F
			SUBA	#$04
			BRA	10B
17			DECA
			BRA	15B
18			LDAA	#$C4
			BRA	11B
19			LDAA	#$CE
			BRA	11B

C_CA3F			CMPA	#$01
			BNE	6B
			LDAB	M7789
			BEQ	20F
			CMPB	#$03
			BEQ	20F
			CMPB	#$06
			BEQ	20F
			CMPB	#$09
			BNE	21F
20			LDAA	M778C
			BNE	10B
			LDAA	#$CD
			BRA	11B
21			LDAA	M778C
			BEQ	18B
			CMPA	#$02
			BCS	22F
			DECA
			BRA	10B
22			LDAB	OPERATOR_NUM		; get per-op ACED pointer
			LDAA	#5			; -
			JSR	GET_OP_PTR_BA		; -
			TST	$57,X			; test fixed frequency flag
			BEQ	23F
			LDAA	#$CD
			JMP	11B
23			LDAA	#$CF
			JMP	11B

C_CA7F			CMPA	#$01
			BEQ	C_CA86
			JMP	6B			; should be RTS

C_CA86			LDAA	M778C
			CMPA	#$04
			BCS	26F
			SUBA	#$03
			JMP	10B
26			JMP	14B

C_CA95			CMPA	#$01
			BNE	28F
			LDAB	M7789
			CMPB	#$0F
			BEQ	C_CAA3
28			JMP	6B			; should be RTS

C_CAA3			LDAA	M778C
			ADDA	#$C6
30			JMP	11B

C_CAAB			LDAA	M778C
			ADDA	#$C0
			BRA	30B

C_CAB2			LDAA	M778C
33			LDAB	#$04
			MUL
			TBA
			CMPA	#$10
			BCS	34F
			SUBA	#$0F
34			ADDA	#$C2
			LDAB	M7772
			CMPB	#$06
			BEQ	35F
			LDAB	M7774
			CMPB	#$3C
			BNE	30B
35			JSR	LCD_WAIT
			STAA	LCD_CMD
			LDAA	#$0E
			JMP	12B

C_CADA			LDAA	M778C
			LDAB	#$03
			MUL
			TBA
			CMPA	#$0C
			BCS	37F
			SUBA	#$0B
37			ADDA	#$C4
			BRA	30B

C_CAEB			LDAA	M778C
			BEQ	39F
			CMPA	#$01
			BNE	38F
			LDAA	#$8F
			BRA	40F
38			SUBA	#$02
			BRA	33B
39			LDAA	#$8C
40			BRA	30B

C_CB00			LDAB	M0059
			BEQ	42F
			LDAB	#$04
42			ADDB	#$CA
			TBA
			JMP	11B

C_CB0C			CMPB	#$1B
			BNE	45F
			LDAA	M776B
			ANDA	#$08
			BNE	44F
			JMP	C_CAB2
44			JMP	6B			; should be RTS
45			CMPB	#$1C
			BNE	44B
			LDAB	M7789
			ANDB	#$01
			BEQ	46F
			LDAA	#$C0
			TST	M778C
			BEQ	47F
			LDAA	#$CF
			BRA	47F
46			LDAA	#$C6
			TST	M778C
			BEQ	47F
			ADDA	#$04
47			JMP	11B

;-------

POLL			TST	POLL_ENABLE		; polling gets disabled sometimes
			BEQ	3F			; bug out if so

			TST	>MIDI_RX_ERR		; check for MIDI RX errors
			BEQ	1F			; none?  branch
			JSR	SHOW_RX_ERR		; display the error
			BRA	3F			; bug out

1			TST	>M00CB			; ??
			BEQ	2F
			JSR	F_E6BD

2			LDX	PTR_RX			; check for data in the RX buffer
			CPX	PTR_RX_TAIL
			BNE	4F			; branch to process it
			LDAA	M00B3
			CMPA	#$01
			BCS	_POLL_EXIT
			CLR	>M00B3
			OIM	#ECMI,TCSR3		; enable timer 2 interrupts
3			BRA	_POLL_EXIT

4			LDD	#$0000
			STD	M00B0
			LDAA	,X			; get first byte from RX buffer
			CPX	#MIDI_RXBUF_END - 1	; compare pointer to buffer end
			BNE	5F
			LDX	#MIDI_RXBUF - 1		; reset to (one before) buffer start
5			INX				; inc RX buffer pointer
			STX	PTR_RX			; and save it
			TSTA				; re-examine A
			BPL	11F			; if it's data, branch
			CMPA	#$FE			; is it Active Sense?
			BNE	6F			; no?  branch...
			LDAB	#$01
			STAB	M00AF
			CLR	>M00B2
6			CMPA	#$F8			; >= $F8
			BCC	_POLL_EXIT		; yes?  we're done

7			STAA	MIDI_RX_CMD		; store MIDI command
			CLR	>MIDI_RX_DATA_COUNT
			CMPA	#SYX			; is it a SysEx start
			BEQ	9F			; yes?  branch
			BCC	8F			; > $F0 ? go around...
			ANDA	#$0F			; mask out MIDI channel
			TAB				; store in B
			LDX	#M7F89			; offset into table
			ABX				; -
			LDAA	,X			; get value from table
			STAA	M00DA
8			BRA	POLL			; go around again

							; start of SysEx handling
9			AIM	#~ECMI,TCSR3		; disable timer 2 interrupts
			LDAB	#$01
			STAB	M00B3			; sysex flag?
			BRA	POLL			; go around

10			LDAA	#EOX
			BRA	7B

11			LDAB	MIDI_RX_CMD
			CMPB	#SYX
			BCS	12F
			BHI	POLL			; go around
			TST	SYS_SYSAVL
			BEQ	10B
			JMP	C_D0C8

12			LSRB				; rotate command nybble to bottom half
			LSRB				; -
			LSRB				; -
			LSRB				; -
			ANDB	#$07			; ignore top bit

			JSR	JMPOFF1
			FCB	RX_NOTE_OFF - *		; note off
			FCB	$01
			FCB	RX_NOTE_ON - *		; note on
			FCB	$02
			FCB	_POLL_EXIT - *		; poly aftertouch
			FCB	$03
			FCB	1F - *			; control change
			FCB	$04
			FCB	2F - *			; program change
			FCB	$05
			FCB	3F - *			; channel aftertouch
			FCB	$06
			FCB	4F - *			; pitch bend
			FCB	$07
			FCB	_POLL_EXIT - *		; sysex
			FCB	$00

_POLL_EXIT		RTS

1			JMP	RX_CTL_CHANGE
2			JMP	RX_PGM_CHANGE
3			JMP	RX_AFTERTOUCH
4			JMP	RX_PITCHBEND

;-------

RX_NOTE_OFF		TST	>MIDI_RX_DATA_COUNT
			BNE	1F
			INC	>MIDI_RX_DATA_COUNT
			STAA	MIDI_RX_DATA_1
			JMP	POLL
1			CLR	>MIDI_RX_DATA_COUNT
_TEST_NOTE_OFF		LDAB	SYS_NOTESW		; check MIDI note switch mode
			BEQ	_DO_NOTE_OFF		; 0 -> keep on going
			EORB	MIDI_RX_DATA_1		; xor note number with note mode
			ANDB	#$01			; and look at bit 0
			BEQ	_DO_NOTE_OFF		; same -> keep on going
			JMP	POLL			; otherwise ignore, and go around

_DO_NOTE_OFF		AIM	#~ECMI,TCSR3
			AIM	#~EOCI1,TCSR1
			LDAB	MIDI_RX_DATA_1
			STAB	NOTE_NUMBER_STOP
			LDAA	M00DA
			CLRB
4			LSRA
			BCS	5F
			BEQ	8F
			BRA	7F
5			PSHA
			PSHB
			JSR	F_EA9B
			JSR	F_ECDD
			LDAA	#$04
			STAA	M0058
			JSR	F_EDEA
			BVS	6F
			JSR	NOTE_STOP
6			JSR	F_EE1F
			PULB
			PULA
7			INCB
			BRA	4B
8			OIM	#EOCI1,TCSR1
			OIM	#ECMI,TCSR3
			JMP	POLL

;--------

RX_NOTE_ON		TST	>MIDI_RX_DATA_COUNT
			BNE	1F
			INC	>MIDI_RX_DATA_COUNT
			STAA	MIDI_RX_DATA_1
			JMP	POLL
1			CLR	>MIDI_RX_DATA_COUNT
			TSTA				; check if velocity is zero
			BEQ	_TEST_NOTE_OFF		; if so, treat as a Note Off cmd
			LDAB	SYS_NOTESW		; check MIDI note switch mode
			BEQ	_DO_NOTE_ON		; 0 -> keep on going
			EORB	MIDI_RX_DATA_1		; xor note number with note mode
			ANDB	#$01			; and look at bit 0
			BEQ	_DO_NOTE_ON		; same -> keep on going
			JMP	POLL			; otherwise ignore, and go around

_DO_NOTE_ON		AIM	#~ECMI,TCSR3
			LDAB	M7772
			ANDB	#$03
			CMPB	#$02
			BNE	3F
			LDAB	#$21
			STAB	M006E
			LDAB	#$01
			STAB	M00AE
			AIM	#~LED2,PORT6
3			AIM	#~EOCI1,TCSR1
			AIM	#~IRQ1E,RP5CR
			STAA	NOTE_VELOCITY		; store note velocity
			LDAB	MIDI_RX_DATA_1		; get previous received byte
			STAB	NOTE_NUMBER		; and store it as the note number
			TAB				; and into B
			LDX	#D_VELOCITY_MAP		; and offset into the velocity map table
			ABX				;
			LDAB	,X			;
			STAB	M00F1			; and save the result
			LDAA	M00DA
			CLRB
4			LSRA
			BCS	5F
			BEQ	8F
			BRA	7F
5			PSHA
			PSHB
			JSR	F_EC77
			JSR	F_EA0E
			LDAA	#$04
			STAA	M0058
			JSR	F_ED8F
			BVS	6F
			JSR	NOTE_START
6			PULB
			PULA
7			INCB
			BRA	4B
8			LDAA	M776B
			ANDA	#$02
			BEQ	10F
			TST	M7767
			BNE	10F
			LDAA	#$03
			STAA	M7767
			TST	EF2D
			BNE	9F
			JSR	F_ECFE
9			JSR	F_A68F
			JSR	F_A68F
10			OIM	#IRQ1E,RP5CR
			OIM	#EOCI1,TCSR1
			OIM	#ECMI,TCSR3
			JMP	POLL

;-------

RX_PITCHBEND		TST	>MIDI_RX_DATA_COUNT
			BNE	1F
			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
1			CLR	>MIDI_RX_DATA_COUNT
			TST	SYS_PBSW
			BEQ	9F
			ASLA
			LDX	#M7D83
			AIM	#~ECMI,TCSR3
			LDAB	TCSR1
			PSHB
			AIM	#~EOCI1,TCSR1
			LDAB	M7772
			ANDB	#$04
			BEQ	4F
			TST	PFM_EDIT_ASSIGN
			BEQ	2F
			TST	>M00DA
			BNE	3F
			BRA	8F
2			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			ADDB	#$02
			CMPB	SYS_PBSW
			BNE	4F
3			LDAB	#$FF
			BRA	5F
4			LDAB	M00DA
5			LSRB
			BCS	6F
			BEQ	8F
			BRA	7F
6			STAA	,X
7			INX
			BRA	5B
8			PULB
			STAB	TCSR1
			OIM	#ECMI,TCSR3
9			RTS

;-------

RX_PGM_CHANGE		TST	SYS_PCINF
			BEQ	_PGM_CHGN_EXIT_1
			LDAB	M7772
			CMPB	#$02
			BEQ	1F
			CMPB	#$06
			BNE	_PGM_CHGN_EXIT_1
1			LDAB	SYS_PCINF
			CMPB	#$02
			BEQ	8F
2			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			CMPB	SYS_MIDBCH
			BEQ	3F
			LDAB	SYS_MIDBCH
			CMPB	#$10
			BEQ	3F
			BRA	_PGM_CHGN_EXIT_1	; could be RTS
3			TAB
			LDX	#PROG_CHANGES
			ABX
			LDAB	,X
			LDAA	M7772
			CMPA	#$02
			BNE	5F
			CMPB	#$A0
			BCS	6F
			LDAA	#$01
			STAA	M00CC
			PSHB
			LDAB	#$07
			JSR	F_8A08
			PULB
4			SUBB	#$A0
			LDAA	#$01
			STAA	M00CC
			JSR	F_8A64
			RTS
5			CMPB	#$A0
			BCC	4B
			LDAA	#$01
			STAA	M00CC
			PSHB
			LDAB	#$07
			JSR	F_8A08
			PULB
6			LDAA	#$01
			STAA	M00CC
			JSR	F_8A81
_PGM_CHGN_EXIT_1	RTS

8			LDAB	M7772
			CMPB	#$02
			BEQ	2B
			TAB
			LDX	#PROG_CHANGES
			ABX
			LDAB	,X
			CMPB	#$A0
			BCC	_PGM_CHGN_EXIT_1
			LDAA	M00DA
			CLRB
9			LSRA
			BCS	10F
			BEQ	12F
			BRA	11F
10			PSHA
			PSHB
			PSHX
			LDAA	#$01
			STAA	M00CC
			LDAA	,X
			JSR	F_D052
			PULX
			PULB
			PULA
11			INCB
			BRA	9B
12			JSR	F_C95A
			JSR	F_C972
			RTS

;-------

RX_AFTERTOUCH		TST	SYS_AT
			BNE	1F
			RTS
1			TST	SYS_COINF
			BNE	2F
			RTS
2			ASLA
			LDX	#INST_BREATH
			JSR	F_D012
			RTS

;-------
;
; MIDI CC processing
;

RX_CTL_CHANGE		TST	>MIDI_RX_DATA_COUNT
			BNE	1F
			INC	>MIDI_RX_DATA_COUNT
			STAA	MIDI_RX_DATA_1
			JMP	POLL
1			CLR	>MIDI_RX_DATA_COUNT
			LDAB	MIDI_RX_DATA_1
			CMPB	#CC_SUSTAIN
			BEQ	2F
			CMPB	#CC_ALL_NOTES_OFF
			BEQ	2F
			CMPB	#CC_MONO_ON
			BEQ	2F
			CMPB	#CC_POLY_ON
			BEQ	2F
			TST	SYS_COINF
			BEQ	3F
			LDAB	MIDI_RX_DATA_1
2			JSR	JMPOFF1
			FCB	3F - *			; <1 : ignore
			FCB	$01
			FCB	RX_CC_MODULATION - *	; <2 : modulation
			FCB	$02
			FCB	RX_CC_BREATH - *	; <3 : breath
			FCB	$03
			FCB	3F - *			; <4 : ignore
			FCB	$04
			FCB	RX_CC_FOOT - *		; <5 : foot
			FCB	$05
			FCB	RX_CC_PORT_TIME - *	; <6 : portamento time
			FCB	$06
			FCB	RX_CC_DATA_ENTRY_MSB- *	; <7 : CC6 - no-op
			FCB	$07
			FCB	RX_CC_VOLUME - *	; <8 : volume
			FCB	$08
			FCB	3F - *			; <10 : ignore
			FCB	$0A
			FCB	6F - *			; <11 : pan
			FCB	$0B
			FCB	3F - *			; <64 : ignore
			FCB	$40
			FCB	RX_CC_SUSTAIN - *	; <65 : sustain
			FCB	$41
			FCB	RX_CC_PORTAMENTO - *	; <66 : portamento
			FCB	$42
			FCB	3F - *			; <96 : ignore
			FCB	$60
			FCB	RX_CC_DATA_ENTRY - *	; <98 : (96, 97) data entry
			FCB	$62
			FCB	3F - *			; <123: ignore
			FCB	$7B
			FCB	RX_CC_ALL_NOTES_OFF - *	; <124: all notes off
			FCB	$7C
			FCB	3F - *			; <126: ignore
			FCB	$7E
			FCB	4F - *			; <127: mono on
			FCB	$7F
			FCB	5F - *			; <128: poly on
			FCB	$80
			FCB	3F - *
			FCB	$00
3			RTS

4			JMP	RX_CC_MONO_ON
5			JMP	RX_CC_POLY_ON
6			JMP	RX_CC_PAN

;-------

RX_CC_MODULATION	ASLA
			LDX	#INST_MODULATION
			JSR	F_D012
			RTS

;-------

RX_CC_BREATH		TST	SYS_AT
			BNE	1F
			ASLA
			LDX	#INST_BREATH
			JSR	F_D012
1			RTS

;-------

RX_CC_FOOT		ASLA
			LDX	#INST_FOOT
			JSR	F_D012
			RTS

;-------

RX_CC_VOLUME		ASLA
			COMA
			DECA
			LDX	#INST_VOLUME
			JSR	F_D012
			RTS

;-------

RX_CC_PORT_TIME		LDAB	M7772
			ANDB	#$04
			BNE	3F
			LDAB	SYS_MIDBCH
			CMPB	#$10
			BEQ	1F
			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			CMPB	SYS_MIDBCH
			BNE	3F
1			JSR	MUL_200
			CMPA	VCED_PORTATIME
			BEQ	3F
			STAA	VCED_PORTATIME
			LDX	#F_A049
			JSR	F_92E3
C_CE92			LDAA	#$01
			STAA	VOICE_EDITED
			JSR	F_C95A
			JSR	F_C972
3			RTS

;-------

RX_CC_DATA_ENTRY_MSB	RTS

;-------

RX_CC_DATA_ENTRY	RTS

;-------

RX_CC_SUSTAIN		AIM	#~ECMI,TCSR3
			LDAB	TCSR1
			PSHB
			AIM	#~EOCI1,TCSR1
			LDX	#M0041
			LDAB	M00DA
			CMPA	#$40
			BCC	4F
			CLRA
1			LSRB
			BCS	2F
			BEQ	8F
			BRA	3F
2			AIM	#%01111111,$00,X
			PSHX
			PSHB
			PSHA
			TAB
			JSR	F_885F
			PULA
			PULB
			PULX
3			INX
			INCA
			BRA	1B
4			CLRA
5			LSRB
			BCS	6F
			BEQ	8F
			BRA	7F
6			OIM	#%10000000,$00,X
			PSHX
			PSHB
			PSHA
			TAB
			JSR	F_885F
			PULA
			PULB
			PULX
7			INX
			INCA
			BRA	5B
8			PULB
			STAB	TCSR1
			OIM	#ECMI,TCSR3
			RTS

;-------

RX_CC_PORTAMENTO	AIM	#~ECMI,TCSR3
			LDAB	TCSR1
			PSHB
			AIM	#~EOCI1,TCSR1
			LDX	#M0041
			LDAB	M7772
			ANDB	#$04
			BEQ	1F
			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			ADDB	#$02
			CMPB	SYS_COINF
			BNE	1F
			LDAB	#$FF
			BRA	2F
1			LDAB	M00DA
2			LSRB
			BCS	3F
			BEQ	6F
			BRA	5F
3			CMPA	#$40
			BCC	4F
			AIM	#%10111111,$00,X
			BRA	5F
4			OIM	#%01000000,$00,X
5			INX
			BRA	2B
6			PULB
			STAB	TCSR1
			OIM	#ECMI,TCSR3
			RTS

;-------

RX_CC_ALL_NOTES_OFF	AIM	#~ECMI,TCSR3
			AIM	#~EOCI1,TCSR1
			LDAA	M00DA
			CLRB
1			LSRA
			BCS	2F
			BEQ	4F
			BRA	3F
2			PSHA
			PSHB
			JSR	F_E78F
			PULB
			PSHB
			JSR	F_E9C9
			PULB
			PULA
3			INCB
			BRA	1B
4			OIM	#EOCI1,TCSR1
			OIM	#ECMI,TCSR3
			RTS

;-------

RX_CC_MONO_ON		LDAB	M7772
			ANDB	#$04
			BNE	3F
			LDAB	SYS_MIDBCH
			CMPB	#$10
			BEQ	1F
			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			CMPB	SYS_MIDBCH
			BNE	3F
1			CMPA	#$01
			BNE	RX_CC_ALL_NOTES_OFF
			TST	VCED_POLYMODE
			BNE	RX_CC_ALL_NOTES_OFF
			LDAA	#$01
			STAA	VCED_POLYMODE
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JMP	C_CE92
3			RTS

RX_CC_POLY_ON		LDAB	M7772
			ANDB	#$04
			BNE	3B
			LDAB	SYS_MIDBCH
			CMPB	#$10
			BEQ	5F
			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			CMPB	SYS_MIDBCH
			BNE	3B
5			TST	VCED_POLYMODE
			BEQ	RX_CC_ALL_NOTES_OFF
			CLR	VCED_POLYMODE
			BRA	2B

;-------

RX_CC_PAN		AIM	#~ECMI,TCSR3
			LDAB	TCSR1
			PSHB
			AIM	#~EOCI1,TCSR1
			LDAB	M7772
			BITB	#$04
			BEQ	10F
			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			ADDB	#$02
			CMPB	SYS_COINF
			BNE	1F
			LDAB	#$FF
			BRA	2F
1			LDAB	M00DA
2			CMPA	#$56
			BCC	3F
			CMPA	#$2B
			BCC	4F
			LDAA	#$01
			BRA	5F
3			LDAA	#$02
			BRA	5F
4			LDAA	#$03
5			LDX	#PFM_EDIT_INST_0 + 9	; out assign
			CLR	>M00C0
6			LSRB
			BCS	7F
			BEQ	9F
			BRA	8F
7			TST	,X
			BEQ	8F
			CMPA	,X
			BEQ	8F
			STAA	,X
			STAA	M00C0
8			PSHB
			LDAB	#$0C
			ABX
			PULB
			BRA	6B
9			TST	>M00C0
			BEQ	10F
			JSR	F_95E5
			LDAA	#$01
			STAA	PFM_EDITED
			JSR	F_C95A
			JSR	F_C972
10			PULB
			STAB	TCSR1
			OIM	#ECMI,TCSR3
			RTS

;--------
;
; involved in CC processing
;
F_D012			AIM	#~ECMI,TCSR3		; disable timer 2 interrupts
			LDAB	TCSR1			; save timer 1 state
			PSHB				; -
			AIM	#~EOCI1,TCSR1
			LDAB	M7772
			ANDB	#$04
			BEQ	3F
			TST	PFM_EDIT_ASSIGN
			BEQ	1F
			TST	>M00DA
			BNE	2F
			BRA	7F
1			LDAB	MIDI_RX_CMD
			ANDB	#$0F
			ADDB	#$02
			CMPB	SYS_COINF
			BNE	3F
2			LDAB	#$FF
			BRA	4F
3			LDAB	M00DA
4			LSRB
			BCS	5F
			BEQ	7F
			BRA	6F
5			STAA	,X
6			INX
			BRA	4B
7			PULB				; restore timer 1 state
			STAB	TCSR1			;
			OIM	#ECMI,TCSR3		; enable timer 2 interrupts
			RTS

;-------

F_D052			STAB	M0073
			PSHA
			LDX	#PFM_EDIT_BUF
			LDAB	M0073
			LDAA	#12
			MUL
			ABX
			PULB
			CMPB	$02,X			; voice LSB
			BEQ	2F
			STAB	$02,X
			LDAA	#$01
			STAA	PFM_EDITED

;-------	fallthrough

F_D06A			PSHB
			AIM	#~ECMI,TCSR3
			AIM	#~EOCI1,TCSR1
			LDAB	M0073
			JSR	F_D099
			PULB
			JSR	GET_PVOICE_PTR_B
			STX	SPTR
			LDAA	M0073
			JSR	GET_VOICE_PTR_A
			JSR	LOAD_VOICE_X
			LDAB	M0073
			STAB	M009F
			LDAB	#$0C
			STAB	XROM
			JSR	XROM_CALL		; invoke LO_CALL_0C (from low bank)
			JSR	F_94C9
			OIM	#EOCI1,TCSR1
			OIM	#ECMI,TCSR3
2			RTS

;-------

F_D099			LDAA	TCSR1
			PSHA
			AIM	#~EOCI1,TCSR1
			PSHB
			JSR	F_95A4
			PULB
			PSHB
			LDX	#M0041
			ABX
			AIM	#%01111111,$00,X
			JSR	F_885F
			PULB
			PSHB
			JSR	F_E78F
			PULB
			TSTB
			BNE	1F
			PSHB
			JSR	HI_CALL_16
			LDAB	#$7C
			STAB	M0058
			PULB
			JSR	F_E821
1			PULA
			STAA	TCSR1
			RTS

;-------

C_D0C8			LDAB	MIDI_RX_DATA_COUNT
			CMPB	#$FA
			BEQ	2F
			BCC	3F
			CMPB	#$0F
			BCC	1F
			LDX	#D_D0DD
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_D0DD			FDB	C_D10B
			FDB	C_D11A
			FDB	C_D148
			FDB	C_D191
			FDB	C_D1A7
			FDB	C_D207
			FDB	C_D256
			FDB	C_D296
			FDB	C_D296
			FDB	C_D296
			FDB	C_D296
			FDB	C_D296
			FDB	C_D296
			FDB	C_D2D6
			FDB	C_D2D6

1			JMP	C_D304
2			JMP	C_D320
3			JMP	C_D104

;-------

C_D104			LDAA	#EOX
			STAA	MIDI_RX_CMD
			JMP	POLL

;-------

C_D10B			STAA	MIDI_RX_DATA_1
			CMPA	#$43
			BNE	1F
			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
1			JMP	C_D104

;-------

C_D11A			TAB
			ANDA	#$F0
			STAA	M00BF
			CMPB	#$10
			BCS	1F
			CMPB	#$20
			BCS	2F
			CMPB	#$30
			BCS	2F
			BRA	4F
1			LDAA	#$01
			STAA	M00B2
2			LDAA	SYS_MIDBCH
			CMPA	#$10
			BEQ	3F
			ANDB	#$0F
			CMPB	SYS_MIDBCH
			BNE	4F
3			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
4			JMP	C_D104

;-------

C_D148			STAA	M00C0
			LDAB	M00BF
			CMPB	#$10
			BCS	3F
			BEQ	4F
			CMPA	#$03
			BNE	1F
			JSR	F_D326
			JMP	C_D104
1			CMPA	#$04
			BNE	2F
			JSR	F_D33D
			JMP	C_D104
2			CMPA	#$7E
			BEQ	5F
			JMP	C_D104
3			CMPA	#$03
			BEQ	5F
			CMPA	#$04
			BEQ	5F
			CMPA	#$7E
			BEQ	5F
			JMP	C_D104
4			CMPA	#$10
			BEQ	5F
			CMPA	#$12
			BEQ	5F
			CMPA	#$13
			BEQ	5F
			JMP	C_D104
5			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL

;-------

C_D191			STAA	M00C1
			LDAB	M00BF
			CMPB	#$20
			BCS	1F
			JSR	F_D3A7
			BCC	1F
			JMP	C_D104
1			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL

;-------

C_D1A7			STAA	M00C2
			LDAB	M00BF
			CMPB	#$10
			BCS	4F
			BEQ	2F
			JSR	F_D3A7
			BCC	1F
			JMP	C_D104
1			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
2			LDAB	M00C0
			CMPB	#$10
			BNE	3F
			LDAA	M00C1
			CMPA	#$7B
			BCS	3F
			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
3			JSR	F_D8DD
			JMP	C_D104
4			TST	SYS_SYSAVL
			BEQ	5F
			LDAB	M00C0
			CMPB	#$03
			BEQ	6F
			CMPB	#$04
			BEQ	7F
			BRA	8F			; could've jumped to 8F - 6
5			JMP	C_D104
6			JSR	F_D480
			BCS	5B
			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
7			JSR	F_D4A1
			BCS	5B
			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
8			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL

;-------

C_D207			STAA	>M00C3
			LDAB	M00BF
			CMPB	#$10
			BCS	4F
			BEQ	2F
			JSR	F_D3A7
			BCC	1F
			JMP	C_D104
1			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
2			LDAB	M00C1
			CMPB	#$7D
			BCC	3F
			JSR	F_D8DD
			JMP	C_D104
3			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
4			LDAB	M00C0
			CMPB	#$03
			BEQ	6F
			CMPB	#$04
			BEQ	7F
			JSR	F_D3A1
			BCC	5F
			JMP	C_D104
5			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
6			JSR	F_D520
			JMP	POLL
7			JSR	F_D547
			JMP	POLL

;-------

C_D256			LDAB	M00BF
			CMPB	#$10
			BCS	3F
			BEQ	2F
			JSR	F_D3A7
			BCC	1F
			JMP	C_D104
1			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
2			JSR	F_D8DD
			JMP	C_D104
3			LDAB	M00C0
			CMPB	#$03
			BEQ	5F
			CMPB	#$04
			BEQ	6F
			JSR	F_D3A1
			BCC	4F
			JMP	C_D104
4			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
5			JSR	F_D520
			JMP	POLL
6			JSR	F_D547
			JMP	POLL

;-------

C_D296			LDAB	M00BF
			CMPB	#$10
			BCS	3F
			JSR	F_D3A7
			BVS	2F
			BCC	1F
			JMP	C_D104
1			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
2			JSR	F_D35B
			JMP	C_D104
3			LDAB	M00C0
			CMPB	#$03
			BEQ	5F
			CMPB	#$04
			BEQ	6F
			JSR	F_D3A1
			BCC	4F
			JMP	C_D104
4			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
5			JSR	F_D520
			JMP	POLL
6			JSR	F_D547
			JMP	POLL

;-------

C_D2D6			LDAB	M00C0
			CMPB	#$03
			BEQ	3F
			CMPB	#$04
			BEQ	4F
			JSR	F_D3A1
			BVS	1F
			BCC	2F
			JMP	C_D104
1			JSR	F_D4C5
			BCC	2F
			JMP	C_D104
2			INC	>MIDI_RX_DATA_COUNT
			JMP	POLL
3			JSR	F_D520
			JMP	POLL
4			JSR	F_D547
			JMP	POLL

;-------

C_D304			LDAB	M00C0
			CMPB	#$03
			BEQ	1F
			CMPB	#$04
			BEQ	2F
			JSR	F_D593
			JMP	POLL
1			JSR	F_D520
			JMP	POLL
2			JSR	F_D547
			JMP	POLL

;-------

C_D320			JSR	F_D730
			JMP	C_D104

;-------

F_D326			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAA	#$01
			STAA	M00CC
			JSR	F_DE39
			CLR	>M00CC
			JSR	F_E16B
			RTS

;-------

F_D33D			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAB	#$0C
			JSR	LCD_WAIT
			STAB	LCD_CMD
			CLR	>M00CC
			JSR	SEND_USER_BANK
			JSR	F_C95A
			JSR	F_C972
			RTS

;-------

F_D35B			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAB	#$0C
			JSR	LCD_WAIT
			STAB	LCD_CMD
			CLR	>M00CC
			LDAB	M00C9
			SUBB	#$78
			ASLB
			LDX	#D_D383
			ABX
			LDX	,X
			JSR	,X
			JSR	F_C95A
			JSR	F_C972
			RTS

D_D383			FDB	SEND_SYSEX_MCRTE0
			FDB	SEND_SYSEX_MCRTE1
			FDB	SEND_SYSEX_SYS0
			FDB	SEND_SYSEX_SYS1
			FDB	SEND_SYSEX_SYS2
			FDB	SEND_SYSEX_PCED
			FDB	SEND_SYSEX_PMEM
			FDB	F_D393

;-------

F_D393			LDAA	#$01
			STAA	M00CC
			JSR	F_DE39
			CLR	>M00CC
			JSR	F_E178
			RTS

;-------

F_D3A1			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$05
			BRA	1F

F_D3A7			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$03
1			CMPB	#$04
			BCS	2F
			BEQ	4F
			CMPB	#$08
			BCS	7F
			BEQ	11F
			BCC	12F
2			LDX	#S_LM
			ABX
			CMPA	,X
			BNE	3F
			CLC
			CLV
			RTS
3			SEC
			CLV
			RTS
4			CMPA	#$38
			BNE	5F
			CLR	>M00C9
			CLC
			CLV
			RTS
5			CMPA	#$4D
			BNE	6F
			STAA	M00C9
			CLC
			CLV
			RTS
6			SEC
			CLV
			RTS
7			TST	>M00C9
			BNE	9F
			LDX	#S_976
			SUBB	#$05
			ABX
			CMPA	,X
			BNE	8F
			CLC
			CLV
			RTS
8			SEC
			CLV
			RTS
9			LDX	#S_CRT
			SUBB	#$05
			ABX
			CMPA	,X
			BNE	10F
			CLC
			CLV
			RTS
10			SEC
			CLV
			RTS
11			STAA	MIDI_RX_DATA_1
			CLC
			CLV
			RTS
12			TAB
			LDAA	MIDI_RX_DATA_1
			XGDX
			TST	>M00C9
			BNE	19F
			CPX	#$5330
			BNE	13F
			LDAA	#$7A
			STAA	M00C9
			CLC
			SEV
			RTS
13			CPX	#$5331
			BNE	14F
			LDAA	#$7B
			STAA	M00C9
			CLC
			SEV
			RTS
14			CPX	#$5332
			BNE	15F
			LDAA	#$7C
			STAA	M00C9
			CLC
			SEV
			RTS
15			CPX	#$5045
			BNE	16F
			LDAA	#$7D
			STAA	M00C9
			CLC
			SEV
			RTS
16			CPX	#$504D
			BNE	17F
			LDAA	#$7E
			STAA	M00C9
			CLC
			SEV
			RTS
17			CPX	#$4145
			BNE	18F
			LDAA	#$7F
			STAA	M00C9
			CLC
			SEV
			RTS
18			SEC
			CLV
			RTS
19			CPX	#$4530
			BNE	20F
			LDAA	#$78
			STAA	M00C9
			CLC
			SEV
			RTS
20			CPX	#$4531
			BNE	21F
			LDAA	#$79
			STAA	M00C9
			CLC
			SEV
			RTS
21			SEC
			CLV
			RTS

S_LM			FCC	"LM  "
S_976			FCC	"976"
S_CRT			FCC	"CRT"

;-------

F_D480			TST	>M00C1
			BNE	2F
			LDAA	M00C2
			CMPA	#$5D
			BNE	2F
			LDAA	#$03
			STAA	M00C9
			TST	>M00DF
			BNE	1F
			LDAB	M7773
			JSR	HI_CALL_19
1			CLR	>MIDI_RX_CRC
			CLC
			RTS
2			SEC
			RTS

;-------

F_D4A1			TST	SYS_MLOCK
			BEQ	1F
			JSR	F_D879
			BRA	2F
1			LDAA	M00C1
			DECA
			CMPA	#$20
			BCC	2F
			TST	>M00C2
			BNE	2F
			LDAA	#$04
			STAA	M00C9
			CLR	>M00C8
			CLR	>MIDI_RX_CRC
			CLC
			RTS
2			SEC
			RTS

;-------

F_D4C5			LDAB	M00C9
			CMPB	#$7F
			BEQ	1F
			CMPB	#$7D
			BEQ	1F
			CMPB	#$03
			BEQ	1F
			TST	SYS_MLOCK
			BEQ	1F
			JSR	F_D879
			SEC
			RTS
1			SUBB	#$78
			LDX	#D_D508
			ABX
			ASLB
			ABX
			LDAA	M00C1
			LDAB	M00C2
			CMPA	,X
			BNE	3F
			CMPB	$01,X
			BNE	3F
			LDAA	$02,X
			STAA	MIDI_RX_CRC
			LDAB	M00C9
			CMPB	#$7F
			BNE	2F
			LDAB	M7773
			JSR	HI_CALL_19
2			CLR	>M00C8
			CLC
			RTS
3			SEC
			RTS

D_D508			FCB	$00,$22,$84,$02,$0A,$85,$00,$25
			FCB	$3A,$02,$0A,$3B,$00,$41,$3C,$00
			FCB	$78,$4C,$13,$0A,$54,$00,$21,$3D

;-------

F_D520			AIM	#~ECMI,TCSR3
			LDAB	#$01
			STAB	M00B3
			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$05
			CMPB	#$57
			BCC	1F
			LDX	#VCED
			ABX
			STAA	,X
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#$62
			BNE	2F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
2			RTS

;-------

F_D547			AIM	#~ECMI,TCSR3
			LDAB	#$01
			STAB	M00B3
			PSHA
			LDAA	M00C8
			LDAB	#$4E
			MUL
			ADDD	#USER_VOICE
			XGDX
			PULA
			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$05
			CMPB	#$54
			BCC	2F
			CMPB	#$43
			BCS	1F
			CMPB	#$49
			BCS	2F
			SUBB	#$06
1			ABX
			STAA	,X
2			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			INC	>MIDI_RX_DATA_COUNT
			LDAA	MIDI_RX_DATA_COUNT
			CMPA	#$85
			BEQ	3F
			RTS
3			INC	>M00C8
			LDAA	M00C8
			CMPA	M00C1
			BEQ	4F
			CMPA	#$20
			BEQ	4F
			LDAB	#$05
			STAB	MIDI_RX_DATA_COUNT
			RTS
4			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
			RTS

;-------

F_D593			AIM	#~ECMI,TCSR3
			LDAB	#$01
			STAB	M00B3
			LDAB	M00C9
			SUBB	#$78
			LDX	#D_D5A7
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_D5A7			FDB	C_D5B7
			FDB	C_D5D7
			FDB	RECV_SYSEX_SYS0
			FDB	C_D64B
			FDB	C_D694
			FDB	C_D6B4
			FDB	C_D6D4
			FDB	C_D710

;-------

C_D5B7			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			CMPB	#$18
			BCC	1F
			LDX	#MICROTUNE_OCT
			ABX
			STAA	,X
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#$27
			BNE	2F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
2			RTS

;-------

C_D5D7			TST	>M00C8
			BNE	2F
			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			LDX	#MICROTUNE_FULL
			ABX
			STAA	,X
			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			INC	>MIDI_RX_DATA_COUNT
			LDAA	MIDI_RX_DATA_COUNT
			CMPA	#$8F
			BCC	1F
			RTS
1			LDAA	#$01
			STAA	M00C8
			LDAA	#$0F
			STAA	MIDI_RX_DATA_COUNT
			RTS
2			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			LDX	#MICROTUNE_FULL + $80
			ABX
			STAA	,X
			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			INC	>MIDI_RX_DATA_COUNT
			LDAA	MIDI_RX_DATA_COUNT
			CMPA	#$8F
			BNE	3F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
3			RTS

;-------

RECV_SYSEX_SYS0		LDAB	MIDI_RX_DATA_COUNT	; B <- receive count
			SUBB	#$0F			; subtract header length
			CMPB	#$0B			; B >= 11 ?
			BCC	1F			; yes? branch
			LDX	#SYS_PARAMS		; X <- sys param table
			ABX				; X <- X + B
			STAA	,X			; save data
			ADDA	MIDI_RX_CRC		; add to running CRC
			STAA	MIDI_RX_CRC		; save to running CRC
			INC	>MIDI_RX_DATA_COUNT	; increase receive count
			RTS				; done
1			CMPB	#$1B			; B >= 27
			BCC	2F			; yes? branch
			LDX	#GREETING - 11		; X <- greeting string
			ABX				; X <- X + B
			STAA	,X			; save data
2			ADDA	MIDI_RX_CRC		; add to running CRC
			STAA	MIDI_RX_CRC		; save to running CRC
			LDAA	MIDI_RX_DATA_COUNT	; A <- receive count
			INCA				; A <- A + 1
			STAA	MIDI_RX_DATA_COUNT	; save receive count
			CMPA	#$2A			; is it 42 ?
			BNE	3F			; no, we're done
			LDAA	#$FA			; A <- $FA
			STAA	MIDI_RX_DATA_COUNT	; save to receive count to mark EOX
3			RTS

;-------

C_D64B			LDX	#PROG_CHANGES
			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			ABX
			TST	>M00C8
			BNE	3F
			BITA	#$01
			BNE	1F
			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	,X
			ANDA	#$7F
			STAA	,X
			BRA	2F
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	,X
			ORAA	#$80
			STAA	,X
2			COM	>M00C8
			RTS
3			TAB
			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			TBA
			LDAB	,X
			ANDB	#$80
			ABA
			STAA	,X
			COM	>M00C8
			INC	>MIDI_RX_DATA_COUNT
			LDAB	MIDI_RX_DATA_COUNT
			CMPB	#$8F
			BNE	4F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
4			RTS

;-------

C_D694			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			CMPB	#$37
			BCC	1F
			LDX	#EFFECTS_PARAMS
			ABX
			STAA	,X
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#$46
			BNE	2F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
2			RTS

;-------
;
; saves incoming data to performance edit buffer
;
C_D6B4			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			CMPB	#110
			BCC	1F
			LDX	#PFM_EDIT_BUF
			ABX
			STAA	,X
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#125
			BNE	2F
			LDAA	#-6
			STAA	MIDI_RX_DATA_COUNT
2			RTS

;-------

C_D6D4			PSHA
			LDAA	M00C8
			CMPA	#$18
			BCS	1F
			PULA
			BRA	2F
1			LDAB	#$4C
			MUL
			ADDD	#USER_PFM
			XGDX
			PULA
			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			CMPB	#$4C
			BCC	2F
			ABX
			STAA	,X
2			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#$5B
			BNE	3F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
			LDAA	M00C8
			INCA
			STAA	M00C8
			CMPA	#$20
			BEQ	3F
			LDAB	#$0F
			STAB	MIDI_RX_DATA_COUNT
3			RTS

;-------

C_D710			LDAB	MIDI_RX_DATA_COUNT
			SUBB	#$0F
			CMPB	#$17
			BCC	1F
			LDX	#ACED
			ABX
			STAA	,X
1			ADDA	MIDI_RX_CRC
			STAA	MIDI_RX_CRC
			LDAA	MIDI_RX_DATA_COUNT
			INCA
			STAA	MIDI_RX_DATA_COUNT
			CMPA	#$26
			BNE	2F
			LDAA	#$FA
			STAA	MIDI_RX_DATA_COUNT
2			RTS

;-------

F_D730			CLR	>M00B3
			ADDA	MIDI_RX_CRC
			ANDA	#$7F
			BEQ	1F
			SUBA	#$30
			ANDA	#$7F
			BEQ	1F
			ADDA	#$70
			ANDA	#$7F
			BEQ	1F
			JSR	F_D87E
			RTS
1			LDAB	M00C9
			CMPB	#$03
			BEQ	2F
			CMPB	#$04
			BEQ	3F
			SUBB	#$78
			LDX	#D_D764
			ASLB
			ABX
			LDX	,X
			JMP	,X
2			JMP	5F
3			JMP	9F

D_D764			FDB	C_D7D4
			FDB	C_D7E7
			FDB	C_D7FA
			FDB	C_D80D
			FDB	C_D81D
			FDB	C_D830
			FDB	C_D863
			FDB	C_D874

5			TST	>M00DF
			BNE	6F
			JSR	CLEAR_ACED
6			CLR	>M00DF
			JSR	LO_CALL_08
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAA	M7772
			BITA	#$04
			BEQ	7F
			LDX	#VCED
			STX	SPTR
			LDX	#M69C1
			JSR	LO_CALL_06
			JSR	F_B805
			BRA	8F
7			JSR	F_91FE
8			LDAA	#$01
			STAA	VOICE_EDITED
			CLR	VOICE_COMPARE
			LDD	#$0101
			STD	OP_ENABLE
			STD	OP_ENABLE + 2
			JSR	F_C95A
			JSR	F_C972
			RTS
9			LDAA	M7772
			BITA	#$04
			BNE	10F
			JSR	HI_CALL_1B
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
10			JSR	F_D883
			RTS

;-------

C_D7D4			JSR	HI_CALL_09
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_D8BB
			JSR	F_D883
			RTS

;-------

C_D7E7			JSR	HI_CALL_09
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_D8BB
			JSR	F_D883
			RTS

;-------

C_D7FA			JSR	HI_CALL_09
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_D8BB
			JSR	F_D883
			RTS

;-------

C_D80D			JSR	HI_CALL_09
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_D883
			RTS

;-------

C_D81D			JSR	HI_CALL_09
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	F_D8BB
			JSR	F_D883
			RTS

;-------

C_D830			LDAA	#8			; 8 instruments
			LDAB	#12			; 12 bytes per
			LDX	#PFM_EDIT_BUF		; table base
1			ASL	$02,X			; voice number (MSB -> C)
			ASR	$01,X			;
			ROR	$02,X			; restore voice number
			ABX				; jump to next instrument
			DECA				; -
			BNE	1B			; -
			JSR	SET_NAME_RANGE
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			LDAA	M7772
			BITA	#$04
			BEQ	2F
			JSR	F_B805
2			LDAA	#$01
			STAA	PFM_EDITED
			JSR	F_C95A
			JSR	F_C972
			RTS

;-------

C_D863			LDAA	M7772
			BITA	#$04
			BEQ	1F
			LDAB	M7779
			JSR	F_B7D6
1			JSR	F_D883
			RTS

;-------

C_D874			LDAA	#$01
			STAA	M00DF
			RTS

;-------

F_D879			LDX	#S_MEM_PROTECTED
			BRA	4F

F_D87E			LDX	#S_MIDI_CSUM_ERROR
			BRA	4F

F_D883			JSR	F_C95A
			LDX	#S_MIDI_RECEIVED

4			JSR	LCD_OUT
			LDAA	#$0C
			JSR	LCD_WAIT
			STAA	LCD_CMD
			LDAA	#$01
			STAA	M0057
			RTS

S_MIDI_RECEIVED		FCC	" Midi Received  "
			FCB	$00

S_MIDI_CSUM_ERROR	FCC	"Midi CSUM Error "
			FCB	$00

;-------

F_D8BB			JSR	HI_CALL_0F
			JSR	HI_CALL_18
			JSR	CALC_EF2R_VALUE
			AIM	#~ECMI,TCSR3
			JSR	HI_CALL_15
			JSR	HI_CALL_16
			OIM	#ECMI,TCSR3
			RTS

;-------

CLEAR_ACED		LDX	#ACED
1			CLR	,X
			INX
			CPX	#ACED_END
			BNE	1B
			RTS

;-------

F_D8DD			STAA	MIDI_RX_DATA_1
			LDAB	M00C1
			LDAA	M00C0
			CMPA	#$10
			BEQ	5F
			CMPA	#$12
			BEQ	3F
			CMPB	#$17
			BCC	1F
			JSR	F_D93E
			RTS
1			CMPB	#$40
			BCS	2F
			CMPB	#$4C
			BCC	2F
			JSR	F_DF29
			RTS				; merge these
2			RTS
3			CMPB	#$57
			BCS	4F
			CMPB	#$5D
			BEQ	4F
			RTS
4			JSR	F_DA3F
			RTS
5			CMPB	#$6E
			BCC	6F
			JSR	F_DBBD
			RTS
6			CMPB	#$7B
			BNE	7F
			JSR	F_DC7F
			RTS
7			CMPB	#$7C
			BNE	8F
			JSR	F_DD1C
			RTS
8			CMPB	#$7D
			BNE	9F
			JSR	F_DD7E
			RTS
9			CMPB	#$7E
			BNE	10F
			JSR	F_DDAC
			RTS
10			CMPB	#$7F
			BNE	11F
			JSR	F_DCF6
			RTS				; merge these
11			RTS

;-------

F_D93E			PSHB
			JSR	F_DE08
			PULB
			CMPB	#$13
			BCS	1F
			JMP	C_DA05
1			CMPB	#$05
			BCS	2F
			CMPB	#$0A
			BCS	3F
			CMPB	#$0F
			BCS	4F
			BRA	5F
2			LDAA	#$03
			STAA	M778C
			BRA	6F
3			SUBB	#$05
			LDAA	#$01
			STAA	M778C
			BRA	6F
4			SUBB	#$0A
			LDAA	#$02
			STAA	M778C
			BRA	6F
5			SUBB	#$0F
			CLR	M778C
6			LDX	#D_D97F
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_D97F			FDB	C_D989
			FDB	C_D9A6
			FDB	C_D9C2
			FDB	C_D9E2
			FDB	C_D9F0

C_D989			LDAA	#$01
			STAA	M7788
			LDAA	#$04
			STAA	M7774
			LDAA	#$03
			LDAB	M778C
			MUL
			INCB
			STAB	M7789
			CLR	M778C
			LDAA	M00C2
			JSR	F_DE9D
			RTS

;-------

C_D9A6			LDAA	#$01
			STAA	M7788
			LDAA	#$04
			STAA	M7774
			LDAA	#$03
			LDAB	M778C
			MUL
			STAB	M7789
			CLR	M778C
			LDAA	M00C2
			JSR	F_DE9D
			RTS

;-------

C_D9C2			LDAA	#$01
			STAA	M7788
			LDAA	#$04
			STAA	M7774
			LDAA	#$03
			LDAB	M778C
			MUL
			INCB
			INCB
			STAB	M7789
			LDAA	#$01
			STAA	M778C
			LDAA	M00C2
			JSR	F_DE9D
			RTS

;-------

C_D9E2			CLR	M7788
			LDAA	#$05
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE96
			RTS

;-------

C_D9F0			LDAA	#$01
			STAA	M7788
			LDAA	#$07
			STAA	M7774
			LDAA	#$05
			STAA	M7789
			LDAA	M00C2
			JSR	F_DE9D
			RTS

;--------

C_DA05			CMPB	#$13
			BNE	1F
			RTS
1			CMPB	#$14
			BEQ	2F
			CMPB	#$15
			BEQ	3F
			CMPB	#$16
			BEQ	4F
			RTS
2			LDAA	#$0E
			STAA	M7789
			BRA	5F
3			LDAA	#$05
			STAA	M7789
			BRA	5F
4			LDAA	#$06
			STAA	M7789
			BRA	5F			; no-op jump
5			LDAA	#$01
			STAA	M7788
			CLR	M778C
			LDAA	#$0A
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE9D
			RTS

;-------

F_DA3F			PSHB
			JSR	F_DE08
			PULB
			CMPB	#$34
			BCS	1F
			JMP	11F
1			CMPB	#$0D
			BCS	2F
			CMPB	#$1A
			BCS	3F
			CMPB	#$27
			BCS	4F
			BRA	5F
2			LDAA	#$03
			STAA	M778C
			BRA	6F
3			SUBB	#$0D
			LDAA	#$01
			STAA	M778C
			BRA	6F
4			SUBB	#$1A
			LDAA	#$02
			STAA	M778C
			BRA	6F
5			SUBB	#$27
			CLR	M778C
6			CMPB	#$0A
			BNE	7F
			CLR	M7788
			LDAA	#$08
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE96
			RTS
7			CMPB	#$0C
			BNE	8F
			CLR	M7788
			LDAA	#$06
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE96
			RTS
8			CMPB	#$0B
			BNE	9F
			LDAA	#$01
			STAA	M7788
			LDAA	#$04
			STAA	M7774
			LDAA	M778C
			LDAB	#$03
			MUL
			INCB
			STAB	M7789
			LDAA	#$01
			STAA	M778C
			LDAA	M00C2
			JSR	F_DE9D
			RTS
9			CMPB	#$08
			BNE	10F
			INC	M778C
10			LDX	#D_DB7B
			ASLB
			ABX
			LDAA	,X
			STAA	M7774
			LDAA	$01,X
			STAA	M7789
			LDAA	#$01
			STAA	M7788
			LDAA	M00C2
			JSR	F_DE9D
			RTS
11			CMPB	#$5D
			BEQ	15F
			CMPB	#$57
			BCC	12F
			CMPB	#$36
			BCC	13F
			CLR	M7788
			SUBB	#$34
			STAB	M7774
			CLR	M778C
			LDAA	M00C2
			JSR	F_DE96
12			RTS
13			CMPB	#$44
			BEQ	12B
			CMPB	#$45
			BEQ	12B
			CMPB	#$46
			BEQ	12B
			CMPB	#$4D
			BCS	14F
			TBA
			SUBA	#$4D
			STAA	M778C
			LDAA	#$01
			STAA	M7788
			LDAA	#$0A
			STAA	M7774
			LDAA	#$0F
			STAA	M7789
			LDAA	M00C2
			JSR	F_DE9D
			RTS
14			SUBB	#$36
			ASLB
			LDX	#D_DB8F
			ABX
			LDAA	,X
			STAA	M7774
			LDAA	$01,X
			STAA	M7789
			LDAA	#$01
			STAA	M7788
			CLR	M778C
			LDAA	M00C2
			JSR	F_DE9D
			RTS
15			CLR	OP_ENABLE
			CLR	OP_ENABLE + 1
			CLR	OP_ENABLE + 2
			CLR	OP_ENABLE + 3
			LDAA	M00C2
			LSRA
			ROL	OP_ENABLE + 3
			LSRA
			ROL	OP_ENABLE + 2
			LSRA
			ROL	OP_ENABLE + 1
			LSRA
			ROL	OP_ENABLE
			LDAA	#$01
			STAA	M778C
			CLR	M7788
			CLR	M7774
			CLRB
			JSR	F_B1DD
			JSR	F_C95A
			JSR	F_C972
			RTS
			RTS

D_DB7B			FCB	$07,$00,$07,$01,$07,$03,$07,$04
			FCB	$07,$02,$09,$01,$09,$00,$03,$02
			FCB	$03,$01,$03,$03

D_DB8F			FCB	$02,$01,$02,$02,$02,$03,$02,$04
			FCB	$02,$05,$02,$00,$03,$00,$03,$01
			FCB	$0A,$0D,$0A,$00,$0A,$01,$0A,$02
			FCB	$0A,$03,$0A,$04,$00,$00,$00,$00
			FCB	$00,$00,$0A,$07,$0A,$08,$0A,$09
			FCB	$0A,$0A,$0A,$0B,$0A,$0C

;-------

F_DBBD			PSHB
			JSR	F_DE65
			PULB
			CMPB	#$60
			BCS	1F
			JMP	C_DC24
1			CLRA
2			SUBB	#$0C
			BCS	3F
			INCA
			BRA	2B
3			ADDB	#$0C
			STAA	M778C
			CMPB	#$0B
			BNE	4F
			INC	M778C
			INC	M778C
4			CMPB	#$01
			BNE	7F
			PSHB
			LDAB	M00C2
			BNE	5F
			CLRB
			BRA	6F
5			LDAB	#$80
6			STAB	M00C2
			PULB
7			CMPB	#$02
			BNE	8F
			PSHB
			LDAB	M00C1
			LDX	#PFM_EDIT_BUF
			ABX
			LDAB	,X
			LDAA	M00C2
			ANDB	#$80
			ABA
			STAA	M00C2
			PULB
8			CLR	M7788
			LDX	#D_DC18
			ABX
			LDAA	,X
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE96
			RTS

D_DC18			FCB	$29,$2A,$2A,$2B,$2C,$2D,$2E,$2F
			FCB	$30,$31,$32,$33

;-------

C_DC24			CMPB	#$64
			BCC	6F
			CMPB	#$60
			BEQ	1F
			CMPB	#$61
			BEQ	2F
			CMPB	#$62
			BEQ	3F
			BRA	4F
1			CLR	M778C
			LDAA	#$33
			STAA	M7774
			BRA	5F
2			LDAA	#$28
			STAA	M7774
			CLR	M778C
			BRA	5F
3			LDAA	#$34
			STAA	M7774
			CLR	M778C
			BRA	5F
4			LDAA	#$33
			STAA	M7774
			LDAA	#$01
			STAA	M778C
5			CLR	M7788
			LDAA	M00C2
			JSR	F_DE96
			RTS
6			CMPB	#$6E
			BCS	7F
			RTS
7			SUBB	#$64
			STAB	M778C
			CLR	M7788
			LDAA	#$35
			STAA	M7774
			LDAA	M00C2
			JSR	F_DE96
			RTS

;-------

F_DC7F			LDAB	M00C2
			CMPB	#$1B
			BCS	1F
			RTS
1			PSHB
			JSR	F_DDD7
			PULB
			CMPB	#$0B
			BCS	2F
			JMP	C_DCE2
2			CLR	M778C
			TSTB
			BNE	3F
			LDAA	#$14
			STAA	M7774
			BRA	5F
3			CMPB	#$08
			BNE	4F
			LDAA	#$16
			STAA	M7774
			BRA	5F
4			CMPB	#$09
			BNE	6F
			LDAA	#$17
			STAA	M7774
5			CLR	M7788
			LDAA	>M00C3
			JSR	F_DE96
			RTS
6			DECB
			LDAA	#$01
			STAA	M7788
			LDAA	#$15
			STAA	M7774
			LDX	#D_DCD8
			ABX
			LDAA	,X
			STAA	M7789
			LDAA	>M00C3
			JSR	F_DE9D
			RTS

D_DCD8			FCB	$00,$01,$02,$03,$05,$06,$07,$00
			FCB	$00,$04

;-------

C_DCE2			SUBB	#$0B
			STAB	M778C
			CLR	M7788
			LDAA	#$1F
			STAA	M7774
			LDAA	>M00C3
			JSR	F_DE96
			RTS

;-------

F_DCF6			JSR	F_DDD7
			LDAA	#$02
			STAA	M7788
			LDAA	#$15
			STAA	M7774
			CLR	M778C
			LDAA	#$0C
			STAA	M7789
			LDAA	M00C2
			STAA	M778A
			LDAA	>M00C3
			LDAB	MIDI_RX_DATA_1
			ASLB
			LSRD
			TBA
			JSR	F_DEC9
			RTS

;-------

F_DD1C			LDAB	M00C2
			CMPB	#$37
			BCS	1F
			RTS
1			JSR	F_DDD7
			LDAB	M00C2
			CMPB	#$07
			BCC	2F
			LDAA	#$01
			STAA	M7788
			LDX	#M_DD4A
			ASLB
			ABX
			LDAA	,X
			STAA	M7774
			LDAA	$01,X
			STAA	M7789
			CLR	M778C
			LDAA	>M00C3
			JSR	F_DE9D
			RTS

M_DD4A			FCB	$19,$00,$19,$01,$19,$02,$19,$03
			FCB	$1A,$01,$1A,$00,$1A,$02

2			LDAA	#$02
			STAA	M7788
			LDAA	#$1B
			STAA	M7774
			CLR	M778A
			SUBB	#$07
			CLRA
3			SUBB	#$04
			BCS	4F
			INCA
			BRA	3B
4			ADDB	#$04
			STAA	M7789
			STAB	M778C
			LDAA	>M00C3
			JSR	F_DEC9
			RTS

;-------

F_DD7E			JSR	F_DDD7
			LDAB	M00C2
			CMPB	#$0C
			BCS	1F
			RTS
1			LDAA	#$02
			STAA	M7788
			LDAA	#$1C
			STAA	M7774
			CLR	M7789
			STAB	M778A
			CLR	M778C
			LDAA	>M00C3
			JSR	F_DEC9
			LDAA	#$01
			STAA	M778C
			LDAA	MIDI_RX_DATA_1
			JSR	F_DEC9
			RTS

;-------

F_DDAC			JSR	F_DDD7
			LDAA	#$02
			STAA	M7788
			LDAA	#$1C
			STAA	M7774
			LDAA	#$02
			STAA	M7789
			LDAA	M00C2
			STAA	M778A
			CLR	M778C
			LDAA	>M00C3
			JSR	F_DEC9
			LDAA	#$01
			STAA	M778C
			LDAA	MIDI_RX_DATA_1
			JSR	F_DEC9
			RTS

;------

F_DDD7			LDAB	M7772
			ANDB	#$07
			STAB	M7772
			LDX	#D_DDE8
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_DDE8			FDB	C_DE07
			FDB	C_DE02
			FDB	C_DE02
			FDB	C_DE07
			FDB	C_DDF8
			FDB	C_DDF8
			FDB	C_DDFD
			FDB	C_DE07

C_DDF8			LDAB	#$07
			JSR	F_8A08

C_DDFD			LDAB	#$07
			JSR	F_8A08

C_DE02			LDAB	#$05
			JSR	F_8A08

C_DE07			RTS

;-------

F_DE08			LDAB	M7772
			ANDB	#$07
			STAB	M7772
			LDX	#D_DE19
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_DE19			FDB	C_DE33
			FDB	C_DE38
			FDB	C_DE33
			FDB	C_DE38
			FDB	C_DE29
			FDB	C_DE29
			FDB	C_DE2E
			FDB	C_DE38

C_DE29			LDAB	#$07
			JSR	F_8A08

C_DE2E			LDAB	#$07
			JSR	F_8A08

C_DE33			LDAB	#$06
			JSR	F_8A08

C_DE38			RTS

;-------

F_DE39			LDAB	M7772
			ANDB	#$07
			STAB	M7772
			LDX	#D_DE4A
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_DE4A			FDB	C_DE64
			FDB	C_DE64
			FDB	C_DE64
			FDB	C_DE64
			FDB	C_DE5A
			FDB	C_DE5A
			FDB	C_DE5F
			FDB	C_DE64

C_DE5A			LDAB	#$07
			JSR	F_8A08

C_DE5F			LDAB	#$07
			JSR	F_8A08

C_DE64			RTS

;-------

F_DE65			LDAB	M7772
			ANDB	#$07
			STAB	M7772
			LDX	#D_DE76
			ASLB
			ABX
			LDX	,X
			JMP	,X

D_DE76			FDB	C_DE86
			FDB	C_DE86
			FDB	C_DE8B
			FDB	C_DE95
			FDB	C_DE90
			FDB	C_DE95
			FDB	C_DE90
			FDB	C_DE95

C_DE86			LDAB	#$07
			JSR	F_8A08

C_DE8B			LDAB	#$07
			JSR	F_8A08

C_DE90			LDAB	#$06
			JSR	F_8A08

C_DE95			RTS

;-------

F_DE96			CLR	M7788
			JSR	F_DF0D
			RTS

;-------

F_DE9D			PSHA
			LDAB	M778C
			PSHB
			LDAB	M7789
			PSHB
			CLR	M7788
			CLR	M778C
			LDAB	M7774
			JSR	F_B1DD
			LDAB	#$01
			JSR	F_B931
			PULB
			STAB	M7789
			PULB
			STAB	M778C
			LDAA	#$01
			STAA	M7788
			PULA
			JSR	F_DF0D
			RTS

;-------

F_DEC9			PSHA
			LDAB	M778A
			PSHB
			LDAB	M778C
			PSHB
			LDAB	M7789
			PSHB
			CLR	M7788
			CLR	M778C
			LDAB	M7774
			JSR	F_B1DD
			LDAB	#$01
			JSR	F_B931
			PULB
			STAB	M7789
			LDAA	#$01
			STAA	M7788
			LDAB	M7774
			JSR	F_B1DD
			LDAB	#$01
			JSR	F_B931
			PULB
			STAB	M778C
			PULB
			STAB	M778A
			LDAB	#$02
			STAB	M7788
			PULA
			JSR	F_DF0D
			RTS

;-------

F_DF0D			PSHA
			LDAB	M7774
			JSR	F_B1DD
			PULA
			CMPA	M7783
			BLS	1F
			BRA	2F
1			LDX	M7781
			JSR	F_BE61
2			JSR	F_C95A
			JSR	F_C972
			RTS

;-------

F_DF29			CLR	>M00CC
			LDAA	M00C2
			LDAB	M00C1
			CMPB	#$41
			BEQ	6F
			CMPB	#$49
			BEQ	8F
			CMPB	#$4A
			BEQ	10F
			CMPA	#$40
			BCC	1F
			JMP	13F			; RTS
1			CMPB	#$40
			BNE	2F
			JMP	hdlr_RST
2			BCC	3F
			JMP	13F			; RTS
3			CMPB	#$4C
			BCS	4F
			JMP	13F			; RTS
4			SUBB	#$40
			LDX	#D_DF87
			ABX
			LDAB	,X
5			JSR	F_8A08
			BRA	13F			; RTS
6			CMPA	#$40
			BCC	7F
			LDAB	#$04
			BRA	5B
7			LDAB	#$03
			BRA	5B
8			CMPA	#$40
			BCC	9F
			LDAB	#$0D
			BRA	5B
9			LDAB	#$0A
			BRA	5B
10			CMPA	#$40
			BCC	11F
			LDAB	#$0E
			BRA	5B
11			LDAB	#$0B
			BRA	5B

D_DF87			FCB	$00,$00,$05,$06,$07,$08,$09,$02
			FCB	$01,$00,$00,$0C

13			RTS

D_VELOCITY_MAP		FCB	$FE,$C0,$B4,$AE,$A8,$A2,$9E,$98
			FCB	$94,$90,$8D,$8A,$86,$82,$80,$7D
			FCB	$7A,$77,$74,$72,$70,$6D,$6B,$69
			FCB	$67,$65,$63,$61,$5F,$5D,$5C,$5A
			FCB	$58,$56,$55,$53,$52,$51,$4F,$4E
			FCB	$4C,$4B,$4A,$48,$47,$46,$44,$43
			FCB	$42,$41,$40,$3F,$3E,$3C,$3B,$3A
			FCB	$39,$38,$37,$36,$35,$34,$32,$31
			FCB	$30,$2F,$2E,$2D,$2C,$2B,$2A,$29
			FCB	$28,$27,$26,$25,$24,$23,$22,$21
			FCB	$20,$1F,$1E,$1D,$1C,$1B,$1A,$1A
			FCB	$19,$18,$17,$16,$16,$15,$14,$13
			FCB	$12,$12,$11,$10,$10,$0F,$0E,$0E
			FCB	$0D,$0C,$0C,$0B,$0B,$0A,$09,$09
			FCB	$08,$07,$07,$06,$06,$05,$05,$04
			FCB	$04,$03,$03,$02,$02,$01,$01,$00

;-------
;
; Serial interrupt handler
;
SIO			LDAA	XROM			; remember XROM state
			PSHA

			LDAA	TRCSR			; get SIO status
			ASLA				; RDRF -> C
			BCS	_SIO_RX			;
			ASLA				; ORFE -> C, TDRE -> N
			BCS	_SIO_OVERRUN
			BMI	_SIO_TX			;
			BRA	_SIO_EXIT

_SIO_RX			LDAA	RDR			; read received data
			LDX	PTR_RX_TAIL		; store at end of ring buffer
			STAA	,X			; -
			INX				; calc next position
			CPX	#MIDI_RXBUF_END		; check for buffer end
			BNE	1F
			LDX	#MIDI_RXBUF		; go to buffer start
1			CPX	PTR_RX			; check for RX buffer overflow
			BEQ	_SIO_RX_FULL
			STX	PTR_RX_TAIL		; save the pointer
			BRA	_SIO_EXIT		; and we're done

_SIO_RX_FULL		LDAA	#$01			; handle input buffer overflow
			STAA	MIDI_RX_ERR
			JSR	MIDI_INIT_RX
			BRA	_SIO_EXIT

_SIO_TX			LDX	PTR_TX			; check if there's anything to send
			CPX	PTR_TX_TAIL		; -
			BEQ	_SIO_TX_DONE		; nope?  done...
			LDAA	,X			; get the next TX byte
			BPL	3F			; branch if it's MIDI data
			CMPA	#SYX			; SysEx?
			BEQ	2F
			CMPA	#SENSE			; Active Sense?
			BEQ	2F
2			STAA	MIDI_TX_CMD		; TX running status - not used
3			STAA	TDR			; transmit the data
			INX				; calc next position
			CPX	#MIDI_RXBUF		; check for buffer end
			BNE	4F
			LDX	#MIDI_TXBUF		; wrap to beginning of buffer
4			STX	PTR_TX			; save the pointer
			BRA	_SIO_EXIT

_SIO_TX_DONE		LDAA	#TDRE|RIE|RE|TE		; reset TRCSR (no TX IRQ)
			STAA	TRCSR
			BRA	_SIO_EXIT

_SIO_OVERRUN		LDAA	#$02			; handle input overrun
			STAA	MIDI_RX_ERR
			JSR	MIDI_INIT_RX
			LDAA	RDR			; flush RDR

_SIO_EXIT		PULA				; restore XROM state
			STAA	XROM			;
			RTS

;-------

MIDI_INIT		LDAA	#CC011|SS000		; CC = %011, SS = %000
			STAA	RMCR			; rate = E / 16 (500k / 16 = 31250)
			LDAA	#TDRE|RIE|RE|TE		; reset TRCSR (no TX IRQ)
			STAA	TRCSR			; -
			LDAA	TRCSR			; clear IRQ flags
			LDAA	RDR			; clear receive data register
			LDX	#MIDI_TXBUF		; clear MIDI TX buffer
			STX	PTR_TX_TAIL		; -
			STX	PTR_TX			; -
			LDAA	#EOX			; pretend last command was EOX
			STAA	MIDI_RX_CMD		;
			LDX	#MIDI_RXBUF		; clear MIDI RX buffer
			STX	PTR_RX_TAIL		; -
			STX	PTR_RX			; -
			RTS

;-------

MIDI_INIT_RX		LDAA	#EOX
			STAA	MIDI_RX_CMD
			LDX	#MIDI_RXBUF
			STX	PTR_RX_TAIL
			STX	PTR_RX
			RTS

;-------

MIDI_SEND_PGM_CNG	TST	SYS_PCINF
			BEQ	1F
			TST	SYS_SYSAVL
			BNE	1F
			TST	>M00CC
			BNE	1F
			LDAA	SYS_MIDTCH
			ORAA	#$C0
			JSR	MIDI_SEND
			TBA
			ANDA	#$7F
			JSR	MIDI_SEND
1			RTS

;-------
;
; NO-OP
;
; B = CC number
; A = CC value (0 .. 255 - LSB ignored)
;

MIDI_SEND_CC		RTS
			PSHA
			CMPB	#CC_SUSTAIN
			BEQ	1F
			CMPB	#CC_MONO_ON
			BEQ	1F
			CMPB	#CC_POLY_ON
			BEQ	1F
			TST	SYS_COINF
			BEQ	2F
1			LDAA	SYS_MIDTCH
			ORAA	#$B0			; $Bx = MIDI CC
			JSR	MIDI_SEND
			TBA
			JSR	MIDI_SEND
			PULA
			LSRA
			JSR	MIDI_SEND
			RTS
2			PULA
			RTS

;-------

F_E0E9			RTS
			PSHB
			ADDB	#$5F
			LDAA	#$FF
			BSR	MIDI_SEND_CC
			PULB
			RTS

;-------

F_E0F3			RTS
			TST	VCED_POLYMODE
			BEQ	1F
			LDAB	#$7E
			LDAA	#$02
			BRA	2F
1			LDAB	#$7F
			CLRA
2			JMP	MIDI_SEND_CC

;-------

MIDI_SEND_SENSE		RTS
			LDAA	#SENSE
			JSR	MIDI_SEND
			RTS

;-------

F_E10C			RTS

			RTS

F_E10E			RTS

F_E10F			RTS

F_E110			RTS

F_E111			RTS

F_E112			RTS

F_E113			RTS

F_E114			RTS

F_E115			RTS

HI_CALL_06		RTS

HI_CALL_0D		RTS

HI_CALL_04		RTS

HI_CALL_0A		RTS

			RTS

			RTS

			RTS

;-------

SEND_USER_BANK		TST	SYS_SYSAVL
			BEQ	2F
			TST	>M00CC
			BNE	2F
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			CLR	>SYSEX_INDEX
			JSR	SEND_SYSEX_VMEM_HDR
1			LDAA	SYSEX_INDEX
			LDAB	#$4E
			MUL
			ADDD	#USER_VOICE
			XGDX
			JSR	SEND_SYSEX_VMEM
			LDAB	SYSEX_INDEX
			INCB
			STAB	SYSEX_INDEX
			CMPB	#$20
			BNE	1B
			JSR	SEND_SYSEX_END
2			RTS

S_TRANSMITTING		FCC	"Transmitting!!  "
			FCB	$00

;-------

F_E16B			TST	SYS_SYSAVL
			BEQ	3F
			TST	>M00CC
			BNE	3F
			JMP	8F

;-------

F_E178			TST	SYS_SYSAVL
			BEQ	3F
			TST	>M00CC
			BEQ	4F
3			JMP	15F			; -> RTS

4			CLRB
5			LDX	#S_SYSEX_SCED
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$02
			BCS	5B

			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND

6			LDX	#S_SYSEX_SCED
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0F
			BCS	6B

			LDAA	#$3D
			STAA	MIDI_TX_CRC

			LDX	#ACED
7			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#ACED_END
			BNE	7B
			JSR	SEND_SYSEX_END

8			CLRB
9			LDX	#S_SYSEX_VCED
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$02
			BCS	9B
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
10			LDX	#S_SYSEX_VCED
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$05
			BCS	10B
			CLR	>MIDI_TX_CRC
			LDX	#VCED
11			LDAA	,X
			CPX	#VCED + 70
			BNE	12F
			CLRA
12			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#VCED_END
			BNE	11B
13			LDAA	#99			; send 3x 99
			PSHX
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#ACED + 3
			BNE	13B
14			LDAA	#50			; send 3x 50
			PSHX
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#ACED + 6
			BNE	14B
			JSR	SEND_SYSEX_END
15			RTS

S_SYSEX_VCED		FCB	SYX,MFR_YAMAHA,$03,$00,$5D

S_SYSEX_SCED		FCB	SYX,MFR_YAMAHA,$7E,$00,$21
			FCC	'LM  8976AE'

;-------

SEND_SYSEX_PMEM		TST	SYS_SYSAVL
			BEQ	4F
			TST	>M00CC
			BNE	4F
			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			CLR	>SYSEX_INDEX
			JSR	SEND_SYSEX_PMEM_HDR
1			LDAA	SYSEX_INDEX
			CMPA	#24
			BCS	2F
			LDX	#D_PFM_SINGLE
			BRA	3F
2			LDAB	#76
			MUL
			ADDD	#USER_PFM
			XGDX
3			JSR	SEND_76
			LDAB	SYSEX_INDEX
			INCB
			STAB	SYSEX_INDEX
			CMPB	#32
			BNE	1B
			JSR	SEND_SYSEX_END
4			RTS

;-------

SEND_SYSEX_PMEM_HDR	CLRB
1			LDX	#S_SYSEX_PMEM
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$02
			BCS	1B
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
2			LDX	#S_SYSEX_PMEM
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0F
			BCS	2B
			LDAA	#$54
			STAA	MIDI_TX_CRC
			RTS

S_SYSEX_PMEM		FCB	SYX,MFR_YAMAHA,$7E,$13,$0A
			FCC	'LM  8976PM'

;-------

SEND_76			CLRB
1			PSHB
			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			PULB
			INCB
			CMPB	#76
			BNE	1B
			RTS

;-------

SEND_SYSEX_VMEM_HDR	CLRB
1			LDX	#S_SYSEX_VMEM_HEADER
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$02
			BCS	1B
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
2			LDX	#S_SYSEX_VMEM_HEADER
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$05
			BCS	2B
			CLR	>MIDI_TX_CRC
			RTS

S_SYSEX_VMEM_HEADER	FCB	SYX,MFR_YAMAHA,$04,$20,$00

;-------

			INCLUDE	"inc/sendvmem.asm"

;-------

SEND_SYSEX_PCED		LDAA	#$08
			LDAB	#$0C
			LDX	#PFM_EDIT_BUF
1			ASR	$02,X
			ROL	$02,X
			ROL	$01,X
			ABX
			DECA
			BNE	1B
			TST	SYS_SYSAVL
			BNE	2F
			RTS
2			TST	>M00CC
			BEQ	3F
			RTS
3			LDAA	#SYX
			JSR	MIDI_SEND
			LDAA	#MFR_YAMAHA
			JSR	MIDI_SEND
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
			CLRB
4			LDX	#S_SYSEX_PCED
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0D
			BCS	4B
			LDAA	#$4C
			STAA	MIDI_TX_CRC
			LDX	#PFM_EDIT_BUF
5			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#PFM_EDIT_BUF_END
			BNE	5B
			JSR	SEND_SYSEX_END
			RTS

S_SYSEX_PCED		FCB	$7E,$00,$78
			FCC	'LM  8976PE'

;-------

SEND_SYSEX_MCRTE0	TST	SYS_SYSAVL
			BNE	1F
			RTS
1			TST	>M00CC
			BEQ	2F
			RTS
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			LDAA	#SYX
			JSR	MIDI_SEND
			LDAA	#MFR_YAMAHA
			JSR	MIDI_SEND
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
			CLRB
3			LDX	#S_SYSEX_MCOCT
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0D
			BCS	3B
			LDAA	#$84
			STAA	MIDI_TX_CRC
			LDX	#MICROTUNE_OCT
4			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#MICROTUNE_OCT_END
			BNE	4B
			JSR	SEND_SYSEX_END
			RTS

S_SYSEX_MCOCT		FCB	$7E,$00,$22
			FCC	'LM  MCRTE0'

;-------

SEND_SYSEX_MCRTE1	TST	SYS_SYSAVL
			BNE	1F
			RTS
1			TST	>M00CC
			BEQ	2F
			RTS
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			LDAA	#SYX
			JSR	MIDI_SEND
			LDAA	#MFR_YAMAHA
			JSR	MIDI_SEND
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
			CLRB
3			LDX	#S_SYSEX_MCRTE1
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0D
			BCS	3B
			LDAA	#$85
			STAA	MIDI_TX_CRC
			LDX	#MICROTUNE_FULL
4			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#MICROTUNE_FULL_END
			BNE	4B
			JSR	SEND_SYSEX_END
			RTS

S_SYSEX_MCRTE1		FCB	$7E,$02,$0A
			FCC	'LM  MCRTE1'

;-------

SEND_SYSEX_SYS0		TST	SYS_SYSAVL		; is sysex enabled
			BNE	1F			; yes, carry on...
			RTS				; no? we're done
1			TST	>M00CC			
			BEQ	2F
			RTS
2			JSR	HI_CALL_00		; TBC
			JSR	HI_CALL_01		; TBC
			CLR	>M005A			; TBC
			JSR	LCD_CLR_BOTTOM		; clear the bottom LCD line
			STX	DPTR			; save pointer to LCD buffer
			LDX	#S_TRANSMITTING		; X <- display string
			JSR	LCD_WRITE		; show it
			LDAA	#SYX			; send SYX
			JSR	MIDI_SEND		; -
			LDAA	#MFR_YAMAHA		; send MFR ID
			JSR	MIDI_SEND		; -
			LDAA	SYS_MIDTCH		; send basic transmit channel
			JSR	MIDI_SEND		; -

			CLRB				; B <- 0
3			LDX	#S_SYSEX_SYS0		; X <- sysex header
			ABX				; X < X + B
			LDAA	,X			; send byte at X
			JSR	MIDI_SEND		; -
			INCB				; B <- B + 1
			CMPB	#$0D			; B == 13 ?
			BCS	3B			; no, go around

			LDAA	#$3A			; A <- pre-calculated seed CRC
			STAA	MIDI_TX_CRC		; send it
			LDX	#SYS_PARAMS		; X <- sys params table
4			LDAA	,X			; get data at X
			PSHX				; save X
			ANDA	#$7F			; clear top bit of the data
			TAB				; B <- A
			ADDB	MIDI_TX_CRC		; add to running CRC
			STAB	MIDI_TX_CRC		; and save it
			JSR	MIDI_SEND		; send the data
			PULX				; restore X
			INX				; X <- X + 1
			CPX	#SYS_PARAMS_END		; reached end of the table?
			BNE	4B			; no?  go around
			LDX	#GREETING		; X <- greeting string
5			LDAA	,X			; get data at A
			PSHX				; save X
			ANDA	#$7F			; clear top bit of the data
			TAB				; B <- A
			ADDB	MIDI_TX_CRC		; add to running CRC
			STAB	MIDI_TX_CRC		; and save it
			JSR	MIDI_SEND		; send the data
			PULX				; restore X
			INX				; X <- X + 1
			CPX	#GREETING + $10		; reached end of the string
			BNE	5B			; no? go around
			JSR	SEND_SYSEX_END		; send CRC and EOX
			RTS

S_SYSEX_SYS0		FCB	$7E,$00,$25
			FCC	'LM  8976S0'

;-------

SEND_SYSEX_SYS1		TST	SYS_SYSAVL
			BNE	1F
			RTS
1			TST	>M00CC
			BEQ	2F
			RTS
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			LDAA	#SYX
			JSR	MIDI_SEND
			LDAA	#MFR_YAMAHA
			JSR	MIDI_SEND
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
			CLRB
3			LDX	#S_SYSEX_SYS1
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0D
			BCS	3B
			LDAA	#$3B
			STAA	MIDI_TX_CRC
			LDX	#PROG_CHANGES
4			LDAA	,X
			ROLA
			ROLA
			PSHX
			ANDA	#$01
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			LDAA	,X
			ANDA	#$7F
			PSHX
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#PROG_CHANGES_END
			BNE	4B
			JSR	SEND_SYSEX_END
			RTS

S_SYSEX_SYS1		FCB     $7E,$02,$0A
			FCC	'LM  8976S1'

;-------

SEND_SYSEX_SYS2		TST	SYS_SYSAVL
			BNE	1F
			RTS
1			TST	>M00CC
			BEQ	2F
			RTS
2			JSR	HI_CALL_00
			JSR	HI_CALL_01
			CLR	>M005A
			JSR	LCD_CLR_BOTTOM
			STX	DPTR
			LDX	#S_TRANSMITTING
			JSR	LCD_WRITE
			LDAA	#SYX
			JSR	MIDI_SEND
			LDAA	#MFR_YAMAHA
			JSR	MIDI_SEND
			LDAA	SYS_MIDTCH
			JSR	MIDI_SEND
			CLRB
3			LDX	#S_SYSEX_SYS2
			ABX
			LDAA	,X
			JSR	MIDI_SEND
			INCB
			CMPB	#$0D
			BCS	3B
			LDAA	#$3C
			STAA	MIDI_TX_CRC
			LDX	#EFFECTS_PARAMS
4			LDAA	,X
			PSHX
			ANDA	#$7F
			TAB
			ADDB	MIDI_TX_CRC
			STAB	MIDI_TX_CRC
			JSR	MIDI_SEND
			PULX
			INX
			CPX	#EFFECTS_PARAMS_END
			BNE	4B
			JSR	SEND_SYSEX_END
			RTS

S_SYSEX_SYS2		FCB	$7E,$00,$41
			FCC	'LM  8976S2'

;-------
;
; send microtune Octave (MCRTE0) and full keyboard (MCRTE1)
;
SEND_SYSEX_E0_E1	JSR	SEND_SYSEX_MCRTE0
			JSR	DELAY_30_x_4500
			JSR	SEND_SYSEX_MCRTE1
			RTS

;-------
;
; send program change table (SYS1), effect data (SYS2) + microtuning data
;
SEND_SYSEX_S1_S2_E0_E1	JSR	SEND_SYSEX_SYS1
			JSR	DELAY_30_x_4500
			JSR	SEND_SYSEX_SYS2
			JSR	DELAY_30_x_4500
			JSR	SEND_SYSEX_MCRTE0	; ##OPT## jump to SEND_SYSEX_E0_E1
			JSR	DELAY_30_x_4500
			JSR	SEND_SYSEX_MCRTE1
			RTS

;-------

SEND_SYSEX_END		LDAA	MIDI_TX_CRC		; get running CRC
			NEGA				; negate it
			ANDA	#$7F			; clear top bit
			JSR	MIDI_SEND		; send that
			LDAA	#EOX			; send EOX
			JSR	MIDI_SEND		; -
			RTS

;-------
;
; adds A to the MIDI send queue
; modifies X, CCs.
;
MIDI_SEND		LDX	PTR_TX_TAIL		; get MIDI TX pointer
			STAA	,X			; store data
			CPX	#MIDI_TXBUF_END - 1	; check if we're at buffer end
			BNE	1F			; if not, branch
			LDX	#MIDI_TXBUF - 1		; reset to buffer start - 1
1			INX				; increment 
			CPX	PTR_TX			; buffer full?
			BEQ	MIDI_SEND		; write it again
			STX	PTR_TX_TAIL		; save MIDI TX pointer
			LDAA	#TDRE|RIE|RE|TIE|TE	; enable TX interrupts
			STAA	TRCSR			; -
			RTS

;-------

SHOW_RX_ERR		JSR	F_E6CE
			LDX	#LCD_BUFFER
			STX	DPTR
			LDAA	#$01
			CMPA	MIDI_RX_ERR
			BNE	1F
			LDX	#S_MIDI_BUFFER_FULL
			BRA	2F
1			LDX	#S_MIDI_DATA_ERROR
2			JSR	PUTSTRX
			JSR	LCD_UPDATE
			LDAA	#$0C
			JSR	LCD_WAIT
			STAA	LCD_CMD
			CLR	>MIDI_RX_ERR
			LDAA	#$01
			STAA	M0056
			RTS

S_MIDI_BUFFER_FULL	FCC	"Midi Buffer Full"
			FCB	$00

S_MIDI_DATA_ERROR	FCC	"Midi Data Error!"
			FCB	$00

;-------

F_E6BD			JSR	F_E6CE
			SEI
			SPIN3
			JSR	MIDI_INIT_RX
			CLI
			JSR	F_C7C2
			CLR	>M00CB
			RTS

;-------

F_E6CE			LDAA	TCSR1
			PSHA
			AIM	#~EOCI1,TCSR1
			JSR	HI_CALL_16
			LDAA	#$07
			LDX	#M7CF1
1			TIM	#%00000100,$01,X
			BNE	3F
2			DEX
			DEX
			DECA
			BPL	1B
			BRA	6F
3			PSHA
			PSHX
			LDX	#M793B
			TAB
			ABX
			LDAA	,X
			BMI	5F
			LDAB	M7772
			ANDB	#$04
			BEQ	4F
			TST	PFM_EDIT_ASSIGN
			BEQ	4F
			CLRA
4			STAA	M00E0
			JSR	F_87CA
			PULX
			PULA
			PSHA
			PSHX
			JSR	F_8609
5			PULX
			PULA
			BRA	2B
6			LDAB	M006C
			ASLB
			LDAA	M7772
			ANDA	#$04
			BEQ	7F
			TST	PFM_EDIT_ASSIGN
			BNE	15F
			LDAA	#$08
			MUL
			ADDD	#M7F39
			XGDX
			DEX
			DEX
			LDAB	#$08
			BRA	8F
7			LDX	#M7F39
			ABX
			DEX
			DEX
			LDAB	#$01
8			PSHB
			LDAB	M006C
9			TIM	#%00000100,$01,X
			BNE	11F
10			DEX
			DEX
			DECB
			BNE	9B
			PULB
			DECB
			BNE	8B
			BRA	15F
11			PULA
			PSHA
			PSHB
			PSHX
			DECA
			STAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			STD	M00E1
			TIM	#%00000001,$01,X
			BNE	12F
			LDX	#M7F01
			LDAB	M00E0
			ABX
			LDAA	,X
			STAA	M005A
			TSTA
			BLE	14F
			JSR	F_87CA
			LDAA	M005A
			DECA
			STAA	M005A
			LDX	#M7F01
			LDAB	M00E0
			ABX
			STAA	,X
			BNE	13F
12			LDX	M00E1
			JSR	F_8703
			BRA	14F
13			PULX
			PSHX
			JSR	F_8731
14			PULX
			PULB
			BRA	10B
15			PULA
			STAA	TCSR1
			RTS

;-------

F_E78F			STAB	M00E0
			LDX	#M00F6
			ABX
			TST	,X
			BNE	1F
			JMP	11F
1			JSR	F_87CA
			LDAA	M7772
			ANDA	#$04
			BEQ	2F
			TST	PFM_EDIT_ASSIGN
			BNE	3F
2			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$3F,X
			BEQ	3F
			JMP	7F
3			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAA	,X
			TAB
			LDX	#M7CE3
			ASLB
			ABX
4			LDAB	$01,X
			ANDB	#$7C
			CMPB	#$04
			BEQ	6F
5			INX
			INX
			PSHX
			LDX	#M7EF9
			LDAB	M00E0
			ABX
			CMPA	,X
			PULX
			BEQ	11F
			INCA
			BRA	4B
6			PSHA
			PSHX
			JSR	F_85FA
			PULX
			PULA
			BRA	5B
7			LDX	#M7F01
			LDAB	M00E0
			ABX
			LDAA	,X
			STAA	M005A
			TSTA
			BLE	11F
			LDAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			STD	M00E1
			LDAB	M006C
			DECB
			ASLB
			LDX	M00E1
			ABX
			LDAB	M006C
8			LDAA	$01,X
			ANDA	#$7C
			CMPA	#$04
			BEQ	10F
9			DEX
			DEX
			DECB
			BNE	8B
			BRA	11F
10			PSHB
			PSHX
			JSR	F_86E4
			PULX
			PULB
			BRA	9B
11			RTS

;-------

F_E821			STAB	M00E0
			LDX	#M00F6
			ABX
			TST	,X
			BNE	1F
			JMP	13F
1			JSR	F_87CA
			LDAA	M7772
			ANDA	#$04
			BEQ	2F
			TST	PFM_EDIT_ASSIGN
			BNE	3F
2			LDAA	M00E0
			JSR	GET_VOICE_PTR_A
			TST	$3F,X
			BEQ	3F
			JMP	7F
3			LDX	#M7EF1
			LDAB	M00E0
			ABX
			LDAA	,X
			TAB
			LDX	#M7CE3
			ASLB
			ABX
4			TIM	#%00000100,$01,X
			BNE	6F
5			INX
			INX
			PSHX
			LDX	#M7EF9
			LDAB	M00E0
			ABX
			CMPA	,X
			PULX
			BEQ	13F
			INCA
			BRA	4B
6			LDAB	M0058
			ANDB	#$78
			ANDB	$01,X
			BEQ	5B
			PSHA
			PSHX
			JSR	F_8609
			PULX
			PULA
			BRA	5B
7			LDX	#M7F01
			LDAB	M00E0
			ABX
			LDAA	,X
			STAA	M005A
			LDAA	M00E0
			LDAB	M006C
			ASLB
			MUL
			ADDD	#M7F39
			STD	M00E1
			LDAB	M006C
			DECB
			ASLB
			LDX	M00E1
			ABX
			LDAB	M006C
8			TIM	#%00000100,$01,X
			BNE	10F
9			DEX
			DEX
			DECB
			BNE	8B
			BRA	13F
10			LDAA	M0058
			ANDA	#$78
			ANDA	$01,X
			BEQ	9B
			PSHB
			PSHX
			LDAA	M005A
			DECA
			STAA	M005A
			LDX	#M7F01
			LDAB	M00E0
			ABX
			STAA	,X
			PULX
			PSHX
			BNE	11F
			JSR	F_8703
			BRA	12F
11			JSR	F_8731
12			PULX
			PULB
			BRA	9B
13			RTS

;-------

F_E8D0			TST	>M00AF
			BEQ	1F
			TST	>M00B2
			BNE	1F
			LDD	M00B0
			ADDD	#1
			STD	M00B0
			XGDX
			CPX	#$0060
			BCS	1F
			CLR	>M00AF
			LDD	#0
			STD	M00B0
			LDAA	#$01
			STAA	M00CB
1			RTS

;-------

HI_CALL_15		LDAA	M776B
			ANDA	#$E9
			STAA	M776B
			LDAA	M7772
			BITA	#$04
			BNE	2F
			ANDA	#$07
			BNE	1F
			LDAA	M7788
			BEQ	1F
			LDAA	M7774
			CMPA	#$19
			BEQ	3F
			CMPA	#$1A
			BEQ	4F
			CMPA	#$1B
			BNE	1F
			LDAA	M7788
			CMPA	#$02
			BEQ	5F
			LDAA	M776B
			ANDA	#$F7
			STAA	M776B
			BRA	5F
1			LDAA	M776B
			ANDA	#$F7
			STAA	M776B
			RTS
2			LDAA	PFM_EDIT_EFFECT
			CMPA	#$01
			BEQ	3F
			CMPA	#$02
			BEQ	4F
			CMPA	#$03
			BEQ	5F
			LDAA	M776B
			ANDA	#$F7
			STAA	M776B
			RTS
3			LDAA	M776B
			ORAA	#$10
			STAA	M776B
			RTS
4			JSR	F_E963
			RTS
5			LDAA	M776B
			ORAA	#$04
			STAA	M776B
			RTS

;-------

F_E963			CLRA
			CLRB
			STD	M775D
			STD	M775F
			STD	M7761
			STD	M7763
1			LDX	#M7933
			ABX
			LDAA	,X
			BEQ	3F
			LSRA
			BCS	3F
			ASLA
			LDX	#M793B
			ABX
			PSHB
			LDAB	,X
			TSTB
			BPL	2F
			PULB
			BRA	3F
2			LDX	#M775D
			ABX
			ORAA	#$01
			STAA	,X
			PULB
			LDAA	M776B
			ORAA	#$02
			STAA	M776B
3			INCB
			CMPB	#$08
			BNE	1B
			RTS

;-------

HI_CALL_16		LDAA	M776B
			BITA	#%00010000
			BNE	1F
			BITA	#$02
			BNE	2F
			RTS
1			AIM	#~EOCI1,TCSR1
			CLR	M7751
			CLR	M7752
			CLR	M7753
			CLR	M7754
			LDAA	M776B
			ANDA	#%11111110
			STAA	M776B
			RTS
2			CLR	M7766
			RTS

;-------

F_E9C9			LDAA	M776B
			BITA	#%00010000
			BNE	1F
			BITA	#$02
			BNE	5F
			RTS
1			CMPB	M784E
			BNE	4F
			CLRB
2			LDX	#M7751
			ABX
			TST	,X
			BEQ	3F
			TST	$0C,X
			BNE	3F
			LDAA	#$01
			STAA	$0C,X
			LDAA	EF1T
			INCA
			STAA	$14,X
			LDAA	M776B
			ORAA	#%00000001
			STAA	M776B
3			INCB
			CMPB	#$04
			BNE	2B
			LDAB	M784E
4			RTS
5			LDX	#M775D
			ABX
			TST	,X
			BEQ	6F
			CLR	M7766
6			RTS

;-------

F_EA0E			CMPB	M784E
			BNE	1F
			LDAA	M776B
			BITA	#$10
			BNE	2F
1			RTS
2			LDAA	M784E
			PSHB
			LDAB	>NOTE_NUMBER
			JSR	F_8831
			PULB
			BCC	1B
			TST	M7751
			BEQ	3F
			TST	M7752
			BEQ	4F
			TST	M7753
			BEQ	5F
			TST	M7754
			BEQ	6F
			CLR	M7751
			LDAA	#$0C
			STAA	>M0058
			LDAB	M784E
			JSR	F_E821
3			CLRB
			BRA	7F
4			LDAB	#$01
			BRA	7F
5			LDAB	#$02
			BRA	7F
6			LDAB	#$03
7			PSHB
			LDAB	EF1L
			LDAA	#$A5
			MUL
			ASLD
			ASLD
			COMA
			LSRA
			LDAB	>M00F1
			ABA
			BCS	9F
			BNE	8F
			LDAA	#$01
			BRA	10F
8			CMPA	#$78
			BCS	10F
9			PULB
			LDAB	M784E
			RTS
10			PULB
			LDX	#M7751
			ABX
			STAA	$04,X
			LDAA	>NOTE_NUMBER
			STAA	,X
			LDAA	#$01
			STAA	$08,X
			CLR	$0C,X
			LDAA	EF1T
			INCA
			STAA	$10,X
			LDAA	M776B
			ORAA	#$01
			STAA	M776B
			LDAB	M784E
			RTS

;-------

F_EA9B			CMPB	M784E
			BNE	1F
			LDAA	M776B
			BITA	#$10
			BNE	2F
1			RTS
2			LDAA	M784E
			PSHB
			LDAB	>NOTE_NUMBER_STOP
			JSR	F_8831
			PULB
			BCC	1B
			LDAA	>NOTE_NUMBER_STOP
			CLRB
3			LDX	#M7751
			ABX
			CMPA	,X
			BNE	4F
			TST	$0C,X
			BNE	4F
			BRA	5F
4			INCB
			CMPB	#$04
			BNE	3B
			LDAB	M784E
			RTS
5			LDAA	#$01
			STAA	$0C,X
			LDAA	EF1T
			INCA
			STAA	$14,X
			LDAA	M776B
			ORAA	#$01
			STAA	M776B
			LDAB	M784E
			RTS

;-------

F_EAE6			LDAA	M776B
			ANDA	#$FE
			STAA	M776B
			BITA	#$10
			BNE	1F
			RTS
1			CLRB
2			LDX	#M7751
			ABX
			TST	,X
			BEQ	4F
			LDAA	M776B
			ORAA	#$01
			STAA	M776B
			TST	$04,X
			BEQ	3F
			DEC	$10,X
			BNE	3F
			PSHB
			JSR	F_EB28
			PULB
			LDX	#M7751
			ABX
3			TST	$0C,X
			BEQ	4F
			DEC	$14,X
			BNE	4F
			PSHB
			JSR	F_EBB1
			PULB
4			INCB
			CMPB	#$04
			BCS	2B
			RTS

;-------

F_EB28			PSHB
			LDAB	$08,X
			LDAA	,X
			STAA	>NOTE_NUMBER
1			LDAA	EF1P
			ADDA	>NOTE_NUMBER
			SUBA	#$18
			BMI	3F
2			STAA	>NOTE_NUMBER
			DECB
			BNE	1B
			BRA	6F
3			CMPA	#$C0
			BCS	5F
4			ADDA	#$0C
			BMI	4B
			BRA	2B
5			SUBA	#$0C
			BMI	5B
			BRA	2B
6			LDAA	$04,X
			STAA	>M00F1
			PULB
			CMPB	#$01
			BCS	7F
			BEQ	8F
			CMPB	#$02
			BEQ	9F
			LDAA	#$44
			STAA	>M0058
			BRA	10F
7			LDAA	#$0C
			STAA	>M0058
			BRA	10F
8			LDAA	#$14
			STAA	>M0058
			BRA	10F
9			LDAA	#$24
			STAA	>M0058
			BRA	10F			; unnecessary branch
10			LDAB	M784E
			PSHX
			JSR	NOTE_START
			PULX
			INC	$08,X
			LDAA	$04,X
			LDAB	EF1F
			PSHX
			LDX	#D_EBA9
			ABX
			ADDA	,X
			PULX
			BCS	11F
			CMPA	#$78
			BCC	11F
			BRA	12F
11			CLR	$04,X
			RTS
12			STAA	$04,X
			LDAA	EF1T
			INCA
			STAA	$10,X
			RTS

D_EBA9			FCB	$FF,$76,$3B,$27,$1D,$17,$13,$0E

;-------

F_EBB1			PSHB
			LDAB	$0C,X
			LDAA	,X
			STAA	>NOTE_NUMBER_STOP
1			LDAA	EF1P
			ADDA	>NOTE_NUMBER_STOP
			SUBA	#$18
			BMI	3F
2			STAA	>NOTE_NUMBER_STOP
			DECB
			BNE	1B
			BRA	6F
3			CMPA	#$C0
			BCS	5F
4			ADDA	#$0C
			BMI	4B
			BRA	2B
5			SUBA	#$0C
			BMI	5B
			BRA	2B
6			PULB
			CMPB	#$01
			BCS	7F
			BEQ	8F
			CMPB	#$02
			BEQ	9F
			LDAA	#$44
			BRA	10F
7			LDAA	#$0C
			BRA	10F
8			LDAA	#$14
			BRA	10F
9			LDAA	#$24
			BRA	10F			; unnecessary
10			STAA	>M0058
			LDAB	M784E
			PSHX
			JSR	NOTE_STOP
			PULX
			INC	$0C,X
			LDAA	$0C,X
			CMPA	$08,X
			BNE	11F
			TST	$04,X
			BNE	11F
			CLR	,X
			RTS
11			LDAA	EF1T
			INCA
			STAA	$14,X
			RTS

;-------

F_EC17			LDAA	#$02
			BITA	M776B
			BNE	1F
			RTS
1			INC	M7765
			LDAA	M7765
			CMPA	#$3C
			BEQ	2F
			RTS
2			CLR	M7765
			CLRA
			CLRB
3			LDX	#M775D
			ABX
			TST	,X
			BEQ	4F
			LDX	#INST_VOLUME
			ABX
			CMPA	,X
			BCC	4F
			LDAA	,X
4			INCB
			CMPB	#$08
			BNE	3B
			TAB
			COMB
			LDX	#D_A82B
			ABX
			LDAB	,X
			COMB
			LDX	#D_EF41
			ABX
			LDAA	,X
			STAA	M775B
			TST	EF2D
			BEQ	6F
			LDAB	EF2R_VALUE
			CMPB	#$40
			BCS	5F
			STAA	M775C
			RTS
5			ASLB
			ASLB
			MUL
			STAA	M775C
			RTS
6			LDAB	EF2R_VALUE
			MUL
			STAA	M775C
			RTS

;-------

F_EC77			LDAA	#$02
			BITA	M776B
			BNE	1F
			RTS
1			TST	EF2D
			BNE	2F
			RTS
2			LDX	#M775D
			ABX
			TST	,X
			BNE	3F
			RTS
3			INC	M7766
			LDAA	M7766
			CMPA	#$01
			BEQ	4F
			RTS
4			PSHB
			LDAA	EF2D
			CMPA	#$01
			BEQ	5F
			LDAA	>NOTE_NUMBER
			BRA	6F
5			LDAA	NOTE_VELOCITY
6			ASLA
			LDAB	EF2R_VALUE
			CMPB	#$41
			BCS	10F
			CMPA	#$80
			BEQ	10F
			BCS	8F
			SUBA	#$80
			MUL
			CMPA	#$20
			BCS	7F
			LDAA	#$FF
			BRA	10F
7			ASLD
			ASLD
			ADDA	#$80
			BRA	10F
8			NEGA
			SUBA	#$80
			MUL
			CMPA	#$20
			BCS	9F
			CLRA
			BRA	10F
9			ASLD
			ASLD
			ADDA	#$80
			NEGA
10			JSR	F_ED1E
			PULB
			RTS

;-------

F_ECDD			LDAA	M776B
			BITA	#$02
			BNE	1F
			RTS
1			TST	EF2D
			BNE	2F
			RTS
2			LDX	#M775D
			ABX
			TST	,X
			BNE	3F
			RTS
3			DEC	M7766
			BMI	4F
			RTS
4			CLR	M7766
			RTS

;------

F_ECFE			LDAB	#$02
			BITB	M776B
			BNE	1F
			RTS
1			TST	EF2D
			BEQ	2F
			RTS
2			LDAA	M7836
			SUBA	#$3F
			CMPA	#$80
			BCC	3F
			ASLA
			BRA	4F
3			COMA
			ASLA
4			JSR	F_ED1E
			RTS

;-------	could fallthrough, but doesn't

F_ED1E			LDAB	M775B
			MUL
			TST	EF2D
			BEQ	1F
			LDAB	EF2R_VALUE
			CMPB	#$40
			BCC	2F
			ASLB
			ASLB
			MUL
			BRA	2F
1			LDAB	EF2R_VALUE
			MUL
2			TAB
			LDAA	M775C
			SBA
			TST	EF2S
			BEQ	3F
			PSHA
			TBA
			PULB
3			STAA	M7751
			STAB	M7752
			CLRB
4			LDX	#M775D
			ABX
			LDAA	,X
			BEQ	6F
			LDX	#M7753
			ABX
			BITA	#$02
			BEQ	5F
			LDAA	M7752
			STAA	,X
			BRA	7F
5			LDAA	M7751
			STAA	,X
			BRA	7F
6			LDX	#M7753
			ABX
			CLR	,X
7			INCB
			CMPB	#$08
			BNE	4B
			RTS

;-------

F_ED75			LDAA	#$31
			STAA	M7751
			STAA	M7752
			STAA	M7753
			STAA	M7754
			CLR	M7755
			LDAA	M776B
			ORAA	#$08
			STAA	M776B
			RTS

;-------

F_ED8F			LDAA	M776B
			BITA	#$04
			BNE	1F
			CLV
			RTS
1			CMPB	M784E
			BEQ	2F
			CLV
			RTS
2			LDAA	M784E
			PSHB
			LDAB	>NOTE_NUMBER
			JSR	F_8831
			PULB
			BCS	3F
			CLV
			RTS
3			LDAA	M776B
			BITA	#$08
			BNE	4F
			LDAA	>NOTE_NUMBER
			PSHA
			JSR	CHORD_START
			PULA
			STAA	>NOTE_NUMBER
			SEV
			RTS
4			LDAA	>NOTE_NUMBER
			SUBA	#$24
			SUBA	M7789
			CMPA	#$31
			BCS	5F
			SEV
			RTS
5			LDAB	M7755
			CMPB	#$04
			BCS	6F
			LDAB	M784E
			CLV
			RTS
6			LDX	#M7751
			ABX
			STAA	,X
			INC	M7755
			LDAB	M784E
			CLV
			RTS

;-------

F_EDEA			LDAA	M776B
			BITA	#$04
			BNE	1F
			CLV
			RTS
1			CMPB	M784E
			BEQ	2F
			CLV
			RTS
2			LDAA	M784E
			PSHB
			LDAB	>NOTE_NUMBER_STOP
			JSR	F_8831
			PULB
			BCS	3F
			CLV
			RTS
3			LDAA	M776B
			BITA	#$08
			BNE	4F
			LDAA	>NOTE_NUMBER_STOP
			PSHA
			JSR	CHORD_STOP
			PULA
			STAA	>NOTE_NUMBER_STOP
			SEV
			RTS
4			CLV
			RTS

;-------

F_EE1F			LDAA	M776B
			ANDA	#$0C
			CMPA	#$0C
			BEQ	1F
			RTS
1			TST	M7755
			BNE	2F
			RTS
2			LDX	#M7CE3
			CLRA
			ORAA	$01,X
			ORAA	$03,X
			ORAA	$05,X
			ORAA	$07,X
			ORAA	$09,X
			ORAA	$0B,X
			ORAA	$0D,X
			ORAA	$0F,X
			TSTA
			BEQ	3F
			RTS
3			LDAA	M776B
			ANDA	#$F7
			STAA	M776B
			LDAB	M7789
			ASLB
			ASLB
			LDX	#CHORD
			ABX
			LDD	M7751
			STD	,X
			LDD	M7753
			STD	$02,X
			JSR	F_C95A
			JSR	F_C972
			RTS

;-------
;
; Starts a chord
;
CHORD_START		LDAA	>NOTE_NUMBER
			STAA	CHORD_NOTE
1			SUBA	#$0C
			BCC	1B
			ADDA	#$0C
			TAB
			ASLB
			ASLB
			LDX	#CHORD
			ABX
			LDAA	,X
			CMPA	#$31
			BCC	2F
			SUBA	#$18
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER
			LDAB	M784E
			PSHX
			JSR	NOTE_START
			PULX
2			LDAA	$01,X
			CMPA	#$31
			BCC	3F
			SUBA	#$18
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER
			LDAB	M784E
			PSHX
			JSR	NOTE_START
			PULX
3			LDAA	$02,X
			CMPA	#$31
			BCC	4F
			SUBA	#$18
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER
			LDAB	M784E
			PSHX
			JSR	NOTE_START
			PULX
4			LDAA	$03,X
			CMPA	#$31
			BCC	5F
			SUBA	#$18
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER
			LDAB	M784E
			PSHX
			JSR	NOTE_START
			PULX
5			RTS

;-------

CHORD_STOP		LDAA	>NOTE_NUMBER_STOP			; get the original note
			STAA	CHORD_NOTE		; save it
1			SUBA	#12			; calculate note % 12
			BCC	1B			; -
			ADDA	#12			; -
			TAB				; B <- remainder * 4
			ASLB				; -
			ASLB				; -
			LDX	#CHORD			; offset to Chord effect table
			ABX				; -
			LDAA	,X			; get first note
			CMPA	#49			; is it 49?
			BCC	2F			; if so, go to next note
			SUBA	#24			; rebase to 24
			ADDA	CHORD_NOTE		; add to the note we started with
			STAA	>NOTE_NUMBER_STOP
			LDAB	M784E
			PSHX
			JSR	NOTE_STOP
			PULX
2			LDAA	$01,X
			CMPA	#49
			BCC	3F
			SUBA	#24
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER_STOP
			LDAB	M784E
			PSHX
			JSR	NOTE_STOP
			PULX
3			LDAA	$02,X
			CMPA	#49
			BCC	4F
			SUBA	#24
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER_STOP
			LDAB	M784E
			PSHX
			JSR	NOTE_STOP
			PULX
4			LDAA	$03,X
			CMPA	#49
			BCC	5F
			SUBA	#24
			ADDA	CHORD_NOTE
			STAA	>NOTE_NUMBER_STOP
			LDAB	M784E
			PSHX
			JSR	NOTE_STOP
			PULX
5			RTS

;-------

D_EF41			FCB	$00,$08,$0C,$13,$18,$1D,$20,$27
			FCB	$2B,$30,$33,$38,$3C,$3F,$43,$47
			FCB	$4B,$50,$54,$58,$5B,$5F,$63,$65
			FCB	$68,$6C,$6F,$72,$75,$78,$7B,$7D
			FCB	$80,$83,$9A,$9C,$8B,$8D,$90,$92
			FCB	$94,$96,$99,$9B,$9D,$9F,$A1,$A3
			FCB	$A5,$A7,$A9,$AB,$AD,$AE,$B0,$B2
			FCB	$B3,$B5,$B7,$B8,$BA,$BB,$BD,$BE
			FCB	$BF,$C1,$C2,$C4,$C5,$C6,$C7,$C9
			FCB	$CA,$CB,$CC,$CD,$CE,$CF,$D1,$D1
			FCB	$D2,$D3,$D4,$D5,$D6,$D7,$D8,$D8
			FCB	$D9,$DA,$DB,$DC,$DC,$DD,$DE,$DE
			FCB	$DF,$E0,$E1,$E1,$E2,$E2,$E3,$E4
			FCB	$E4,$E5,$E5,$E6,$E6,$E7,$E7,$E8
			FCB	$E8,$E9,$E9,$EA,$EA,$EB,$EB,$EB
			FCB	$EC,$EC,$ED,$ED,$ED,$EE,$EE,$EE
			FCB	$EF,$EF,$F0,$F0,$F0,$F0,$F1,$F1
			FCB	$F1,$F2,$F2,$F2,$F2,$F3,$F3,$F3
			FCB	$F3,$F4,$F4,$F4,$F4,$F5,$F5,$F5
			FCB	$F5,$F5,$F6,$F6,$F6,$F6,$F6,$F6
			FCB	$F7,$F7,$F7,$F7,$F7,$F7,$F8,$F8
			FCB	$F8,$F8,$F8,$F8,$F8,$F9,$F9,$F9
			FCB	$F9,$F9,$F9,$F9,$F9,$FA,$FA,$FA
			FCB	$FA,$FA,$FA,$FA,$FA,$FA,$FA,$FA
			FCB	$FB,$FB,$FB,$FB,$FB,$FB,$FB,$FB
			FCB	$FB,$FB,$FB,$FB,$FB,$FC,$FC,$FC
			FCB	$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
			FCB	$FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
			FCB	$FD,$FD,$FD,$FD,$FD,$FD,$FD,$FD
			FCB	$FD,$FD,$FD,$FD,$FD,$FD,$FD,$FD
			FCB	$FD,$FD,$FD,$FD,$FD,$FD,$FD,$FD
			FCB	$FD,$FD,$FD,$FD,$FD,$FE,$FE,$FF

S_VERSION		FCC	"V1.6  03-Feb-88 "
			FCB	$00

;-------

DELAY_30_x_4500		LDAB	#30

;-------	fallthrough

DELAY_B_x_4500
0			LDX	#4500
1			DEX
			BNE	1B
			DECB
			BNE	0B
			RTS

;-------
;
; unreachable filler
;
			RTS
			RTS
			RTS
			RTS
			RTS
			RTS
			RTS
			BRA	*

;-------

			INCLUDE	"inc/vecs.asm"
